{"config":{"lang":["en"],"separator":"[\\s\\-,:!=\\[\\]()\"/]+|(?!\\b)(?=[A-Z][a-z])|\\.(?!\\d)|&[lg]t;","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Developer Onboarding Program","text":"<p>Welcome to the comprehensive onboarding program for  developers! This repository contains a structured, step-by-step guide to help new developers build a solid foundation in software engineering principles.</p>"},{"location":"#program-overview","title":"Program Overview","text":"<p>This onboarding program covers essential topics that every developer should master.</p>"},{"location":"#repository-structure","title":"Repository Structure","text":"<pre><code>Developer-onboarding/\n\u251c\u2500\u2500 README.md                          # You are here\n\u251c\u2500\u2500 ONBOARDING-GUIDE.md               # Main comprehensive guide (START HERE!)\n\u251c\u2500\u2500 debuging.md                        # Debugging tools and configuration\n\u251c\u2500\u2500 programming-languages/             # Programming fundamentals\n\u2502   \u251c\u2500\u2500 dev-environment.md            # Development environment setup\n\u2502   \u251c\u2500\u2500 html-css.md                    # HTML &amp; CSS resources\n\u2502   \u251c\u2500\u2500 javascript.md                 # JavaScript resources\n\u2502   \u2514\u2500\u2500 php-mysql.md                   # PHP &amp; MySQL resources\n\u251c\u2500\u2500 operating-system/          # OS fundamentals\n\u2502   \u2514\u2500\u2500 os-fundamentals.md            # CLI, processes, system monitoring\n\u2514\u2500\u2500 web-fundamentals/                 # Web technologies\n    \u2514\u2500\u2500 web-basics.md                 # DNS, HTTP, servers, security\n</code></pre>"},{"location":"#getting-started","title":"Getting Started","text":""},{"location":"#step-1-read-the-main-guide","title":"Step 1: Read the Main Guide","text":"<p>Start with ONBOARDING-GUIDE.md - This is your roadmap for the next 6 weeks!</p>"},{"location":"#step-2-follow-the-weekly-schedule","title":"Step 2: Follow the Weekly Schedule","text":"<p>The onboarding is structured as a 6-week program:</p> <ul> <li>Week 1: Introduction &amp; Development Environment Setup</li> <li>Week 2: Programming Languages (HTML/CSS, JavaScript, PHP/MySQL)</li> <li>Week 3: Operating System Basics</li> <li>Week 4: Web Fundamentals</li> <li>Week 5-6: Practical Projects &amp; Code Review</li> </ul>"},{"location":"#step-3-complete-exercises-and-quizzes","title":"Step 3: Complete Exercises and Quizzes","text":"<p>Each section includes:</p> <ul> <li>\u2705 Hands-on exercises</li> <li>\u2705 Practice problems</li> <li>\u2705 Quiz questions</li> <li>\u2705 Real-world projects</li> </ul>"},{"location":"#quick-links","title":"Quick Links","text":""},{"location":"#core-resources","title":"Core Resources","text":"<ul> <li>Main Onboarding Guide - START HERE</li> <li>Debugging Setup</li> <li>Development Environment</li> </ul>"},{"location":"#programming-languages","title":"Programming Languages","text":"<ul> <li>HTML &amp; CSS</li> <li>JavaScript</li> <li>PHP &amp; MySQL</li> </ul>"},{"location":"#operating-system","title":"Operating System","text":"<ul> <li>OS Fundamentals</li> <li>Command-Line Interface (CLI)</li> <li>Process Management</li> <li>File Permissions</li> <li>Shell Scripting</li> </ul>"},{"location":"#web-technologies","title":"Web Technologies","text":"<ul> <li>Web Basics</li> <li>How the Web Works</li> <li>DNS &amp; HTTP/HTTPS</li> <li>Web Servers</li> <li>Browser Rendering</li> <li>Email Systems</li> <li>Web Security</li> </ul>"},{"location":"#learning-path","title":"Learning Path","text":""},{"location":"#prerequisites","title":"Prerequisites","text":"<ul> <li>Basic computer literacy</li> <li>Willingness to learn</li> <li>Curiosity and persistence</li> </ul>"},{"location":"#what-youll-learn","title":"What You'll Learn","text":"<ol> <li>Programming Fundamentals</li> <li>HTML5 &amp; CSS3</li> <li>Modern JavaScript (ES6+)</li> <li> <p>PHP 8 &amp; MySQL</p> </li> <li> <p>Development Tools</p> </li> <li>Git version control</li> <li>IDEs and code editors</li> <li>Debugging tools</li> <li> <p>Command-line proficiency</p> </li> <li> <p>Operating Systems</p> </li> <li>CLI operations</li> <li>Process management</li> <li>Shell scripting</li> <li> <p>System monitoring</p> </li> <li> <p>Web Technologies</p> </li> <li>Client-server architecture</li> <li>HTTP/HTTPS protocols</li> <li>DNS and web servers</li> <li>Browser rendering</li> <li> <p>Web security</p> </li> <li> <p>Professional Skills</p> </li> <li>Code review practices</li> <li>Clean code principles</li> <li>Problem-solving</li> <li>Documentation</li> <li>Collaboration</li> </ol>"},{"location":"#required-software","title":"Required Software","text":""},{"location":"#essential-tools","title":"Essential Tools","text":"<ul> <li>Laravel Herd - Local PHP development environment</li> <li>MySQL/MariaDB - Database management</li> <li>Node.js &amp; NVM - JavaScript runtime</li> <li>Git - Version control</li> <li>Code Editor - VSCode or PhpStorm recommended</li> </ul>"},{"location":"#wordpress-debugging-plugins","title":"WordPress Debugging Plugins","text":"<ul> <li>User Switching</li> <li>Query Monitor</li> <li>WP Crontrol</li> <li>WP Console</li> <li>WP Mail Logging</li> </ul> <p>See dev-environment.md and debuging.md for detailed setup instructions.</p>"},{"location":"#assessment-certification","title":"Assessment &amp; Certification","text":""},{"location":"#weekly-quizzes","title":"Weekly Quizzes","text":"<p>Complete quizzes at the end of each module to test your knowledge and track progress.</p>"},{"location":"#final-project","title":"Final Project","text":"<p>Build a complete web application demonstrating: - Full-stack development skills - Clean code practices - Security implementation - Responsive design - Database integration - Version control usage - Documentation</p>"},{"location":"#completion-criteria","title":"Completion Criteria","text":"<ul> <li>\u2705 All weekly modules completed</li> <li>\u2705 All quizzes passed (70% minimum)</li> <li>\u2705 Final project approved</li> <li>\u2705 Code reviews completed</li> <li>\u2705 Mentor sign-off</li> </ul>"},{"location":"#tips-for-success","title":"Tips for Success","text":"<ol> <li>Follow the Schedule - The program is designed to build knowledge progressively</li> <li>Practice Daily - Coding is a skill that improves with consistent practice</li> <li>Ask Questions - No question is too small or silly</li> <li>Read Code - Learn from examples in the codebase</li> <li>Take Notes - Document your learnings for future reference</li> <li>Be Patient - Learning takes time, don't rush</li> <li>Collaborate - Work with teammates, pair program</li> <li>Stay Curious - Explore beyond the curriculum</li> </ol>"},{"location":"#getting-help","title":"Getting Help","text":""},{"location":"#when-youre-stuck","title":"When You're Stuck","text":"<ol> <li>Search first: Google, Stack Overflow, documentation</li> <li>Debug: Use browser dev tools and debugger</li> <li>Ask your mentor: Schedule time with assigned mentor</li> <li>Team chat: Post questions in team channels</li> <li>Pair programming: Work with a teammate</li> </ol>"},{"location":"#support-resources","title":"Support Resources","text":"<ul> <li>Team Slack/Discord channel</li> <li>Weekly mentor meetings</li> <li>Peer study groups</li> <li>Official documentation</li> <li>Online communities</li> </ul>"},{"location":"#external-resources","title":"External Resources","text":""},{"location":"#documentation","title":"Documentation","text":"<ul> <li>MDN Web Docs</li> <li>PHP Documentation</li> <li>MySQL Documentation</li> <li>Git Documentation</li> </ul>"},{"location":"#learning-platforms","title":"Learning Platforms","text":"<ul> <li>freeCodeCamp</li> <li>Codecademy</li> <li>Frontend Masters</li> </ul>"},{"location":"#communities","title":"Communities","text":"<ul> <li>Stack Overflow</li> <li>Dev.to</li> <li>Reddit Web Dev</li> <li>GitHub Discussions</li> </ul>"},{"location":"#timeline","title":"Timeline","text":""},{"location":"#week-by-week-breakdown","title":"Week-by-Week Breakdown","text":"Week Focus Area Key Topics Week 1 Setup &amp; Introduction Company intro, tool setup, Git basics Week 2 Programming Languages HTML/CSS, JavaScript, PHP/MySQL Week 3 Operating Systems CLI, processes, shell scripting Week 4 Web Fundamentals DNS, HTTP, servers, security Week 5 Practical Projects Build responsive website Week 6 Final Project PHP/MySQL application, code review"},{"location":"#daily-commitment","title":"Daily Commitment","text":"<ul> <li>2-3 hours of study and practice</li> <li>1-2 hours of hands-on coding</li> <li>30 minutes of reading/research</li> </ul>"},{"location":"#whats-next","title":"What's Next?","text":"<p>After completing this onboarding program, you'll be ready to: - Contribute to team projects - Build full-stack web applications - Debug and troubleshoot effectively - Collaborate using Git - Follow industry best practices - Continue learning independently</p>"},{"location":"#license","title":"License","text":"<p>This onboarding material is for internal use. Please respect any third-party resources and their respective licenses.</p>"},{"location":"#ready-to-begin","title":"Ready to Begin?","text":"<p>Start your journey here: ONBOARDING-GUIDE.md</p> <p>Good luck, and welcome to the team!</p> <p>Last updated: October 2025</p>"},{"location":"CHANGELOG/","title":"Changelog - Programming Languages Update","text":""},{"location":"CHANGELOG/#date-october-2-2025","title":"Date: October 2, 2025","text":""},{"location":"CHANGELOG/#objective","title":"Objective","text":"<p>Updated programming language guides to be more concise, easy to follow, and integrated helpful content from the mrabbani gist.</p>"},{"location":"CHANGELOG/#whats-new","title":"What's New","text":""},{"location":"CHANGELOG/#1-restructured-all-programming-guides","title":"1. Restructured All Programming Guides \ud83d\udcdd","text":"<p>All programming language files now follow a consistent, easy-to-scan format:</p> <p>New Structure:</p> <ul> <li>\ud83c\udfaf Quick Start section with beginner-friendly resources</li> <li>\ud83d\udcda Core Learning resources organized by topic</li> <li>\ud83d\udee0\ufe0f Required Tools Setup with verification commands</li> <li>\ud83d\udcbb Practice Problems with hints in collapsible sections</li> <li>\ud83e\udd14 Deep Dive Topics for advanced exploration</li> <li>\u2705 Test Your Knowledge section with quiz links</li> </ul>"},{"location":"CHANGELOG/#2-enhanced-html-css-guide","title":"2. Enhanced HTML &amp; CSS Guide \ud83c\udfa8","text":"<p>Additions:</p> <ul> <li>Added Laracasts courses:</li> <li>HTML &amp; CSS Workshop</li> <li>Modern CSS for Backend Developers</li> <li>Added W3Schools tutorial</li> <li>Added 1-hour video crash course</li> <li>Improved practice exercise with better responsive solution</li> <li>Added emojis for better visual scanning</li> <li>More concise resource descriptions</li> </ul> <p>File: <code>programming-languages/html-css.md</code></p>"},{"location":"CHANGELOG/#3-enhanced-javascript-guide","title":"3. Enhanced JavaScript Guide \u26a1","text":"<p>Additions:</p> <ul> <li>Added Laracasts: JavaScript - The First Steps</li> <li>Added Required Tools Setup section:</li> <li>Node.js installation</li> <li>npm verification</li> <li>nvm setup with commands</li> <li>Improved practice problems with hints in collapsible sections</li> <li>Added more deep dive topics (Hoisting, Promises)</li> <li>Better formatting with emojis and visual hierarchy</li> </ul> <p>File: <code>programming-languages/javascript.md</code></p>"},{"location":"CHANGELOG/#4-enhanced-php-mysql-guide","title":"4. Enhanced PHP &amp; MySQL Guide \ud83d\udc18","text":"<p>Additions:</p> <ul> <li>Added Laracasts video courses:</li> <li>PHP for Beginners (2023 Edition)</li> <li>OOP Principles in PHP (2024 Edition)</li> <li>MySQL Database Design</li> <li>Added Required Tools Setup section:</li> <li>Composer installation</li> <li>Laravel Herd setup</li> <li>MySQL/MariaDB</li> <li>Database tool options (TablePlus, Sequel Ace, PHPMyAdmin, MySQL Workbench)</li> <li>Added verification commands for all tools</li> <li>Improved practice problems with collapsible hints</li> <li>Added more deep dive topics (Autoloading, Error Handling)</li> </ul> <p>File: <code>programming-languages/php-mysql.md</code></p>"},{"location":"CHANGELOG/#5-completely-rewritten-development-environment-guide","title":"5. Completely Rewritten Development Environment Guide \u2699\ufe0f","text":"<p>New Content:</p> <ul> <li>Pre-boarding Checklist (MacBook, GitHub, Slack access)</li> <li>VS Code setup with recommended extensions</li> <li>Laravel Herd detailed setup</li> <li>Composer installation</li> <li>Node.js, npm, nvm complete setup</li> <li>Git configuration commands</li> <li>Oh My Zsh installation (optional)</li> <li>Database tools comparison (TablePlus, Sequel Ace, PHPMyAdmin, MySQL Workbench)</li> <li>Quick setup verification script</li> <li>Installation order for smooth setup</li> <li>Troubleshooting section for common issues</li> <li>Estimated setup time: 1-2 hours</li> </ul> <p>File: <code>programming-languages/dev-environment.md</code> Before: 7 lines After: 178 lines</p>"},{"location":"CHANGELOG/#6-new-wordpress-development-guide","title":"6. NEW: WordPress Development Guide \ud83c\udf10","text":"<p>Brand New Comprehensive Guide Including:</p>"},{"location":"CHANGELOG/#wordpress-administration","title":"WordPress Administration","text":"<ul> <li>Dashboard exploration</li> <li>Content management</li> <li>User management</li> </ul>"},{"location":"CHANGELOG/#plugin-development","title":"Plugin Development","text":"<ul> <li>WordPress Plugin Handbook</li> <li>Actions &amp; Filters with examples</li> <li>Plugin structure</li> <li>Security best practices</li> <li>Database queries</li> <li>WordPress coding standards</li> </ul>"},{"location":"CHANGELOG/#wp-cli-command-line-interface","title":"WP-CLI (Command Line Interface)","text":"<ul> <li>WP-CLI documentation</li> <li>Essential commands with examples</li> <li>Plugin/theme management</li> <li>Database operations</li> <li>Content generation</li> </ul>"},{"location":"CHANGELOG/#theme-development","title":"Theme Development","text":"<ul> <li>WordPress Theme Handbook</li> <li>Template hierarchy</li> <li>Custom post types</li> <li>Child themes</li> </ul>"},{"location":"CHANGELOG/#modern-wordpress-gutenberg","title":"Modern WordPress (Gutenberg)","text":"<ul> <li>React tutorial</li> <li>Block development</li> <li>@wordpress/create-block</li> <li>Block structure examples</li> </ul>"},{"location":"CHANGELOG/#woocommerce-development","title":"WooCommerce Development","text":"<ul> <li>Product management</li> <li>Orders and checkout</li> <li>Payment gateways</li> <li>Common hooks and filters</li> </ul>"},{"location":"CHANGELOG/#dokan-multi-vendor","title":"Dokan Multi-vendor","text":"<ul> <li>Vendor dashboard</li> <li>Commission management</li> <li>Custom integrations</li> </ul> <p>Also Includes:</p> <ul> <li>Development workflow</li> <li>Project structure</li> <li>Plugin header template</li> <li>Security examples</li> <li>Essential WordPress functions</li> <li>Recommended debugging plugins</li> <li>Learning projects (beginner to advanced)</li> <li>Developer checklist</li> </ul> <p>File: <code>programming-languages/wordpress.md</code> (NEW) Lines: 467 lines of comprehensive content</p>"},{"location":"CHANGELOG/#7-new-programming-languages-index","title":"7. NEW: Programming Languages Index \ud83d\udcda","text":"<p>Created comprehensive README for Programming Languages directory:</p> <p>Sections:</p> <ul> <li>Learning Path - Step-by-step guide (1 \u2192 5)</li> <li>Quick Reference Table - By technology, time, difficulty</li> <li>Resource Directory - Videos, docs, games, quizzes</li> <li>Tools Reference - Complete tool list</li> <li>Learning Tips - For beginners vs experienced developers</li> <li>Progress Tracking - Checklist for all modules</li> <li>Next Steps - After completion roadmap</li> <li>Goals - Clear learning outcomes</li> </ul> <p>File: <code>programming-languages/README.md</code> (NEW)</p>"},{"location":"CHANGELOG/#comparison-before-vs-after","title":"Comparison: Before vs After","text":"File Before After Change html-css.md 74 lines 81 lines \u2705 Improved javascript.md 71 lines 92 lines \u2705 Improved php-mysql.md 80 lines 115 lines \u2705 Improved dev-environment.md 7 lines 178 lines \ud83d\ude80 Completely rewritten wordpress.md - 467 lines \u2728 NEW README.md - 207 lines \u2728 NEW <p>Total Addition: ~1,000 lines of quality content!</p>"},{"location":"CHANGELOG/#design-improvements","title":"\ud83c\udfa8 Design Improvements","text":""},{"location":"CHANGELOG/#visual-enhancements","title":"Visual Enhancements","text":"<ul> <li>\u2705 Added emojis for better scanning (\ud83c\udfaf \ud83d\udee0\ufe0f \ud83d\udcbb \ud83e\udd14 \u2705)</li> <li>\u2705 Clear section headers with icons</li> <li>\u2705 Consistent formatting across all files</li> <li>\u2705 Better whitespace and readability</li> <li>\u2705 Collapsible hint sections (HTML <code>&lt;details&gt;</code> tags)</li> </ul>"},{"location":"CHANGELOG/#content-structure","title":"Content Structure","text":"<ul> <li>\u2705 Quick Start sections for immediate action</li> <li>\u2705 Required Tools Setup with verification commands</li> <li>\u2705 Practice problems with hints</li> <li>\u2705 Deep Dive topics for exploration</li> <li>\u2705 Clear quiz links with goals (70%+)</li> </ul>"},{"location":"CHANGELOG/#new-resources-added","title":"New Resources Added","text":""},{"location":"CHANGELOG/#from-mrabbani-gist","title":"From mrabbani Gist","text":"<ul> <li>\u2705 Laracasts courses (6 courses added)</li> <li>\u2705 W3Schools tutorials</li> <li>\u2705 YouTube video tutorials</li> <li>\u2705 Composer installation</li> <li>\u2705 Laravel Herd setup</li> <li>\u2705 Database tools (TablePlus, Sequel Ace, etc.)</li> <li>\u2705 Oh My Zsh</li> <li>\u2705 WordPress Plugin Development</li> <li>\u2705 WP-CLI</li> <li>\u2705 WordPress Themes</li> <li>\u2705 ReactJS for Gutenberg</li> <li>\u2705 WooCommerce</li> <li>\u2705 Dokan Plugin</li> <li>\u2705 VS Code extensions</li> </ul>"},{"location":"CHANGELOG/#additional-resources","title":"Additional Resources","text":"<ul> <li>\u2705 Node.js, npm, nvm setup</li> <li>\u2705 Git configuration</li> <li>\u2705 Development workflow</li> <li>\u2705 Security best practices</li> <li>\u2705 WordPress coding standards</li> <li>\u2705 Project structure examples</li> </ul>"},{"location":"CHANGELOG/#key-improvements","title":"Key Improvements","text":""},{"location":"CHANGELOG/#1-easier-to-follow","title":"1. Easier to Follow","text":"<ul> <li>Clear progression path</li> <li>Step-by-step instructions</li> <li>Verification commands at each step</li> <li>Time estimates for each section</li> </ul>"},{"location":"CHANGELOG/#2-more-practical","title":"2. More Practical","text":"<ul> <li>Practice problems with hints</li> <li>Real code examples</li> <li>Verification commands</li> <li>Project structure templates</li> </ul>"},{"location":"CHANGELOG/#3-better-learning-resources","title":"3. Better Learning Resources","text":"<ul> <li>Video courses for visual learners</li> <li>Interactive games (Flexbox Froggy, Grid Garden)</li> <li>Official documentation links</li> <li>Multiple learning paths</li> </ul>"},{"location":"CHANGELOG/#4-wordpress-focused","title":"4. WordPress-Focused","text":"<ul> <li>Complete WordPress development guide</li> <li>Real-world e-commerce focus (WooCommerce, Dokan)</li> <li>Modern development (Gutenberg blocks)</li> <li>Professional workflow examples</li> </ul>"},{"location":"CHANGELOG/#5-tool-focused","title":"5. Tool-Focused","text":"<ul> <li>Clear tool requirements</li> <li>Installation instructions</li> <li>Verification commands</li> <li>Troubleshooting help</li> </ul>"},{"location":"CHANGELOG/#impact","title":"Impact","text":""},{"location":"CHANGELOG/#for-learners","title":"For Learners","text":"<ul> <li>Faster onboarding - Clear path, no confusion</li> <li>Better resources - Video + text + interactive</li> <li>Practical skills - Real examples and projects</li> <li>WordPress ready - Industry-relevant skills</li> </ul>"},{"location":"CHANGELOG/#for-mentors","title":"For Mentors","text":"<ul> <li>Easy to guide - Clear structure to follow</li> <li>Progress tracking - Built-in checklists</li> <li>Consistent format - Same structure across all docs</li> <li>Resource library - Just point to sections</li> </ul>"},{"location":"CHANGELOG/#for-team","title":"For Team","text":"<ul> <li>Standardized onboarding - Everyone learns same way</li> <li>WordPress expertise - Team-specific skills</li> <li>Modern stack - Latest tools and practices</li> <li>Complete coverage - Nothing missing</li> </ul>"},{"location":"CHANGELOG/#metrics","title":"\ud83d\udcc8 Metrics","text":""},{"location":"CHANGELOG/#content-added","title":"Content Added","text":"<ul> <li>New files: 2</li> <li>Enhanced files: 4</li> <li>Total lines added: ~1,000</li> <li>New resources: 20+</li> <li>Video courses: 6</li> <li>New tools documented: 10+</li> </ul>"},{"location":"CHANGELOG/#learning-path","title":"Learning Path","text":"<ul> <li>Before: Basic HTML/CSS/JS/PHP</li> <li>After: Complete web dev + WordPress + E-commerce</li> <li>Time to complete: 4-6 weeks (vs 2-3 weeks before)</li> <li>Skills gained: 3x more comprehensive</li> </ul>"},{"location":"CHANGELOG/#checklist-of-changes","title":"Checklist of Changes","text":"<ul> <li> Enhanced HTML &amp; CSS guide</li> <li> Enhanced JavaScript guide</li> <li> Enhanced PHP &amp; MySQL guide</li> <li> Rewrote development environment guide</li> <li> Created WordPress development guide</li> <li> Created Programming Languages README/index</li> <li> Added Laracasts courses (6 courses)</li> <li> Added video tutorials</li> <li> Added interactive games</li> <li> Added tool installation guides</li> <li> Added verification commands</li> <li> Added practice problems with hints</li> <li> Added WordPress-specific content</li> <li> Added WooCommerce content</li> <li> Added Dokan content</li> <li> Added Gutenberg content</li> <li> Added WP-CLI documentation</li> <li> Improved formatting with emojis</li> <li> Created consistent structure</li> <li> Added collapsible hints</li> <li> Added troubleshooting sections</li> </ul>"},{"location":"CHANGELOG/#learning-path-summary","title":"\ud83c\udf93 Learning Path Summary","text":"<p>Complete Path (4-6 weeks):</p> <pre><code>Week 1: Setup + HTML &amp; CSS\n   \u2193\nWeek 2: JavaScript + PHP &amp; MySQL  \n   \u2193\nWeek 3-4: WordPress Basics + Plugin Development\n   \u2193\nWeek 5-6: Gutenberg + WooCommerce + Dokan\n   \u2193\nReady for Production!\n</code></pre>"},{"location":"CHANGELOG/#files-modified","title":"Files Modified","text":"<ol> <li><code>programming-languages/html-css.md</code> - Enhanced</li> <li><code>programming-languages/javascript.md</code> - Enhanced</li> <li><code>programming-languages/php-mysql.md</code> - Enhanced</li> <li><code>programming-languages/dev-environment.md</code> - Completely rewritten</li> <li><code>programming-languages/wordpress.md</code> - NEW</li> <li><code>programming-languages/README.md</code> - NEW</li> <li><code>CHANGELOG.md</code> - NEW (this file)</li> </ol>"},{"location":"CHANGELOG/#future-improvements","title":"\ud83d\udd2e Future Improvements","text":"<p>Potential additions for future updates:</p> <ul> <li> Advanced WordPress topics (REST API, Custom Endpoints)</li> <li> Testing in WordPress (PHPUnit, Jest)</li> <li> WordPress security deep dive</li> <li> Performance optimization guide</li> <li> Deployment workflows</li> <li> CI/CD for WordPress</li> <li> Docker for WordPress development</li> <li> Advanced WooCommerce topics</li> <li> Video tutorials (record custom courses)</li> <li> Interactive coding exercises</li> </ul>"},{"location":"CHANGELOG/#credits","title":"Credits","text":"<p>Resources Integrated From:</p> <ul> <li>Industry-standard web development practices</li> <li>mrabbani's Developer Onboarding Gist</li> <li>Laracasts</li> <li>WordPress.org</li> <li>WP-CLI</li> </ul>"},{"location":"CHANGELOG/#feedback","title":"Feedback","text":"<p>If you have suggestions for improvements: 1. Test the guides with real learners 2. Collect feedback on clarity 3. Track completion times 4. Identify pain points 5. Update accordingly</p> <p>These updates make the onboarding program more practical, comprehensive, and focused on real-world WordPress development. \ud83d\ude80</p>"},{"location":"COURSE-LINKS/","title":"Developer Learning Resources - Complete Reference","text":"<p>This document contains curated learning resources and external courses for web development fundamentals.</p>"},{"location":"COURSE-LINKS/#overview","title":"Overview","text":"<p>This guide provides essential learning resources for WordPress and web development, covering fundamental engineering concepts to build a strong foundation for developers entering the field.</p>"},{"location":"COURSE-LINKS/#course-modules","title":"Course Modules","text":""},{"location":"COURSE-LINKS/#1-programming-languages","title":"1. Programming Languages","text":""},{"location":"COURSE-LINKS/#11-html-css","title":"1.1 HTML &amp; CSS","text":"<p>Topics Covered:</p> <ul> <li>HTML5 structure and semantic tags</li> <li>CSS3 styling and layouts</li> <li>Flexbox and Grid</li> <li>Responsive design</li> <li>BEM methodology</li> </ul> <p>Key Learning Resources Referenced:</p> <ul> <li>MDN Web Docs (HTML &amp; CSS)</li> <li>Learn to Code HTML &amp; CSS by Shay Howe</li> <li>Flexbox Froggy (interactive game)</li> <li>CSS Grid Garden (interactive game)</li> <li>Code standards and best practices</li> </ul>"},{"location":"COURSE-LINKS/#12-javascript","title":"1.2 JavaScript","text":"<p>Topics Covered:</p> <ul> <li>JavaScript fundamentals</li> <li>ES6+ features</li> <li>Closures and scope</li> <li>Event loop</li> <li>Asynchronous programming</li> <li>Clean code concepts</li> </ul> <p>Key Learning Resources Referenced:</p> <ul> <li>Wes Bos JavaScript Notes &amp; Reference</li> <li>ES6 Tutorial (javascripttutorial.net)</li> <li>ECMAScript History</li> <li>Clean Code JavaScript (GitHub repo)</li> <li>ESNext features</li> </ul>"},{"location":"COURSE-LINKS/#13-php-mysql","title":"1.3 PHP &amp; MySQL","text":"<p>Topics Covered:</p> <ul> <li>PHP 8 features and syntax</li> <li>PHP namespaces</li> <li>MySQL database operations</li> <li>Prepared statements</li> <li>Clean code in PHP</li> </ul> <p>Key Learning Resources Referenced:</p> <ul> <li>PHP 8 Tutorial (W3Schools)</li> <li>PHP Tutorial (TutorialsPoint)</li> <li>Clean Code PHP (GitHub repo)</li> <li>PHP Language Reference</li> <li>MySQL Database tutorials</li> </ul>"},{"location":"COURSE-LINKS/#2-operating-system-basics","title":"2. Operating System Basics","text":"<p>Topics Covered:</p> <ul> <li>Command-line interface (CLI)</li> <li>Process management</li> <li>Inter-process communication</li> <li>Threads and concurrency</li> <li>System monitoring</li> <li>Shell scripting</li> </ul> <p>Key Concepts:</p> <ul> <li>Terminal operations and navigation</li> <li>File system and permissions</li> <li>Process lifecycle and signals</li> <li>Background and foreground processes</li> <li>Cron jobs and task scheduling</li> </ul>"},{"location":"COURSE-LINKS/#3-setting-up-development-environment","title":"3. Setting up Development Environment","text":"<p>Topics Covered:</p> <ul> <li>Package installation and management</li> <li>Local server setup</li> <li>IDE configuration</li> <li>Version control (Git and SVN)</li> <li>Debugging tools</li> <li>Development workflows</li> </ul> <p>Key Tools:</p> <ul> <li>Git for version control</li> <li>Local development servers</li> <li>Code editors and IDEs</li> <li>Package managers</li> <li>Debugging extensions</li> </ul>"},{"location":"COURSE-LINKS/#4-web-basics","title":"4. Web Basics","text":""},{"location":"COURSE-LINKS/#41-how-the-web-works","title":"4.1 How the Web Works","text":"<p>Topics Covered:</p> <ul> <li>Client-server architecture</li> <li>Request-response cycle</li> <li>Web browsers and rendering</li> <li>URLs and URIs</li> </ul>"},{"location":"COURSE-LINKS/#42-dns-domain-name-system","title":"4.2 DNS (Domain Name System)","text":"<p>Topics Covered:</p> <ul> <li>DNS hierarchy</li> <li>DNS record types (A, AAAA, CNAME, MX, TXT, NS)</li> <li>DNS resolution process</li> <li>DNS propagation</li> <li>DNS commands (dig, nslookup, host)</li> </ul>"},{"location":"COURSE-LINKS/#43-httphttps","title":"4.3 HTTP/HTTPS","text":"<p>Topics Covered:</p> <ul> <li>HTTP methods (GET, POST, PUT, PATCH, DELETE)</li> <li>HTTP status codes</li> <li>HTTP headers</li> <li>HTTPS and SSL/TLS</li> <li>Request and response structure</li> </ul>"},{"location":"COURSE-LINKS/#44-web-servers","title":"4.4 Web Servers","text":"<p>Topics Covered:</p> <ul> <li>Apache HTTP Server</li> <li>Nginx</li> <li>Virtual hosts</li> <li>Reverse proxy</li> <li>Load balancing</li> <li>Server configuration</li> </ul>"},{"location":"COURSE-LINKS/#45-rendering-engines","title":"4.5 Rendering Engines","text":"<p>Topics Covered:</p> <ul> <li>Browser rendering engines (Blink, WebKit, Gecko)</li> <li>Critical Rendering Path</li> <li>DOM and CSSOM</li> <li>Render blocking resources</li> <li>Browser caching</li> </ul>"},{"location":"COURSE-LINKS/#46-email-systems","title":"4.6 Email Systems","text":"<p>Topics Covered:</p> <ul> <li>SMTP, POP3, IMAP protocols</li> <li>Email authentication (SPF, DKIM, DMARC)</li> <li>Sending emails from applications</li> <li>Email deliverability</li> </ul>"},{"location":"COURSE-LINKS/#quizzes-and-assessments","title":"Quizzes and Assessments","text":"<p>Complete quizzes to test your knowledge:</p> <ol> <li>HTML &amp; CSS Quiz - Minimum passing score: 70%</li> <li>JavaScript Quiz - Minimum passing score: 70%</li> <li>PHP &amp; MySQL Quiz - Minimum passing score: 70%</li> </ol>"},{"location":"COURSE-LINKS/#course-completion","title":"\ud83c\udf93 Course Completion","text":""},{"location":"COURSE-LINKS/#requirements","title":"Requirements","text":"<ul> <li>Complete all module lessons</li> <li>Pass all quizzes with 70% or higher</li> <li>Complete practical exercises</li> <li>Build final projects</li> </ul>"},{"location":"COURSE-LINKS/#certificate","title":"Certificate","text":"<p>Upon successful completion of all modules and assessments, you'll have demonstrated proficiency in: - Programming languages (HTML, CSS, JavaScript, PHP, MySQL) - Operating system fundamentals - Development environment setup - Web technologies and protocols - Security best practices</p>"},{"location":"COURSE-LINKS/#how-to-use-this-guide","title":"How to Use This Guide","text":""},{"location":"COURSE-LINKS/#step-1-sequential-learning","title":"Step 1: Sequential Learning","text":"<p>Follow the modules in order: 1. Programming Languages 2. Operating System Basics 3. Development Environment 4. Web Basics</p>"},{"location":"COURSE-LINKS/#step-2-hands-on-practice","title":"Step 2: Hands-On Practice","text":"<ul> <li>Complete all exercises in each lesson</li> <li>Practice the code examples</li> <li>Try the interactive games (Flexbox Froggy, CSS Grid Garden)</li> </ul>"},{"location":"COURSE-LINKS/#step-3-take-quizzes","title":"Step 3: Take Quizzes","text":"<ul> <li>Take quizzes after completing each section</li> <li>Review incorrect answers</li> <li>Retake if needed to achieve 70%+</li> </ul>"},{"location":"COURSE-LINKS/#step-4-build-projects","title":"Step 4: Build Projects","text":"<p>Apply your knowledge by building: - Responsive websites - Web applications with database integration - Scripts and automation tools</p>"},{"location":"COURSE-LINKS/#external-learning-resources","title":"External Learning Resources","text":""},{"location":"COURSE-LINKS/#learning-platforms","title":"Learning Platforms","text":"<ul> <li>MDN Web Docs: https://developer.mozilla.org/</li> <li>W3Schools: https://www.w3schools.com/</li> <li>JavaScript Tutorial: https://www.javascripttutorial.net/</li> <li>TutorialsPoint: https://www.tutorialspoint.com/</li> </ul>"},{"location":"COURSE-LINKS/#interactive-learning-games","title":"Interactive Learning Games","text":"<ul> <li>Flexbox Froggy: http://flexboxfroggy.com/</li> <li>CSS Grid Garden: http://cssgridgarden.com/</li> </ul>"},{"location":"COURSE-LINKS/#code-standards-best-practices","title":"Code Standards &amp; Best Practices","text":"<ul> <li>Code Guide: https://codeguide.co/</li> <li>Clean Code JavaScript: https://github.com/ryanmcdermott/clean-code-javascript</li> <li>Clean Code PHP: https://github.com/jupeter/clean-code-php</li> <li>BEM Methodology: http://getbem.com/</li> </ul>"},{"location":"COURSE-LINKS/#css-resources","title":"CSS Resources","text":"<ul> <li>Learn CSS Layout: http://learnlayout.com/</li> <li>CSS Flexbox Guide: https://medium.com/swlh/css-flexbox-fundamentals-visual-guide-1c467f480dac</li> <li>Learn to Code HTML &amp; CSS: https://learn.shayhowe.com/</li> <li>SASS Documentation: https://sass-lang.com/</li> </ul>"},{"location":"COURSE-LINKS/#javascript-resources","title":"JavaScript Resources","text":"<ul> <li>Wes Bos JavaScript Notes: https://wesbos.com/javascript</li> <li>ECMAScript History: https://webreference.com/javascript/basics/versions/</li> </ul>"},{"location":"COURSE-LINKS/#php-resources","title":"PHP Resources","text":"<ul> <li>PHP Manual: https://php.net/manual/</li> <li>PHP Namespaces: https://php.net/manual/en/language.namespaces.php</li> <li>PHP Language Reference: https://php.net/manual/en/langref.php</li> </ul>"},{"location":"COURSE-LINKS/#learning-structure-summary","title":"Learning Structure Summary","text":"<pre><code>Developer Onboarding Program\n\u2502\n\u251c\u2500\u2500 Programming Languages\n\u2502   \u251c\u2500\u2500 HTML &amp; CSS (+ Quiz)\n\u2502   \u251c\u2500\u2500 JavaScript (+ Quiz)\n\u2502   \u2514\u2500\u2500 PHP &amp; MySQL (+ Quiz)\n\u2502\n\u251c\u2500\u2500 Operating System Basics\n\u2502   \u251c\u2500\u2500 Command-Line Interface\n\u2502   \u251c\u2500\u2500 Process Management\n\u2502   \u251c\u2500\u2500 Inter-Process Communication\n\u2502   \u2514\u2500\u2500 Threads\n\u2502\n\u251c\u2500\u2500 Setting up Development Environment\n\u2502   \u251c\u2500\u2500 Package Installation\n\u2502   \u251c\u2500\u2500 Local Server Setup\n\u2502   \u251c\u2500\u2500 IDE Configuration\n\u2502   \u2514\u2500\u2500 Version Control (Git/SVN)\n\u2502\n\u2514\u2500\u2500 Web Basics\n    \u251c\u2500\u2500 How the Web Works\n    \u251c\u2500\u2500 DNS\n    \u251c\u2500\u2500 HTTP/HTTPS\n    \u251c\u2500\u2500 Web Servers\n    \u251c\u2500\u2500 Rendering Engines\n    \u2514\u2500\u2500 Email Systems\n</code></pre>"},{"location":"COURSE-LINKS/#estimated-time-to-complete","title":"\u23f1\ufe0f Estimated Time to Complete","text":"<ul> <li>Programming Languages: 8-10 hours</li> <li>HTML &amp; CSS: 3-4 hours</li> <li>JavaScript: 3-4 hours</li> <li> <p>PHP &amp; MySQL: 2-3 hours</p> </li> <li> <p>Operating System Basics: 6-8 hours</p> </li> <li> <p>Development Environment: 4-6 hours</p> </li> <li> <p>Web Basics: 8-10 hours</p> </li> </ul> <p>Total Estimated Time: 26-34 hours of focused learning</p> <p>Note: This doesn't include practice time, projects, and hands-on exercises, which can double or triple the time investment.</p>"},{"location":"COURSE-LINKS/#learning-objectives","title":"Learning Objectives","text":"<p>By completing this onboarding program, you will:</p>"},{"location":"COURSE-LINKS/#knowledge","title":"Knowledge","text":"<ul> <li>Understand fundamental web technologies</li> <li>Know programming language syntax and best practices</li> <li>Comprehend how operating systems work</li> <li>Grasp web protocols and communication</li> </ul>"},{"location":"COURSE-LINKS/#skills","title":"Skills","text":"<ul> <li>Write clean, maintainable code</li> <li>Set up and configure development environments</li> <li>Use command-line tools effectively</li> <li>Debug code and troubleshoot issues</li> <li>Build responsive, accessible websites</li> <li>Create database-driven applications</li> </ul>"},{"location":"COURSE-LINKS/#competencies","title":"Competencies","text":"<ul> <li>Problem-solving and logical thinking</li> <li>Code review and quality assurance</li> <li>Version control and collaboration</li> <li>Security awareness</li> <li>Performance optimization</li> </ul>"},{"location":"COURSE-LINKS/#support-community","title":"Support &amp; Community","text":""},{"location":"COURSE-LINKS/#getting-help","title":"Getting Help","text":"<ul> <li>Review the course materials thoroughly</li> <li>Complete all exercises and quizzes</li> <li>Consult external resources linked in the course</li> <li>Join web development communities</li> <li>Ask your mentor or team lead</li> </ul>"},{"location":"COURSE-LINKS/#notes-for-instructorsmentors","title":"Notes for Instructors/Mentors","text":""},{"location":"COURSE-LINKS/#using-this-course-for-onboarding","title":"Using This Course for Onboarding","text":"<ul> <li>Follow the structured path in ONBOARDING-GUIDE.md</li> <li>Use PROGRESS-CHECKLIST.md to track progress</li> <li>Schedule regular check-ins with mentees</li> <li>Encourage hands-on practice and projects</li> <li>Provide constructive code review feedback</li> </ul>"},{"location":"COURSE-LINKS/#customization","title":"Customization","text":"<ul> <li>Adapt the timeline based on individual needs</li> <li>Add company-specific tools and practices</li> <li>Include internal projects and case studies</li> <li>Supplement with team-specific knowledge</li> </ul>"},{"location":"COURSE-LINKS/#additional-resources","title":"Additional Resources","text":""},{"location":"COURSE-LINKS/#complementary-courses","title":"Complementary Courses","text":"<p>After completing Engineering Basics, consider: - WordPress development courses - Advanced JavaScript frameworks - Database design and optimization - DevOps and deployment - Web security deep dive</p>"},{"location":"COURSE-LINKS/#next-level-learning","title":"Next Level Learning","text":"<ul> <li>Build more complex projects</li> <li>Contribute to open source</li> <li>Learn testing and CI/CD</li> <li>Explore cloud platforms</li> <li>Study system architecture</li> </ul> <p>Ready to learn? Start with the ONBOARDING-GUIDE.md!</p> <p>This reference guide is maintained internally for weDevs developer onboarding.</p>"},{"location":"ONBOARDING-GUIDE/","title":"Developer Onboarding Guide","text":"<p>Welcome to the developer onboarding program! This comprehensive guide will help you build a solid foundation in engineering principles, development environments, and web technologies.</p>"},{"location":"ONBOARDING-GUIDE/#table-of-contents","title":"Table of Contents","text":"<ol> <li>Week 1: Introduction &amp; Setup</li> <li>Week 2: Programming Languages Fundamentals</li> <li>Week 3: Operating System Basics</li> <li>Week 4: Web Fundamentals</li> <li>Week 5-6: Practical Projects &amp; Code Review</li> <li>Ongoing: Continuous Learning</li> </ol>"},{"location":"ONBOARDING-GUIDE/#week-1-introduction-setup","title":"Week 1: Introduction &amp; Setup","text":""},{"location":"ONBOARDING-GUIDE/#day-1-welcome-company-introduction","title":"Day 1: Welcome &amp; Company Introduction","text":""},{"location":"ONBOARDING-GUIDE/#objectives","title":"Objectives:","text":"<ul> <li>Understand company mission, values, and culture</li> <li>Meet the team and understand organizational structure</li> <li>Set up communication channels</li> </ul>"},{"location":"ONBOARDING-GUIDE/#tasks","title":"Tasks:","text":"<ul> <li> Complete HR onboarding paperwork</li> <li> Get access to company email and communication tools (Slack, Teams, etc.)</li> <li> Meet with team lead and assigned mentor</li> <li> Review company handbook and policies</li> <li> Understand project workflow and development process</li> </ul>"},{"location":"ONBOARDING-GUIDE/#resources","title":"Resources:","text":"<ul> <li>Company documentation</li> <li>Team directory</li> <li>Project management tools guide</li> </ul>"},{"location":"ONBOARDING-GUIDE/#day-2-3-account-setup-access","title":"Day 2-3: Account Setup &amp; Access","text":""},{"location":"ONBOARDING-GUIDE/#objectives_1","title":"Objectives:","text":"<ul> <li>Get access to all necessary development tools and systems</li> <li>Set up version control accounts</li> </ul>"},{"location":"ONBOARDING-GUIDE/#tasks_1","title":"Tasks:","text":"<ul> <li> Create/configure GitHub/GitLab/Bitbucket account</li> <li> Get access to project management tools (Github Project)</li> <li> Set up company VPN if required</li> <li> Access to documentation repositories</li> <li> Join relevant team channels</li> <li> Get access to staging/testing environments</li> </ul>"},{"location":"ONBOARDING-GUIDE/#day-4-5-development-environment-setup","title":"Day 4-5: Development Environment Setup","text":""},{"location":"ONBOARDING-GUIDE/#objectives_2","title":"Objectives:","text":"<ul> <li>Set up local development environment</li> <li>Configure IDE and essential tools</li> <li>Learn version control basics</li> </ul>"},{"location":"ONBOARDING-GUIDE/#tasks_2","title":"Tasks:","text":"<ul> <li> Install required software (see dev-environment.md)</li> <li>Laravel Herd (for PHP development)</li> <li>MySQL/MariaDB</li> <li>Node.js and NVM</li> <li>Git</li> <li> Configure your IDE (VSCode, PhpStorm, etc.)</li> <li> Set up debugging tools (see debuging.md)</li> <li> Install WordPress debugging plugins:</li> <li>User Switching</li> <li>Query Monitor</li> <li>WP Crontrol</li> <li>WP Console</li> <li>WP Mail Logging</li> <li> Clone your first repository</li> <li> Learn basic Git commands (clone, pull, push, commit, branch, merge)</li> </ul>"},{"location":"ONBOARDING-GUIDE/#learning-resources","title":"Learning Resources:","text":"<ul> <li>Git Documentation</li> <li>VSCode Tips and Tricks</li> </ul>"},{"location":"ONBOARDING-GUIDE/#version-control-essentials","title":"Version Control Essentials:","text":"<pre><code># Basic Git workflow\ngit clone &lt;repository-url&gt;\ngit checkout -b feature/your-feature-name\ngit add .\ngit commit -m \"Your descriptive commit message\"\ngit push origin feature/your-feature-name\n</code></pre>"},{"location":"ONBOARDING-GUIDE/#week-2-programming-languages-fundamentals","title":"Week 2: Programming Languages Fundamentals","text":""},{"location":"ONBOARDING-GUIDE/#day-1-2-html-css","title":"Day 1-2: HTML &amp; CSS","text":""},{"location":"ONBOARDING-GUIDE/#objectives_3","title":"Objectives:","text":"<ul> <li>Refresh HTML5 fundamentals</li> <li>Master CSS3 and modern layout techniques</li> <li>Learn responsive design principles</li> </ul>"},{"location":"ONBOARDING-GUIDE/#tasks_3","title":"Tasks:","text":"<ul> <li> Review HTML5 semantic tags and structure</li> <li> Study CSS Flexbox and Grid layouts</li> <li> Learn BEM naming methodology</li> <li> Complete the responsive layout exercise</li> <li> Play Flexbox Froggy game</li> <li> Play CSS Grid Garden game</li> <li> Complete HTML &amp; CSS Quiz</li> </ul>"},{"location":"ONBOARDING-GUIDE/#learning-resources_1","title":"Learning Resources:","text":"<p>See html-css.md for detailed resources including:</p> <ul> <li>MDN Web Docs tutorials</li> <li>Flexbox and Grid guides</li> <li>BEM methodology</li> <li>Code standards and best practices</li> </ul>"},{"location":"ONBOARDING-GUIDE/#practice-exercise","title":"Practice Exercise:","text":"<p>Create a responsive three-column layout that stacks vertically on mobile devices.</p>"},{"location":"ONBOARDING-GUIDE/#ideas-to-explore","title":"Ideas to Explore:","text":"<ul> <li>What are semantic tags? Why are they used?</li> <li>What are data attributes in HTML, and how can they be used in JS?</li> <li>What are the differences between different position values?</li> <li>What are pseudo-classes and pseudo-elements in CSS?</li> </ul>"},{"location":"ONBOARDING-GUIDE/#day-3-4-javascript","title":"Day 3-4: JavaScript","text":""},{"location":"ONBOARDING-GUIDE/#objectives_4","title":"Objectives:","text":"<ul> <li>Understand JavaScript fundamentals and ES6+ features</li> <li>Learn about closures, event loop, and asynchronous programming</li> <li>Practice clean coding concepts</li> </ul>"},{"location":"ONBOARDING-GUIDE/#tasks_4","title":"Tasks:","text":"<ul> <li> Review JavaScript basics and ES6 syntax</li> <li> Study closures and scope</li> <li> Learn about the event loop and asynchronous JavaScript</li> <li> Understand promises and async/await</li> <li> Fix the Array Sum Function (Problem 1)</li> <li> Solve JavaScript Type Coercion exercise (Problem 2)</li> <li> Complete JavaScript Quiz</li> </ul>"},{"location":"ONBOARDING-GUIDE/#learning-resources_2","title":"Learning Resources:","text":"<p>See javascript.md for:</p> <ul> <li>ES6 tutorials</li> <li>Clean code concepts</li> <li>ECMAScript history</li> <li>ESNext features</li> </ul>"},{"location":"ONBOARDING-GUIDE/#key-concepts","title":"Key Concepts:","text":"<ul> <li>Closures: Functions that remember their lexical scope</li> <li>Event Loop: How JavaScript handles asynchronous operations</li> <li>null vs undefined: Type differences and use cases</li> <li>Type Coercion: Implicit and explicit type conversion</li> </ul>"},{"location":"ONBOARDING-GUIDE/#practice-problems","title":"Practice Problems:","text":"<ol> <li>Fix the array sum function bug</li> <li>Understand type coercion with different operators</li> </ol>"},{"location":"ONBOARDING-GUIDE/#day-5-php-mysql","title":"Day 5: PHP &amp; MySQL","text":""},{"location":"ONBOARDING-GUIDE/#objectives_5","title":"Objectives:","text":"<ul> <li>Refresh PHP 8 features and best practices</li> <li>Understand MySQL fundamentals</li> <li>Learn clean code principles in PHP</li> </ul>"},{"location":"ONBOARDING-GUIDE/#tasks_5","title":"Tasks:","text":"<ul> <li> Review PHP 8 syntax and features</li> <li> Study PHP namespaces</li> <li> Learn MySQL database operations</li> <li> Debug the Log Function (Problem 1)</li> <li> Fix Email Validation (Problem 2)</li> <li> Complete PHP Quiz</li> </ul>"},{"location":"ONBOARDING-GUIDE/#learning-resources_3","title":"Learning Resources:","text":"<p>See php-mysql.md for:</p> <ul> <li>PHP 8 tutorials</li> <li>Clean code concepts for PHP</li> <li>MySQL tutorials</li> <li>Language references</li> </ul>"},{"location":"ONBOARDING-GUIDE/#ideas-to-explore_1","title":"Ideas to Explore:","text":"<ul> <li>How does PHP handle type conversions?</li> <li>What is session management in PHP?</li> <li>Compare PDO vs mysqli extensions</li> <li>Learn about PHP regex functions</li> </ul>"},{"location":"ONBOARDING-GUIDE/#week-3-operating-system-basics","title":"Week 3: Operating System Basics","text":""},{"location":"ONBOARDING-GUIDE/#day-1-2-command-line-interface-cli","title":"Day 1-2: Command-Line Interface (CLI)","text":""},{"location":"ONBOARDING-GUIDE/#objectives_6","title":"Objectives:","text":"<ul> <li>Master terminal/command-line operations</li> <li>Understand file system navigation</li> <li>Learn shell scripting basics</li> </ul>"},{"location":"ONBOARDING-GUIDE/#tasks_6","title":"Tasks:","text":"<ul> <li> Learn basic CLI commands (cd, ls, mkdir, rm, cp, mv)</li> <li> Understand file permissions (chmod, chown)</li> <li> Practice using grep, find, and pipe operations</li> <li> Learn about environment variables</li> <li> Create simple shell scripts</li> </ul>"},{"location":"ONBOARDING-GUIDE/#essential-commands","title":"Essential Commands:","text":"<pre><code># Navigation\ncd /path/to/directory\nls -la\npwd\n\n# File operations\nmkdir new-folder\ntouch new-file.txt\ncp source.txt destination.txt\nmv old-name.txt new-name.txt\nrm file.txt\n\n# Searching\ngrep \"search-term\" file.txt\nfind . -name \"*.php\"\n\n# Permissions\nchmod 755 script.sh\nchown user:group file.txt\n</code></pre>"},{"location":"ONBOARDING-GUIDE/#learning-resources_4","title":"Learning Resources:","text":"<ul> <li>Linux Command Line Basics</li> </ul>"},{"location":"ONBOARDING-GUIDE/#day-3-4-process-management-system-monitoring","title":"Day 3-4: Process Management &amp; System Monitoring","text":""},{"location":"ONBOARDING-GUIDE/#objectives_7","title":"Objectives:","text":"<ul> <li>Understand processes and threads</li> <li>Learn process monitoring and management</li> <li>Study inter-process communication</li> </ul>"},{"location":"ONBOARDING-GUIDE/#tasks_7","title":"Tasks:","text":"<ul> <li> Learn about process lifecycle</li> <li> Use ps, top, htop commands</li> <li> Understand background and foreground processes</li> <li> Learn about signals and kill command</li> <li> Study cron jobs and task scheduling</li> </ul>"},{"location":"ONBOARDING-GUIDE/#process-management-commands","title":"Process Management Commands:","text":"<pre><code># View processes\nps aux\ntop\nhtop\n\n# Kill processes\nkill PID\nkillall process-name\n\n# Background processes\ncommand &amp;\nbg\nfg\n\n# Cron jobs\ncrontab -e\ncrontab -l\n</code></pre>"},{"location":"ONBOARDING-GUIDE/#key-concepts_1","title":"Key Concepts:","text":"<ul> <li>Process vs Thread: Processes are independent, threads share memory</li> <li>Signals: SIGTERM, SIGKILL, SIGINT</li> <li>Cron Jobs: Scheduled task execution</li> <li>IPC: Inter-Process Communication methods</li> </ul>"},{"location":"ONBOARDING-GUIDE/#day-5-system-resources-performance","title":"Day 5: System Resources &amp; Performance","text":""},{"location":"ONBOARDING-GUIDE/#objectives_8","title":"Objectives:","text":"<ul> <li>Monitor system resources</li> <li>Understand memory and CPU management</li> <li>Learn performance optimization basics</li> </ul>"},{"location":"ONBOARDING-GUIDE/#tasks_8","title":"Tasks:","text":"<ul> <li> Monitor CPU and memory usage</li> <li> Check disk space and usage</li> <li> Understand load average</li> <li> Learn about logs and log files</li> <li> Practice system troubleshooting</li> </ul>"},{"location":"ONBOARDING-GUIDE/#monitoring-commands","title":"Monitoring Commands:","text":"<pre><code># System info\nuname -a\ndf -h\nfree -m\ndu -sh *\n\n# Logs\ntail -f /var/log/syslog\njournalctl -f\n</code></pre>"},{"location":"ONBOARDING-GUIDE/#week-4-web-fundamentals","title":"Week 4: Web Fundamentals","text":""},{"location":"ONBOARDING-GUIDE/#day-1-how-the-web-works","title":"Day 1: How the Web Works","text":""},{"location":"ONBOARDING-GUIDE/#objectives_9","title":"Objectives:","text":"<ul> <li>Understand the client-server architecture</li> <li>Learn about HTTP/HTTPS protocols</li> <li>Study request-response cycle</li> </ul>"},{"location":"ONBOARDING-GUIDE/#tasks_9","title":"Tasks:","text":"<ul> <li> Learn how browsers work</li> <li> Understand HTTP methods (GET, POST, PUT, DELETE, PATCH)</li> <li> Study HTTP status codes</li> <li> Learn about HTTPS and SSL/TLS</li> <li> Understand cookies and sessions</li> </ul>"},{"location":"ONBOARDING-GUIDE/#learning-resources_5","title":"Learning Resources:","text":"<ul> <li>MDN: How the Web Works</li> </ul>"},{"location":"ONBOARDING-GUIDE/#http-methods","title":"HTTP Methods:","text":"<ul> <li>GET: Retrieve data</li> <li>POST: Submit data</li> <li>PUT: Update entire resource</li> <li>PATCH: Partial update</li> <li>DELETE: Remove resource</li> </ul>"},{"location":"ONBOARDING-GUIDE/#http-status-codes","title":"HTTP Status Codes:","text":"<ul> <li>2xx: Success (200 OK, 201 Created)</li> <li>3xx: Redirection (301 Moved, 302 Found)</li> <li>4xx: Client errors (400 Bad Request, 404 Not Found)</li> <li>5xx: Server errors (500 Internal Server Error)</li> </ul>"},{"location":"ONBOARDING-GUIDE/#day-2-domain-name-system-dns","title":"Day 2: Domain Name System (DNS)","text":""},{"location":"ONBOARDING-GUIDE/#objectives_10","title":"Objectives:","text":"<ul> <li>Understand how DNS works</li> <li>Learn about DNS records</li> <li>Study domain resolution process</li> </ul>"},{"location":"ONBOARDING-GUIDE/#tasks_10","title":"Tasks:","text":"<ul> <li> Learn DNS hierarchy</li> <li> Understand DNS record types (A, AAAA, CNAME, MX, TXT)</li> <li> Practice using dig and nslookup commands</li> <li> Learn about DNS propagation</li> <li> Understand hosts file</li> </ul>"},{"location":"ONBOARDING-GUIDE/#dns-commands","title":"DNS Commands:","text":"<pre><code># Query DNS records\ndig example.com\nnslookup example.com\nhost example.com\n\n# Trace DNS resolution\ndig +trace example.com\n</code></pre>"},{"location":"ONBOARDING-GUIDE/#dns-record-types","title":"DNS Record Types:","text":"<ul> <li>A: Maps domain to IPv4</li> <li>AAAA: Maps domain to IPv6</li> <li>CNAME: Canonical name (alias)</li> <li>MX: Mail exchange</li> <li>TXT: Text records (SPF, DKIM)</li> </ul>"},{"location":"ONBOARDING-GUIDE/#day-3-web-servers","title":"Day 3: Web Servers","text":""},{"location":"ONBOARDING-GUIDE/#objectives_11","title":"Objectives:","text":"<ul> <li>Understand web server functionality</li> <li>Learn about Apache and Nginx</li> <li>Study virtual hosts configuration</li> </ul>"},{"location":"ONBOARDING-GUIDE/#tasks_11","title":"Tasks:","text":"<ul> <li> Learn web server architecture</li> <li> Understand Apache vs Nginx differences</li> <li> Study .htaccess rules</li> <li> Learn about virtual hosts</li> <li> Practice server configuration basics</li> </ul>"},{"location":"ONBOARDING-GUIDE/#web-server-concepts","title":"Web Server Concepts:","text":"<ul> <li>Apache: Module-based, .htaccess support</li> <li>Nginx: Event-driven, high performance</li> <li>Virtual Hosts: Multiple sites on one server</li> <li>Reverse Proxy: Load balancing and caching</li> </ul>"},{"location":"ONBOARDING-GUIDE/#day-4-rendering-engines-browsers","title":"Day 4: Rendering Engines &amp; Browsers","text":""},{"location":"ONBOARDING-GUIDE/#objectives_12","title":"Objectives:","text":"<ul> <li>Understand browser rendering process</li> <li>Learn about different rendering engines</li> <li>Study browser developer tools</li> </ul>"},{"location":"ONBOARDING-GUIDE/#tasks_12","title":"Tasks:","text":"<ul> <li> Learn about rendering engines (Blink, WebKit, Gecko)</li> <li> Understand Critical Rendering Path</li> <li> Study browser developer tools</li> <li> Learn about browser caching</li> <li> Practice performance profiling</li> </ul>"},{"location":"ONBOARDING-GUIDE/#browser-developer-tools","title":"Browser Developer Tools:","text":"<ul> <li>Elements: Inspect and modify HTML/CSS</li> <li>Console: JavaScript debugging</li> <li>Network: Monitor requests</li> <li>Performance: Profile rendering</li> <li>Application: Storage and cache</li> </ul>"},{"location":"ONBOARDING-GUIDE/#day-5-email-systems-security","title":"Day 5: Email Systems &amp; Security","text":""},{"location":"ONBOARDING-GUIDE/#objectives_13","title":"Objectives:","text":"<ul> <li>Understand email protocols</li> <li>Learn about email authentication</li> <li>Study web security basics</li> </ul>"},{"location":"ONBOARDING-GUIDE/#tasks_13","title":"Tasks:","text":"<ul> <li> Learn SMTP, POP3, IMAP protocols</li> <li> Understand SPF, DKIM, DMARC</li> <li> Study common web vulnerabilities (OWASP Top 10)</li> <li> Learn about XSS, CSRF, SQL Injection</li> <li> Understand CORS and security headers</li> </ul>"},{"location":"ONBOARDING-GUIDE/#email-protocols","title":"Email Protocols:","text":"<ul> <li>SMTP: Sending emails (port 25, 587)</li> <li>POP3: Retrieving emails (downloads)</li> <li>IMAP: Retrieving emails (syncs)</li> </ul>"},{"location":"ONBOARDING-GUIDE/#web-security-essentials","title":"Web Security Essentials:","text":"<ul> <li>Input validation and sanitization</li> <li>SQL injection prevention</li> <li>XSS protection</li> <li>CSRF tokens</li> <li>Secure password storage</li> </ul>"},{"location":"ONBOARDING-GUIDE/#week-5-6-practical-projects-code-review","title":"Week 5-6: Practical Projects &amp; Code Review","text":""},{"location":"ONBOARDING-GUIDE/#project-1-build-a-responsive-website","title":"Project 1: Build a Responsive Website","text":""},{"location":"ONBOARDING-GUIDE/#objectives_14","title":"Objectives:","text":"<ul> <li>Apply HTML, CSS, and JavaScript knowledge</li> <li>Create a fully responsive multi-page website</li> <li>Follow best practices and coding standards</li> </ul>"},{"location":"ONBOARDING-GUIDE/#requirements","title":"Requirements:","text":"<ul> <li> Mobile-first responsive design</li> <li> Semantic HTML structure</li> <li> Modern CSS (Flexbox/Grid)</li> <li> Interactive JavaScript features</li> <li> Cross-browser compatibility</li> <li> Performance optimization</li> <li> Accessibility standards (WCAG)</li> </ul>"},{"location":"ONBOARDING-GUIDE/#features-to-implement","title":"Features to Implement:","text":"<ul> <li>Navigation menu with mobile toggle</li> <li>Hero section with call-to-action</li> <li>Feature cards or service sections</li> <li>Contact form with validation</li> <li>Footer with social links</li> </ul>"},{"location":"ONBOARDING-GUIDE/#project-2-php-mysql-application","title":"Project 2: PHP &amp; MySQL Application","text":""},{"location":"ONBOARDING-GUIDE/#objectives_15","title":"Objectives:","text":"<ul> <li>Build a CRUD application</li> <li>Implement database operations</li> <li>Apply security best practices</li> </ul>"},{"location":"ONBOARDING-GUIDE/#requirements_1","title":"Requirements:","text":"<ul> <li> User authentication system</li> <li> CRUD operations (Create, Read, Update, Delete)</li> <li> Form validation (client and server-side)</li> <li> SQL injection prevention</li> <li> Prepared statements</li> <li> Session management</li> <li> Error handling</li> </ul>"},{"location":"ONBOARDING-GUIDE/#suggested-projects","title":"Suggested Projects:","text":"<ul> <li>Todo list application</li> <li>Blog with posts and comments</li> <li>Simple inventory management</li> <li>Contact management system</li> </ul>"},{"location":"ONBOARDING-GUIDE/#code-review-process","title":"Code Review Process","text":""},{"location":"ONBOARDING-GUIDE/#objectives_16","title":"Objectives:","text":"<ul> <li>Learn code review best practices</li> <li>Give and receive constructive feedback</li> <li>Improve code quality</li> </ul>"},{"location":"ONBOARDING-GUIDE/#tasks_14","title":"Tasks:","text":"<ul> <li> Submit code via pull requests</li> <li> Respond to code review comments</li> <li> Review peer's code</li> <li> Refactor based on feedback</li> <li> Learn team coding standards</li> </ul>"},{"location":"ONBOARDING-GUIDE/#code-review-checklist","title":"Code Review Checklist:","text":"<ul> <li>\u2713 Code follows style guide</li> <li>\u2713 Functions are small and focused</li> <li>\u2713 Variables have meaningful names</li> <li>\u2713 No hardcoded values</li> <li>\u2713 Error handling implemented</li> <li>\u2713 Security best practices followed</li> <li>\u2713 Comments for complex logic</li> <li>\u2713 No console.log or debug code</li> </ul>"},{"location":"ONBOARDING-GUIDE/#ongoing-continuous-learning","title":"Ongoing: Continuous Learning","text":""},{"location":"ONBOARDING-GUIDE/#daily-practices","title":"Daily Practices","text":""},{"location":"ONBOARDING-GUIDE/#tasks_15","title":"Tasks:","text":"<ul> <li> Read technical articles and blogs</li> <li> Follow industry leaders on social media</li> <li> Participate in team discussions</li> <li> Ask questions when stuck</li> <li> Document learnings</li> </ul>"},{"location":"ONBOARDING-GUIDE/#weekly-goals","title":"Weekly Goals","text":""},{"location":"ONBOARDING-GUIDE/#tasks_16","title":"Tasks:","text":"<ul> <li> Complete one coding challenge</li> <li> Read one technical article</li> <li> Attend team meetings</li> <li> Meet with mentor</li> <li> Update personal learning log</li> </ul>"},{"location":"ONBOARDING-GUIDE/#monthly-reviews","title":"Monthly Reviews","text":""},{"location":"ONBOARDING-GUIDE/#tasks_17","title":"Tasks:","text":"<ul> <li> Review progress with team lead</li> <li> Set new learning goals</li> <li> Update skills matrix</li> <li> Reflect on challenges and wins</li> <li> Plan next month's focus areas</li> </ul>"},{"location":"ONBOARDING-GUIDE/#additional-resources","title":"Additional Resources","text":""},{"location":"ONBOARDING-GUIDE/#recommended-blogs-websites","title":"Recommended Blogs &amp; Websites","text":"<ul> <li>CSS-Tricks</li> <li>Smashing Magazine</li> <li>A List Apart</li> <li>MDN Web Docs</li> <li>PHP The Right Way</li> </ul>"},{"location":"ONBOARDING-GUIDE/#online-learning-platforms","title":"Online Learning Platforms","text":"<ul> <li>freeCodeCamp</li> <li>Codecademy</li> <li>Frontend Masters</li> <li>Udemy</li> <li>Pluralsight</li> </ul>"},{"location":"ONBOARDING-GUIDE/#communities-to-join","title":"Communities to Join","text":"<ul> <li>Stack Overflow</li> <li>Reddit (r/webdev, r/PHP, r/javascript)</li> <li>Dev.to</li> <li>GitHub Discussions</li> <li>Local meetup groups</li> </ul>"},{"location":"ONBOARDING-GUIDE/#books-to-read","title":"Books to Read","text":"<ul> <li>\"Clean Code\" by Robert C. Martin</li> <li>\"The Pragmatic Programmer\" by Hunt &amp; Thomas</li> <li>\"You Don't Know JS\" series by Kyle Simpson</li> <li>\"Eloquent JavaScript\" by Marijn Haverbeke</li> <li>\"JavaScript: The Good Parts\" by Douglas Crockford</li> </ul>"},{"location":"ONBOARDING-GUIDE/#assessment-certification","title":"Assessment &amp; Certification","text":""},{"location":"ONBOARDING-GUIDE/#week-by-week-quizzes","title":"Week-by-Week Quizzes","text":"<ul> <li> HTML &amp; CSS Quiz</li> <li> JavaScript Quiz</li> <li> PHP &amp; MySQL Quiz</li> <li> Operating System Basics Quiz</li> <li> Web Fundamentals Quiz</li> </ul>"},{"location":"ONBOARDING-GUIDE/#final-project","title":"Final Project","text":"<p>Build a complete web application that demonstrates:</p> <ul> <li>Full-stack development skills</li> <li>Clean code practices</li> <li>Security best practices</li> <li>Responsive design</li> <li>Database integration</li> <li>Version control usage</li> <li>Documentation</li> </ul>"},{"location":"ONBOARDING-GUIDE/#completion-criteria","title":"Completion Criteria","text":"<ul> <li> All weekly modules completed</li> <li> All quizzes passed (70% minimum)</li> <li> Final project approved</li> <li> Code reviews completed</li> <li> Mentor sign-off</li> </ul>"},{"location":"ONBOARDING-GUIDE/#support-help","title":"Support &amp; Help","text":""},{"location":"ONBOARDING-GUIDE/#when-youre-stuck","title":"When You're Stuck","text":"<ol> <li>Search first: Google, Stack Overflow, documentation</li> <li>Try debugging: Use browser dev tools, debugger</li> <li>Ask your mentor: Schedule time with assigned mentor</li> <li>Team chat: Post questions in team channel</li> <li>Pair programming: Work with a teammate</li> </ol>"},{"location":"ONBOARDING-GUIDE/#mentor-meeting-schedule","title":"Mentor Meeting Schedule","text":"<ul> <li>Week 1: Daily check-ins</li> <li>Week 2-4: 3 times per week</li> <li>Week 5-6: 2 times per week</li> <li>Ongoing: Weekly 1-on-1s</li> </ul>"},{"location":"ONBOARDING-GUIDE/#success-tips","title":"Success Tips","text":"<ol> <li>Ask Questions: No question is too small or silly</li> <li>Practice Daily: Coding is a skill that improves with practice</li> <li>Read Code: Learn from others' code in the codebase</li> <li>Document: Keep notes on what you learn</li> <li>Be Patient: Learning takes time, don't rush</li> <li>Stay Curious: Explore beyond the curriculum</li> <li>Collaborate: Work with teammates, pair program</li> <li>Give Back: Help other new developers when you can</li> </ol>"},{"location":"ONBOARDING-GUIDE/#feedback","title":"Feedback","text":"<p>We're constantly improving this onboarding program. Please share your feedback: - What worked well? - What was confusing? - What would you add or change? - How can we improve?</p> <p>Welcome aboard, and happy coding! \ud83d\ude80</p>"},{"location":"PROGRESS-CHECKLIST/","title":"Onboarding Progress Checklist","text":"<p>Use this checklist to track your progress through the onboarding program. Check off items as you complete them!</p> <p>Developer Name: _________________ Start Date: _________________ Expected Completion: _________________ Mentor: _________________</p>"},{"location":"PROGRESS-CHECKLIST/#week-1-introduction-setup","title":"Week 1: Introduction &amp; Setup","text":""},{"location":"PROGRESS-CHECKLIST/#day-1-welcome-company-introduction","title":"Day 1: Welcome &amp; Company Introduction","text":"<ul> <li> Complete HR onboarding paperwork</li> <li> Company email and communication tools access</li> <li> Met with team lead and assigned mentor</li> <li> Reviewed company handbook and policies</li> <li> Understand project workflow</li> </ul>"},{"location":"PROGRESS-CHECKLIST/#day-2-3-account-setup","title":"Day 2-3: Account Setup","text":"<ul> <li> GitHub/GitLab/Bitbucket account configured</li> <li> Project management tools access (Jira/Trello/Asana)</li> <li> Company VPN setup (if required)</li> <li> Documentation repositories access</li> <li> Joined relevant team channels</li> <li> Access to staging/testing environments</li> </ul>"},{"location":"PROGRESS-CHECKLIST/#day-4-5-development-environment","title":"Day 4-5: Development Environment","text":"<ul> <li> Installed Laravel Herd</li> <li> Installed MySQL/MariaDB</li> <li> Installed Node.js and NVM</li> <li> Installed Git</li> <li> IDE configured (VSCode/PhpStorm)</li> <li> Debugging tools setup (Xdebug)</li> <li> WordPress debugging plugins installed</li> <li> Cloned first repository</li> <li> Practiced basic Git commands</li> </ul> <p>Week 1 Notes: <pre><code>_____________________________________________\n_____________________________________________\n_____________________________________________\n</code></pre></p>"},{"location":"PROGRESS-CHECKLIST/#week-2-programming-languages","title":"Week 2: Programming Languages","text":""},{"location":"PROGRESS-CHECKLIST/#day-1-2-html-css","title":"Day 1-2: HTML &amp; CSS","text":"<ul> <li> Reviewed HTML5 semantic tags</li> <li> Studied CSS Flexbox</li> <li> Studied CSS Grid</li> <li> Learned BEM methodology</li> <li> Completed responsive layout exercise</li> <li> Played Flexbox Froggy game</li> <li> Played CSS Grid Garden game</li> <li> Passed HTML &amp; CSS Quiz (Score: ____%)</li> </ul> <p>HTML/CSS Exercise Results: <pre><code>_____________________________________________\n_____________________________________________\n</code></pre></p>"},{"location":"PROGRESS-CHECKLIST/#day-3-4-javascript","title":"Day 3-4: JavaScript","text":"<ul> <li> Reviewed JavaScript basics and ES6</li> <li> Studied closures and scope</li> <li> Learned about event loop</li> <li> Understood promises and async/await</li> <li> Fixed Array Sum Function (Problem 1)</li> <li> Solved Type Coercion exercise (Problem 2)</li> <li> Passed JavaScript Quiz (Score: ____%)</li> </ul> <p>JavaScript Exercise Results: <pre><code>_____________________________________________\n_____________________________________________\n</code></pre></p>"},{"location":"PROGRESS-CHECKLIST/#day-5-php-mysql","title":"Day 5: PHP &amp; MySQL","text":"<ul> <li> Reviewed PHP 8 features</li> <li> Studied PHP namespaces</li> <li> Learned MySQL database operations</li> <li> Fixed Log Function debug problem</li> <li> Fixed Email Validation problem</li> <li> Passed PHP Quiz (Score: ____%)</li> </ul> <p>PHP/MySQL Exercise Results: <pre><code>_____________________________________________\n_____________________________________________\n</code></pre></p> <p>Week 2 Notes: <pre><code>_____________________________________________\n_____________________________________________\n_____________________________________________\n</code></pre></p>"},{"location":"PROGRESS-CHECKLIST/#week-3-operating-system-basics","title":"Week 3: Operating System Basics","text":""},{"location":"PROGRESS-CHECKLIST/#day-1-2-command-line-interface","title":"Day 1-2: Command-Line Interface","text":"<ul> <li> Learned basic CLI commands (cd, ls, mkdir, etc.)</li> <li> Understood file permissions (chmod, chown)</li> <li> Practiced grep, find, and pipe operations</li> <li> Learned about environment variables</li> <li> Created simple shell scripts</li> </ul> <p>CLI Commands Practiced: <pre><code>_____________________________________________\n_____________________________________________\n</code></pre></p>"},{"location":"PROGRESS-CHECKLIST/#day-3-4-process-management","title":"Day 3-4: Process Management","text":"<ul> <li> Learned about process lifecycle</li> <li> Used ps, top, htop commands</li> <li> Understood background/foreground processes</li> <li> Learned about signals and kill command</li> <li> Studied cron jobs and task scheduling</li> </ul> <p>Process Management Tasks: <pre><code>_____________________________________________\n_____________________________________________\n</code></pre></p>"},{"location":"PROGRESS-CHECKLIST/#day-5-system-resources","title":"Day 5: System Resources","text":"<ul> <li> Monitored CPU and memory usage</li> <li> Checked disk space and usage</li> <li> Understood load average</li> <li> Learned about logs and log files</li> <li> Practiced system troubleshooting</li> </ul> <p>System Monitoring Practice: <pre><code>_____________________________________________\n_____________________________________________\n</code></pre></p> <p>Week 3 Notes: <pre><code>_____________________________________________\n_____________________________________________\n_____________________________________________\n</code></pre></p>"},{"location":"PROGRESS-CHECKLIST/#week-4-web-fundamentals","title":"Week 4: Web Fundamentals","text":""},{"location":"PROGRESS-CHECKLIST/#day-1-how-the-web-works","title":"Day 1: How the Web Works","text":"<ul> <li> Learned about client-server architecture</li> <li> Understood HTTP methods (GET, POST, PUT, DELETE)</li> <li> Studied HTTP status codes</li> <li> Learned about HTTPS and SSL/TLS</li> <li> Understood cookies and sessions</li> </ul> <p>Web Concepts Learned: <pre><code>_____________________________________________\n_____________________________________________\n</code></pre></p>"},{"location":"PROGRESS-CHECKLIST/#day-2-dns","title":"Day 2: DNS","text":"<ul> <li> Understood how DNS works</li> <li> Learned about DNS record types (A, AAAA, CNAME, MX, TXT)</li> <li> Practiced using dig and nslookup</li> <li> Learned about DNS propagation</li> <li> Understood hosts file</li> </ul> <p>DNS Practice Commands: <pre><code>_____________________________________________\n_____________________________________________\n</code></pre></p>"},{"location":"PROGRESS-CHECKLIST/#day-3-web-servers","title":"Day 3: Web Servers","text":"<ul> <li> Learned web server architecture</li> <li> Understood Apache vs Nginx</li> <li> Studied .htaccess rules</li> <li> Learned about virtual hosts</li> <li> Practiced server configuration</li> </ul> <p>Web Server Tasks: <pre><code>_____________________________________________\n_____________________________________________\n</code></pre></p>"},{"location":"PROGRESS-CHECKLIST/#day-4-browsers-rendering","title":"Day 4: Browsers &amp; Rendering","text":"<ul> <li> Learned about rendering engines</li> <li> Understood Critical Rendering Path</li> <li> Studied browser developer tools</li> <li> Learned about browser caching</li> <li> Practiced performance profiling</li> </ul> <p>Browser Tools Explored: <pre><code>_____________________________________________\n_____________________________________________\n</code></pre></p>"},{"location":"PROGRESS-CHECKLIST/#day-5-email-security","title":"Day 5: Email &amp; Security","text":"<ul> <li> Learned SMTP, POP3, IMAP protocols</li> <li> Understood SPF, DKIM, DMARC</li> <li> Studied OWASP Top 10 vulnerabilities</li> <li> Learned about XSS, CSRF, SQL Injection</li> <li> Understood CORS and security headers</li> </ul> <p>Security Concepts Learned: <pre><code>_____________________________________________\n_____________________________________________\n</code></pre></p> <p>Week 4 Notes: <pre><code>_____________________________________________\n_____________________________________________\n_____________________________________________\n</code></pre></p>"},{"location":"PROGRESS-CHECKLIST/#week-5-practical-project-responsive-website","title":"Week 5: Practical Project - Responsive Website","text":""},{"location":"PROGRESS-CHECKLIST/#project-requirements","title":"Project Requirements","text":"<ul> <li> Mobile-first responsive design</li> <li> Semantic HTML structure</li> <li> Modern CSS (Flexbox/Grid)</li> <li> Interactive JavaScript features</li> <li> Cross-browser compatibility</li> <li> Performance optimization</li> <li> Accessibility standards (WCAG)</li> </ul>"},{"location":"PROGRESS-CHECKLIST/#features-implemented","title":"Features Implemented","text":"<ul> <li> Navigation menu with mobile toggle</li> <li> Hero section with call-to-action</li> <li> Feature cards or service sections</li> <li> Contact form with validation</li> <li> Footer with social links</li> </ul> <p>Project Repository: _________________</p> <p>Project Demo URL: _________________</p> <p>Code Review Feedback: <pre><code>_____________________________________________\n_____________________________________________\n_____________________________________________\n</code></pre></p> <p>Week 5 Notes: <pre><code>_____________________________________________\n_____________________________________________\n_____________________________________________\n</code></pre></p>"},{"location":"PROGRESS-CHECKLIST/#week-6-final-project-phpmysql-application","title":"Week 6: Final Project - PHP/MySQL Application","text":""},{"location":"PROGRESS-CHECKLIST/#project-requirements_1","title":"Project Requirements","text":"<ul> <li> User authentication system</li> <li> CRUD operations (Create, Read, Update, Delete)</li> <li> Form validation (client and server-side)</li> <li> SQL injection prevention</li> <li> Prepared statements</li> <li> Session management</li> <li> Error handling</li> </ul>"},{"location":"PROGRESS-CHECKLIST/#project-type","title":"Project Type","text":"<p>Selected Project: [ ] Todo List [ ] Blog [ ] Inventory [ ] Contact Manager [ ] Other: _______</p> <p>Project Repository: _________________</p> <p>Project Demo URL: _________________</p>"},{"location":"PROGRESS-CHECKLIST/#code-review-process","title":"Code Review Process","text":"<ul> <li> Submitted code via pull request</li> <li> Responded to code review comments</li> <li> Reviewed peer's code</li> <li> Refactored based on feedback</li> <li> Final approval received</li> </ul> <p>Code Review Feedback: <pre><code>_____________________________________________\n_____________________________________________\n_____________________________________________\n</code></pre></p> <p>Week 6 Notes: <pre><code>_____________________________________________\n_____________________________________________\n_____________________________________________\n</code></pre></p>"},{"location":"PROGRESS-CHECKLIST/#final-assessment","title":"Final Assessment","text":""},{"location":"PROGRESS-CHECKLIST/#quiz-scores","title":"Quiz Scores","text":"<ul> <li>HTML &amp; CSS: ______%</li> <li>JavaScript: ______%</li> <li>PHP &amp; MySQL: ______%</li> <li>Operating Systems: ______%</li> <li>Web Fundamentals: ______%</li> </ul> <p>Overall Average: ______% Passing Score: 70%</p>"},{"location":"PROGRESS-CHECKLIST/#project-evaluation","title":"Project Evaluation","text":""},{"location":"PROGRESS-CHECKLIST/#responsive-website-project","title":"Responsive Website Project","text":"<ul> <li>Code Quality: [ ] Excellent [ ] Good [ ] Needs Improvement</li> <li>Functionality: [ ] Excellent [ ] Good [ ] Needs Improvement</li> <li>Design: [ ] Excellent [ ] Good [ ] Needs Improvement</li> <li>Performance: [ ] Excellent [ ] Good [ ] Needs Improvement</li> </ul>"},{"location":"PROGRESS-CHECKLIST/#phpmysql-application","title":"PHP/MySQL Application","text":"<ul> <li>Code Quality: [ ] Excellent [ ] Good [ ] Needs Improvement</li> <li>Functionality: [ ] Excellent [ ] Good [ ] Needs Improvement</li> <li>Security: [ ] Excellent [ ] Good [ ] Needs Improvement</li> <li>Database Design: [ ] Excellent [ ] Good [ ] Needs Improvement</li> </ul>"},{"location":"PROGRESS-CHECKLIST/#skills-assessment","title":"Skills Assessment","text":"<p>Rate your confidence level (1-5, where 5 is most confident):</p>"},{"location":"PROGRESS-CHECKLIST/#programming-languages","title":"Programming Languages","text":"<ul> <li>HTML5: ___/5</li> <li>CSS3: ___/5</li> <li>JavaScript: ___/5</li> <li>PHP: ___/5</li> <li>MySQL: ___/5</li> </ul>"},{"location":"PROGRESS-CHECKLIST/#tools-technologies","title":"Tools &amp; Technologies","text":"<ul> <li>Git: ___/5</li> <li>Command Line: ___/5</li> <li>Browser DevTools: ___/5</li> <li>IDE: ___/5</li> <li>Debugging: ___/5</li> </ul>"},{"location":"PROGRESS-CHECKLIST/#concepts","title":"Concepts","text":"<ul> <li>HTTP/HTTPS: ___/5</li> <li>DNS: ___/5</li> <li>Web Security: ___/5</li> <li>Database Design: ___/5</li> <li>Responsive Design: ___/5</li> </ul>"},{"location":"PROGRESS-CHECKLIST/#mentor-evaluation","title":"Mentor Evaluation","text":"<p>Mentor Name: _________________ Evaluation Date: _________________</p>"},{"location":"PROGRESS-CHECKLIST/#technical-skills","title":"Technical Skills","text":"<ul> <li>Programming Fundamentals: [ ] Excellent [ ] Good [ ] Needs Improvement</li> <li>Problem Solving: [ ] Excellent [ ] Good [ ] Needs Improvement</li> <li>Code Quality: [ ] Excellent [ ] Good [ ] Needs Improvement</li> <li>Debugging Skills: [ ] Excellent [ ] Good [ ] Needs Improvement</li> </ul>"},{"location":"PROGRESS-CHECKLIST/#professional-skills","title":"Professional Skills","text":"<ul> <li>Communication: [ ] Excellent [ ] Good [ ] Needs Improvement</li> <li>Collaboration: [ ] Excellent [ ] Good [ ] Needs Improvement</li> <li>Initiative: [ ] Excellent [ ] Good [ ] Needs Improvement</li> <li>Learning Ability: [ ] Excellent [ ] Good [ ] Needs Improvement</li> </ul> <p>Mentor Comments: <pre><code>_____________________________________________\n_____________________________________________\n_____________________________________________\n_____________________________________________\n_____________________________________________\n</code></pre></p> <p>Recommendations: <pre><code>_____________________________________________\n_____________________________________________\n_____________________________________________\n</code></pre></p>"},{"location":"PROGRESS-CHECKLIST/#completion-certificate","title":"Completion Certificate","text":""},{"location":"PROGRESS-CHECKLIST/#final-status","title":"Final Status","text":"<ul> <li> COMPLETED - All requirements met</li> <li> NEEDS ADDITIONAL WORK - See feedback below</li> <li> IN PROGRESS - Continue with current pace</li> </ul>"},{"location":"PROGRESS-CHECKLIST/#signatures","title":"Signatures","text":"<p>Developer Signature: _________________ Date: _________________</p> <p>Mentor Signature: _________________ Date: _________________</p> <p>Team Lead Signature: _________________ Date: _________________</p>"},{"location":"PROGRESS-CHECKLIST/#next-steps-goals","title":"Next Steps &amp; Goals","text":""},{"location":"PROGRESS-CHECKLIST/#areas-for-continued-learning","title":"Areas for Continued Learning","text":""},{"location":"PROGRESS-CHECKLIST/#short-term-goals-next-1-3-months","title":"Short-term Goals (Next 1-3 months)","text":""},{"location":"PROGRESS-CHECKLIST/#long-term-goals-next-6-12-months","title":"Long-term Goals (Next 6-12 months)","text":""},{"location":"PROGRESS-CHECKLIST/#upcoming-projectsassignments","title":"Upcoming Projects/Assignments","text":""},{"location":"PROGRESS-CHECKLIST/#feedback-on-onboarding-program","title":"Feedback on Onboarding Program","text":"<p>Help us improve this program for future developers!</p>"},{"location":"PROGRESS-CHECKLIST/#what-worked-well","title":"What Worked Well?","text":"<pre><code>_____________________________________________\n_____________________________________________\n_____________________________________________\n</code></pre>"},{"location":"PROGRESS-CHECKLIST/#what-was-confusing","title":"What Was Confusing?","text":"<pre><code>_____________________________________________\n_____________________________________________\n_____________________________________________\n</code></pre>"},{"location":"PROGRESS-CHECKLIST/#what-would-you-add-or-change","title":"What Would You Add or Change?","text":"<pre><code>_____________________________________________\n_____________________________________________\n_____________________________________________\n</code></pre>"},{"location":"PROGRESS-CHECKLIST/#overall-rating","title":"Overall Rating","text":"<p>How would you rate this onboarding program?</p> <p>[ ] Excellent [ ] Very Good [ ] Good [ ] Fair [ ] Needs Improvement</p> <p>Additional Comments: <pre><code>_____________________________________________\n_____________________________________________\n_____________________________________________\n_____________________________________________\n</code></pre></p> <p>Congratulations on completing the onboarding program! \ud83c\udf89</p> <p>Welcome to the team, and happy coding! \ud83d\ude80</p>"},{"location":"QUICK-START/","title":"\ud83d\ude80 Quick Start Guide","text":"<p>New Developer? Start here for a quick overview of your onboarding journey!</p>"},{"location":"QUICK-START/#tldr-too-long-didnt-read","title":"TL;DR (Too Long; Didn't Read)","text":"<p>You're about to complete a 6-week onboarding program that will teach you:</p> <ul> <li>Programming (HTML, CSS, JavaScript, PHP, MySQL)</li> <li>Command-line skills</li> <li>How the web works</li> <li>Building real projects</li> </ul> <p>Start here: ONBOARDING-GUIDE.md</p>"},{"location":"QUICK-START/#what-you-need-to-know","title":"What You Need to Know","text":""},{"location":"QUICK-START/#duration","title":"Duration","text":"<p>6 weeks (full-time focus) or 8-12 weeks (part-time learning)</p>"},{"location":"QUICK-START/#time-commitment","title":"Time Commitment","text":"<ul> <li>2-3 hours/day learning</li> <li>1-2 hours/day coding</li> <li>30 minutes/day reading</li> </ul>"},{"location":"QUICK-START/#prerequisites","title":"Prerequisites","text":"<ul> <li>Basic computer skills</li> <li>Willingness to learn</li> <li>Curiosity and persistence</li> </ul>"},{"location":"QUICK-START/#your-journey-in-6-weeks","title":"Your Journey in 6 Weeks","text":"<pre><code>Week 1: Setup &amp; Introduction\n   \u2193\nWeek 2: Programming Languages (HTML/CSS/JS/PHP)\n   \u2193\nWeek 3: Operating System Basics\n   \u2193\nWeek 4: Web Fundamentals\n   \u2193\nWeek 5: Build a Website\n   \u2193\nWeek 6: Build a Web App\n   \u2193\n\ud83c\udf89 CERTIFIED DEVELOPER!\n</code></pre>"},{"location":"QUICK-START/#important-files-read-in-order","title":"Important Files (Read in Order)","text":""},{"location":"QUICK-START/#1-start-here-onboarding-guidemd","title":"1. START HERE \ud83d\udc49 ONBOARDING-GUIDE.md","text":"<p>Your main roadmap with detailed week-by-week instructions.</p>"},{"location":"QUICK-START/#2-progress-checklistmd","title":"2. PROGRESS-CHECKLIST.md","text":"<p>Track your daily progress and check off completed tasks.</p>"},{"location":"QUICK-START/#3-course-linksmd","title":"3. COURSE-LINKS.md","text":"<p>Curated learning resources and external tutorials in one place.</p>"},{"location":"QUICK-START/#4-supporting-materials","title":"4. Supporting Materials","text":"<ul> <li>debuging.md - Debugging setup</li> <li>programming-languages/ - Code tutorials</li> <li>operating-system/ - CLI and system commands</li> <li>web-fundamentals/ - How the web works</li> </ul>"},{"location":"QUICK-START/#week-by-week-overview","title":"Week-by-Week Overview","text":""},{"location":"QUICK-START/#week-1-get-ready","title":"Week 1: Get Ready","text":"<p>Goal: Set up your development environment</p> <p>You'll do:</p> <ul> <li>Meet the team</li> <li>Install software (Laravel Herd, MySQL, Node.js, Git)</li> <li>Configure your IDE</li> <li>Learn Git basics</li> </ul> <p>End of week: You can code, commit, and push code!</p>"},{"location":"QUICK-START/#week-2-learn-to-code","title":"Week 2: Learn to Code","text":"<p>Goal: Master programming fundamentals</p> <p>You'll learn:</p> <ul> <li>Day 1-2: HTML &amp; CSS</li> <li>Day 3-4: JavaScript</li> <li>Day 5: PHP &amp; MySQL</li> </ul> <p>End of week: You can build basic web pages and scripts!</p>"},{"location":"QUICK-START/#week-3-master-the-terminal","title":"Week 3: Master the Terminal","text":"<p>Goal: Become comfortable with command-line</p> <p>You'll learn:</p> <ul> <li>Navigate file systems</li> <li>Manage processes</li> <li>Write shell scripts</li> <li>Monitor system resources</li> </ul> <p>End of week: You're a command-line ninja!</p>"},{"location":"QUICK-START/#week-4-understand-the-web","title":"Week 4: Understand the Web","text":"<p>Goal: Know how websites work</p> <p>You'll learn:</p> <ul> <li>How browsers work</li> <li>DNS and HTTP/HTTPS</li> <li>Web servers</li> <li>Security basics</li> </ul> <p>End of week: You understand the entire web stack!</p>"},{"location":"QUICK-START/#week-5-build-a-website","title":"Week 5: Build a Website","text":"<p>Goal: Create a responsive website</p> <p>You'll build:</p> <ul> <li>Mobile-friendly design</li> <li>Navigation and forms</li> <li>Interactive features</li> <li>Professional-looking pages</li> </ul> <p>End of week: You have a portfolio piece!</p>"},{"location":"QUICK-START/#week-6-build-a-web-app","title":"Week 6: Build a Web App","text":"<p>Goal: Create a database-driven application</p> <p>You'll build:</p> <ul> <li>User authentication</li> <li>CRUD operations</li> <li>Form validation</li> <li>Secure database interaction</li> </ul> <p>End of week: You're a full-stack developer!</p>"},{"location":"QUICK-START/#software-youll-need","title":"Software You'll Need","text":""},{"location":"QUICK-START/#day-1-installs","title":"Day 1 Installs","text":"<ol> <li>Laravel Herd - Local PHP server</li> <li>MySQL - Database</li> <li>Node.js &amp; NVM - JavaScript runtime</li> <li>Git - Version control</li> <li>VSCode or PhpStorm - Code editor</li> </ol>"},{"location":"QUICK-START/#instructions","title":"Instructions","text":"<p>See programming-languages/dev-environment.md</p>"},{"location":"QUICK-START/#daily-routine","title":"Daily Routine","text":""},{"location":"QUICK-START/#morning-2-3-hours","title":"Morning (2-3 hours)","text":"<ol> <li>\u2615 Read - Study the day's material</li> <li>\ud83d\udcdd Take notes - Write down key concepts</li> <li>\ud83c\udfaf Watch videos - If links provided</li> </ol>"},{"location":"QUICK-START/#afternoon-1-2-hours","title":"Afternoon (1-2 hours)","text":"<ol> <li>\ud83d\udcbb Code - Complete exercises</li> <li>\ud83d\udc1b Debug - Fix problems</li> <li>\u2705 Check off - Update your checklist</li> </ol>"},{"location":"QUICK-START/#evening-30-minutes","title":"Evening (30 minutes)","text":"<ol> <li>\ud83d\udcd6 Review - Read articles</li> <li>\ud83d\udcac Ask questions - Team chat or mentor</li> <li>\ud83d\udcca Reflect - What did you learn?</li> </ol>"},{"location":"QUICK-START/#quizzes-assessment","title":"\ud83c\udf93 Quizzes &amp; Assessment","text":""},{"location":"QUICK-START/#weekly-quizzes","title":"Weekly Quizzes","text":"<p>Test your knowledge after each section:</p> <ul> <li>\u2705 HTML &amp; CSS Quiz</li> <li>\u2705 JavaScript Quiz</li> <li>\u2705 PHP &amp; MySQL Quiz</li> </ul> <p>Passing Score: 70% (you can retake!)</p>"},{"location":"QUICK-START/#final-projects","title":"Final Projects","text":"<p>Two projects to demonstrate your skills:</p> <ol> <li>Responsive Website (Week 5)</li> <li>PHP/MySQL Application (Week 6)</li> </ol>"},{"location":"QUICK-START/#code-reviews","title":"Code Reviews","text":"<p>Your mentor will review your code and provide feedback. This is how you'll improve!</p>"},{"location":"QUICK-START/#tips-for-success","title":"Tips for Success","text":""},{"location":"QUICK-START/#do","title":"DO:","text":"<p>\u2705 Ask questions (no question is too small!) \u2705 Practice every day \u2705 Read error messages carefully \u2705 Google when stuck \u2705 Take breaks \u2705 Help other learners \u2705 Document what you learn  </p>"},{"location":"QUICK-START/#dont","title":"DON'T:","text":"<p>\u274c Copy code without understanding \u274c Skip exercises \u274c Be afraid to make mistakes \u274c Compare your progress to others \u274c Give up when frustrated \u274c Learn in isolation  </p>"},{"location":"QUICK-START/#when-youre-stuck","title":"When You're Stuck","text":""},{"location":"QUICK-START/#the-30-minute-rule","title":"The 30-Minute Rule","text":"<p>Try to solve it yourself for 30 minutes first:</p> <ol> <li>Read the error - What does it say?</li> <li>Google it - Someone has probably had this problem</li> <li>Check documentation - Official docs are your friend</li> <li>Debug step-by-step - Use console.log or var_dump</li> </ol>"},{"location":"QUICK-START/#still-stuck","title":"Still Stuck?","text":"<ol> <li>Ask your mentor - Schedule a quick call</li> <li>Team chat - Post in your channel</li> <li>Pair program - Work with a teammate</li> </ol>"},{"location":"QUICK-START/#your-support-team","title":"Your Support Team","text":""},{"location":"QUICK-START/#your-mentor","title":"Your Mentor","text":"<p>Name: _________________ Schedule: _________________ Contact: _________________</p> <p>Your mentor is here to:</p> <ul> <li>Answer questions</li> <li>Review your code</li> <li>Guide your learning</li> <li>Celebrate your wins!</li> </ul>"},{"location":"QUICK-START/#team-lead","title":"Team Lead","text":"<p>Name: _________________ Contact: _________________</p> <p>Your team lead can help with:</p> <ul> <li>Project assignments</li> <li>Career guidance</li> <li>Technical direction</li> </ul>"},{"location":"QUICK-START/#buddypeer","title":"Buddy/Peer","text":"<p>Name: _________________ Contact: _________________</p> <p>Your buddy is another learner or junior dev who:</p> <ul> <li>Studies with you</li> <li>Shares the journey</li> <li>Provides peer support</li> </ul>"},{"location":"QUICK-START/#success-metrics","title":"Success Metrics","text":""},{"location":"QUICK-START/#youre-on-track-if","title":"You're on Track If:","text":"<ul> <li>\u2705 Completing daily tasks</li> <li>\u2705 Understanding concepts (not just copying)</li> <li>\u2705 Passing quizzes</li> <li>\u2705 Code reviews are improving</li> <li>\u2705 Building confidence</li> </ul>"},{"location":"QUICK-START/#warning-signs","title":"Warning Signs:","text":"<ul> <li>\u26a0\ufe0f Falling behind schedule</li> <li>\u26a0\ufe0f Repeatedly stuck on same topics</li> <li>\u26a0\ufe0f Not asking questions</li> <li>\u26a0\ufe0f Skipping exercises</li> </ul> <p>If you see warning signs, talk to your mentor immediately!</p>"},{"location":"QUICK-START/#important-dates","title":"Important Dates","text":"<p>Start Date: _________________</p> <p>Week 1 Ends: _________________ Week 2 Ends: _________________ Week 3 Ends: _________________ Week 4 Ends: _________________ Week 5 Ends: _________________ Week 6 Ends: _________________</p> <p>Final Review: _________________ Expected Completion: _________________</p>"},{"location":"QUICK-START/#what-happens-after","title":"\ud83c\udf89 What Happens After?","text":""},{"location":"QUICK-START/#upon-completion","title":"Upon Completion:","text":"<ul> <li>\ud83e\udd1d Join team projects</li> <li>\ud83d\udc65 Start contributing to production code</li> <li>\ud83d\udcc8 Continue learning advanced topics</li> </ul>"},{"location":"QUICK-START/#career-path","title":"Career Path:","text":"<ul> <li>Junior Developer \u2192 Mid-Level \u2192 Senior \u2192 Lead</li> <li>Specialize (Frontend, Backend, Full-Stack, DevOps)</li> <li>Contribute to open source</li> <li>Mentor new developers</li> </ul>"},{"location":"QUICK-START/#glossary-of-terms","title":"Glossary of Terms","text":"<p>CLI - Command Line Interface (the terminal) IDE - Integrated Development Environment (your code editor) Git - Version control system Repository - Where code is stored Commit - Save a snapshot of your code Push - Send code to remote repository Pull - Get latest code from repository Branch - Separate line of development Merge - Combine branches PR - Pull Request (code review request)  </p>"},{"location":"QUICK-START/#quick-links","title":"Quick Links","text":""},{"location":"QUICK-START/#learning-resources","title":"Learning Resources","text":"<ul> <li>Main Guide - Start here</li> <li>Progress Tracker - Check off tasks</li> <li>Course Resources - Learning materials</li> </ul>"},{"location":"QUICK-START/#documentation","title":"Documentation","text":"<ul> <li>MDN Web Docs - Best web reference</li> <li>PHP.net - PHP documentation</li> <li>Git Guide - Git documentation</li> </ul>"},{"location":"QUICK-START/#tools","title":"Tools","text":"<ul> <li>Stack Overflow - Q&amp;A for developers</li> <li>GitHub - Code hosting</li> <li>CodePen - Frontend playground</li> </ul>"},{"location":"QUICK-START/#faq","title":"FAQ","text":""},{"location":"QUICK-START/#q-what-if-i-fall-behind","title":"Q: What if I fall behind?","text":"<p>A: Talk to your mentor immediately. We can adjust the pace or provide extra support.</p>"},{"location":"QUICK-START/#q-can-i-go-faster","title":"Q: Can I go faster?","text":"<p>A: Yes! If you're comfortable, you can move ahead. But don't skip exercises.</p>"},{"location":"QUICK-START/#q-what-if-i-dont-understand-something","title":"Q: What if I don't understand something?","text":"<p>A: Normal! Ask questions, review the material, and practice more.</p>"},{"location":"QUICK-START/#q-do-i-need-to-memorize-everything","title":"Q: Do I need to memorize everything?","text":"<p>A: No! Focus on understanding concepts. You can always look up syntax.</p>"},{"location":"QUICK-START/#q-what-if-i-make-mistakes","title":"Q: What if I make mistakes?","text":"<p>A: Mistakes are how you learn! Every developer makes mistakes daily.</p>"},{"location":"QUICK-START/#q-is-programming-hard","title":"Q: Is programming hard?","text":"<p>A: It's challenging but rewarding. With practice, it becomes easier.</p>"},{"location":"QUICK-START/#ready-to-begin","title":"Ready to Begin?","text":""},{"location":"QUICK-START/#your-first-steps","title":"Your First Steps:","text":"<ol> <li> <p>\ud83d\udccb Fill in your details in PROGRESS-CHECKLIST.md</p> </li> <li> <p>\ud83d\udcd6 Read ONBOARDING-GUIDE.md - Week 1</p> </li> <li> <p>\ud83d\udee0\ufe0f Set up your development environment</p> </li> <li> <p>\ud83d\udcac Introduce yourself to the team</p> </li> <li> <p>\ud83d\ude80 Start learning!</p> </li> </ol>"},{"location":"QUICK-START/#motivation","title":"Motivation","text":"<p>\"The only way to learn programming is by programming.\" \u2014 Dennis Ritchie</p> <p>\"First, solve the problem. Then, write the code.\" \u2014 John Johnson</p> <p>\"Every expert was once a beginner.\" \u2014 Anonymous</p> <p>\"It's not about how fast you learn, it's about how much you understand.\" \u2014 Your Mentor</p>"},{"location":"QUICK-START/#final-words","title":"Final Words","text":"<p>Welcome to your development journey! </p> <p>The next 6 weeks will be challenging but incredibly rewarding. You'll build skills that will serve you for your entire career. </p> <p>Remember:</p> <ul> <li>Be patient with yourself</li> <li>Stay curious</li> <li>Ask questions</li> <li>Practice daily</li> <li>Celebrate small wins</li> </ul> <p>We're excited to have you on the team! \ud83c\udf89</p> <p>Now go to: ONBOARDING-GUIDE.md</p> <p>Let's code! \ud83d\udcbb\ud83d\ude80</p>"},{"location":"SUMMARY/","title":"\ud83d\udce6 What's Been Created - Summary","text":"<p>This document summarizes the comprehensive onboarding materials created for weDevs developer onboarding.</p>"},{"location":"SUMMARY/#overview","title":"Overview","text":"<p>A complete 6-week onboarding program for developers has been created, covering:</p> <ul> <li>Programming languages (HTML, CSS, JavaScript, PHP, MySQL)</li> <li>Operating system basics</li> <li>Web fundamentals</li> <li>Development environment setup</li> <li>Practical projects</li> <li>Code review processes</li> </ul>"},{"location":"SUMMARY/#repository-structure","title":"Repository Structure","text":"<pre><code>developer-onboarding/\n\u2502\n\u251c\u2500\u2500 \ud83d\udcd8 README.md                          # Repository overview\n\u251c\u2500\u2500 \ud83d\ude80 QUICK-START.md                     # Quick start guide (START HERE!)\n\u251c\u2500\u2500 \ud83d\udcd6 ONBOARDING-GUIDE.md                # Main comprehensive guide\n\u251c\u2500\u2500 \u2705 PROGRESS-CHECKLIST.md              # Track your progress\n\u251c\u2500\u2500 \ud83d\udd17 COURSE-LINKS.md                    # Learning resources and external courses\n\u251c\u2500\u2500 \ud83d\udcc4 SUMMARY.md                         # This file\n\u251c\u2500\u2500 \ud83d\udc1b debuging.md                        # Debugging configuration\n\u2502\n\u251c\u2500\u2500 \ud83d\udcbb programming-languages/\n\u2502   \u251c\u2500\u2500 dev-environment.md                # Setup instructions\n\u2502   \u251c\u2500\u2500 html-css.md                        # HTML &amp; CSS resources\n\u2502   \u251c\u2500\u2500 javascript.md                     # JavaScript resources\n\u2502   \u2514\u2500\u2500 php-mysql.md                       # PHP &amp; MySQL resources\n\u2502\n\u251c\u2500\u2500 \ud83d\udda5\ufe0f operating-system/\n\u2502   \u2514\u2500\u2500 os-fundamentals.md                # CLI, processes, scripting\n\u2502\n\u2514\u2500\u2500 \ud83c\udf10 web-fundamentals/\n    \u2514\u2500\u2500 web-basics.md                     # DNS, HTTP, servers, security\n</code></pre>"},{"location":"SUMMARY/#document-guide","title":"Document Guide","text":""},{"location":"SUMMARY/#core-documents","title":"Core Documents","text":""},{"location":"SUMMARY/#1-quick-startmd","title":"1. QUICK-START.md \ud83d\ude80","text":"<p>Purpose: Your first stop! Quick overview and motivation Who it's for: New developers starting onboarding What's inside:</p> <ul> <li>TL;DR summary</li> <li>6-week journey map</li> <li>Daily routine suggestions</li> <li>Success tips</li> <li>FAQ</li> </ul> <p>Start here if you want: A high-level overview and quick start</p>"},{"location":"SUMMARY/#2-onboarding-guidemd","title":"2. ONBOARDING-GUIDE.md \ud83d\udcd6","text":"<p>Purpose: The main comprehensive roadmap Who it's for: Everyone going through onboarding What's inside:</p> <ul> <li>Week-by-week breakdown</li> <li>Day-by-day tasks and objectives</li> <li>Learning resources for each topic</li> <li>Exercises and practice problems</li> <li>Quiz links</li> <li>Project requirements</li> <li>Assessment criteria</li> </ul> <p>Read this for: Step-by-step instructions for the entire program</p> <p>Structure:</p> <ul> <li>Week 1: Introduction &amp; Setup</li> <li>Week 2: Programming Languages Fundamentals</li> <li>Week 3: Operating System Basics</li> <li>Week 4: Web Fundamentals</li> <li>Week 5-6: Practical Projects &amp; Code Review</li> <li>Ongoing: Continuous Learning</li> </ul>"},{"location":"SUMMARY/#3-progress-checklistmd","title":"3. PROGRESS-CHECKLIST.md \u2705","text":"<p>Purpose: Track your daily progress Who it's for: Learners and mentors What's inside:</p> <ul> <li>Week-by-week checkboxes</li> <li>Task completion tracking</li> <li>Note-taking spaces</li> <li>Skills self-assessment</li> <li>Mentor evaluation form</li> <li>Completion certificate</li> <li>Feedback form</li> </ul> <p>Use this to: Check off completed tasks and track progress</p>"},{"location":"SUMMARY/#4-course-linksmd","title":"4. COURSE-LINKS.md","text":"<p>Purpose: Curated learning resources and external courses Who it's for: Anyone needing quick reference to learning materials What's inside:</p> <ul> <li>Learning resource links</li> <li>External tutorial references</li> <li>Course structure overview</li> <li>Estimated time to complete</li> <li>Learning objectives</li> </ul> <p>Use this for: Quick access to learning resources</p>"},{"location":"SUMMARY/#5-readmemd","title":"5. README.md \ud83d\udcd8","text":"<p>Purpose: Repository overview and navigation Who it's for: Anyone first viewing the repository What's inside:</p> <ul> <li>Repository structure</li> <li>Quick links to all documents</li> <li>Getting started instructions</li> <li>Tips for success</li> <li>External resources</li> <li>Support information</li> </ul> <p>Read this for: Understanding the repository organization</p>"},{"location":"SUMMARY/#topic-specific-documents","title":"Topic-Specific Documents","text":""},{"location":"SUMMARY/#programming-languages-directory","title":"Programming Languages Directory \ud83d\udcbb","text":""},{"location":"SUMMARY/#html-cssmd","title":"html-css.md","text":"<ul> <li>HTML5 tutorials and references</li> <li>CSS3 guides and best practices</li> <li>Flexbox and Grid resources</li> <li>BEM methodology</li> <li>Interactive games (Flexbox Froggy, CSS Grid Garden)</li> <li>Practice exercises</li> <li>Quiz link</li> </ul>"},{"location":"SUMMARY/#javascriptmd","title":"javascript.md","text":"<ul> <li>JavaScript fundamentals</li> <li>ES6+ features</li> <li>Clean code concepts</li> <li>Practice problems (Array Sum, Type Coercion)</li> <li>Exploration topics (closures, event loop)</li> <li>Quiz link</li> </ul>"},{"location":"SUMMARY/#php-mysqlmd","title":"php-mysql.md","text":"<ul> <li>PHP 8 tutorials</li> <li>Clean code PHP concepts</li> <li>MySQL database tutorials</li> <li>Debug exercises (Log Function, Email Validation)</li> <li>Exploration topics (sessions, PDO vs mysqli)</li> <li>Quiz link</li> </ul>"},{"location":"SUMMARY/#dev-environmentmd","title":"dev-environment.md","text":"<ul> <li>Required software installation list</li> <li>Laravel Herd</li> <li>MySQL</li> <li>Node.js &amp; NVM</li> </ul>"},{"location":"SUMMARY/#operating-system-basics-directory","title":"Operating System Basics Directory \ud83d\udda5\ufe0f","text":""},{"location":"SUMMARY/#os-fundamentalsmd","title":"os-fundamentals.md","text":"<p>Comprehensive coverage of:</p> <ul> <li>CLI Essentials</li> <li>Navigation commands</li> <li>File operations</li> <li>Search and filter</li> <li>Pipes and redirection</li> <li> <p>Practical examples</p> </li> <li> <p>Process Management</p> </li> <li>Understanding processes</li> <li>Process control commands</li> <li>Signals (SIGTERM, SIGKILL, etc.)</li> <li>Process priority</li> <li> <p>Background/daemon processes</p> </li> <li> <p>File System &amp; Permissions</p> </li> <li>File system hierarchy</li> <li>Permission format and values</li> <li>chmod, chown commands</li> <li> <p>Special permissions</p> </li> <li> <p>System Monitoring</p> </li> <li>Disk usage (df, du)</li> <li>Memory usage (free, vmstat)</li> <li>CPU and load (top, htop)</li> <li>Network commands</li> <li> <p>System information</p> </li> <li> <p>Shell Scripting</p> </li> <li>Creating scripts</li> <li>Variables</li> <li>Conditionals</li> <li>Loops</li> <li>Functions</li> <li> <p>Practical examples</p> </li> <li> <p>Cron Jobs</p> </li> <li>Crontab format</li> <li>Scheduling tasks</li> <li>Managing cron jobs</li> </ul>"},{"location":"SUMMARY/#web-fundamentals-directory","title":"Web Fundamentals Directory \ud83c\udf10","text":""},{"location":"SUMMARY/#web-basicsmd","title":"web-basics.md","text":"<p>Comprehensive coverage of:</p> <ul> <li>How the Web Works</li> <li>Client-server architecture</li> <li>Request-response cycle</li> <li> <p>What happens when you visit a website</p> </li> <li> <p>DNS (Domain Name System)</p> </li> <li>DNS hierarchy</li> <li>Record types (A, AAAA, CNAME, MX, TXT, NS)</li> <li>DNS resolution process</li> <li> <p>DNS commands (dig, nslookup)</p> </li> <li> <p>HTTP/HTTPS Protocols</p> </li> <li>HTTP methods (GET, POST, PUT, PATCH, DELETE)</li> <li>HTTP status codes (1xx, 2xx, 3xx, 4xx, 5xx)</li> <li>HTTP headers</li> <li> <p>HTTPS and TLS/SSL</p> </li> <li> <p>Web Servers</p> </li> <li>Apache HTTP Server</li> <li>Nginx</li> <li>Virtual hosts</li> <li>Reverse proxy</li> <li> <p>.htaccess configuration</p> </li> <li> <p>Browser Rendering</p> </li> <li>Rendering engines</li> <li>Critical Rendering Path</li> <li>DOM and CSSOM</li> <li>Render blocking</li> <li>Browser caching</li> <li> <p>Developer tools</p> </li> <li> <p>Email Systems</p> </li> <li>SMTP, POP3, IMAP protocols</li> <li>Email authentication (SPF, DKIM, DMARC)</li> <li> <p>Sending email from PHP</p> </li> <li> <p>Web Security</p> </li> <li>OWASP Top 10 vulnerabilities</li> <li>SQL Injection prevention</li> <li>XSS protection</li> <li>CSRF protection</li> <li>Security headers</li> <li>CORS</li> <li>Input validation</li> </ul>"},{"location":"SUMMARY/#debugging-document","title":"Debugging Document \ud83d\udc1b","text":""},{"location":"SUMMARY/#debugingmd-existing","title":"debuging.md (existing)","text":"<ul> <li>WordPress debugging plugins</li> <li>PHP Debug configuration for VSCode</li> <li>Xdebug setup with Laravel Herd</li> <li>Launch.json configuration</li> </ul>"},{"location":"SUMMARY/#learning-path","title":"\ud83c\udf93 Learning Path","text":""},{"location":"SUMMARY/#for-new-developers","title":"For New Developers","text":"<pre><code>Start\n  \u2193\n1. Read QUICK-START.md\n  \u2193\n2. Read README.md\n  \u2193\n3. Follow ONBOARDING-GUIDE.md (Week 1)\n  \u2193\n4. Use PROGRESS-CHECKLIST.md to track\n  \u2193\n5. Reference topic-specific docs as needed\n  \u2193\n6. Complete quizzes via COURSE-LINKS.md\n  \u2193\n7. Build projects (Weeks 5-6)\n  \u2193\nComplete!\n</code></pre>"},{"location":"SUMMARY/#for-mentors","title":"For Mentors","text":"<pre><code>Start\n  \u2193\n1. Review ONBOARDING-GUIDE.md\n  \u2193\n2. Customize PROGRESS-CHECKLIST.md\n  \u2193\n3. Share QUICK-START.md with mentee\n  \u2193\n4. Schedule regular check-ins\n  \u2193\n5. Review progress via PROGRESS-CHECKLIST.md\n  \u2193\n6. Provide code review feedback\n  \u2193\n7. Complete final evaluation\n</code></pre>"},{"location":"SUMMARY/#content-statistics","title":"Content Statistics","text":""},{"location":"SUMMARY/#total-documents-created","title":"Total Documents Created","text":"<ul> <li>7 main guides</li> <li>7 topic-specific documents</li> <li>3 directories organized by topic</li> </ul>"},{"location":"SUMMARY/#content-coverage","title":"Content Coverage","text":"<ul> <li>Programming Languages: 4 documents</li> <li>Operating System: 1 comprehensive document</li> <li>Web Technologies: 1 comprehensive document</li> <li>Development Tools: 1 document</li> <li>Debugging: 1 document</li> </ul>"},{"location":"SUMMARY/#total-learning-time","title":"Total Learning Time","text":"<ul> <li>Course materials: 26-34 hours</li> <li>Practice &amp; exercises: 40-60 hours</li> <li>Projects: 40-60 hours</li> <li>Total: 100-150 hours (6 weeks full-time)</li> </ul>"},{"location":"SUMMARY/#key-features","title":"Key Features","text":""},{"location":"SUMMARY/#comprehensive-coverage","title":"Comprehensive Coverage","text":"<ul> <li>Comprehensive coverage of web development fundamentals</li> <li>Extended with practical examples</li> <li>Real-world scenarios</li> </ul>"},{"location":"SUMMARY/#structured-learning-path","title":"Structured Learning Path","text":"<ul> <li>Week-by-week progression</li> <li>Day-by-day tasks</li> <li>Clear objectives</li> </ul>"},{"location":"SUMMARY/#progress-tracking","title":"Progress Tracking","text":"<ul> <li>Checkboxes for every task</li> <li>Self-assessment tools</li> <li>Mentor evaluation forms</li> </ul>"},{"location":"SUMMARY/#practical-focus","title":"Practical Focus","text":"<ul> <li>Hands-on exercises</li> <li>Practice problems</li> <li>Real projects</li> <li>Code reviews</li> </ul>"},{"location":"SUMMARY/#resource-rich","title":"Resource Rich","text":"<ul> <li>Direct links to tutorials</li> <li>Code examples</li> <li>Command references</li> <li>Best practices</li> </ul>"},{"location":"SUMMARY/#support-systems","title":"Support Systems","text":"<ul> <li>Mentor guidance structure</li> <li>Peer learning suggestions</li> <li>Help resources</li> <li>FAQ sections</li> </ul>"},{"location":"SUMMARY/#learning-outcomes","title":"Learning Outcomes","text":"<p>After completing this onboarding program, developers will be able to:</p>"},{"location":"SUMMARY/#technical-skills","title":"Technical Skills","text":"<ul> <li>\u2705 Write semantic HTML and modern CSS</li> <li>\u2705 Create interactive JavaScript applications</li> <li>\u2705 Build PHP/MySQL database-driven apps</li> <li>\u2705 Use command-line effectively</li> <li>\u2705 Understand web protocols and architecture</li> <li>\u2705 Implement security best practices</li> <li>\u2705 Debug code effectively</li> </ul>"},{"location":"SUMMARY/#professional-skills","title":"Professional Skills","text":"<ul> <li>\u2705 Use version control (Git)</li> <li>\u2705 Write clean, maintainable code</li> <li>\u2705 Participate in code reviews</li> <li>\u2705 Document code and processes</li> <li>\u2705 Collaborate with team members</li> <li>\u2705 Problem-solve independently</li> </ul>"},{"location":"SUMMARY/#knowledge-areas","title":"Knowledge Areas","text":"<ul> <li>\u2705 Client-server architecture</li> <li>\u2705 HTTP/HTTPS protocols</li> <li>\u2705 DNS and web servers</li> <li>\u2705 Browser rendering</li> <li>\u2705 Operating system fundamentals</li> <li>\u2705 Database design</li> <li>\u2705 Security principles</li> </ul>"},{"location":"SUMMARY/#how-to-use-this-repository","title":"How to Use This Repository","text":""},{"location":"SUMMARY/#for-individual-learners","title":"For Individual Learners","text":"<ol> <li>Start with QUICK-START.md</li> <li>Follow ONBOARDING-GUIDE.md week by week</li> <li>Use PROGRESS-CHECKLIST.md to track progress</li> <li>Reference topic docs as needed</li> <li>Complete all quizzes and projects</li> </ol>"},{"location":"SUMMARY/#for-teams","title":"For Teams","text":"<ol> <li>Customize ONBOARDING-GUIDE.md for your needs</li> <li>Add company-specific tools and processes</li> <li>Assign mentors</li> <li>Track progress using PROGRESS-CHECKLIST.md</li> <li>Schedule regular reviews</li> </ol>"},{"location":"SUMMARY/#for-mentors_1","title":"For Mentors","text":"<ol> <li>Review all materials beforehand</li> <li>Customize timeline if needed</li> <li>Schedule regular check-ins</li> <li>Provide feedback on exercises</li> <li>Review projects thoroughly</li> <li>Complete evaluation forms</li> </ol>"},{"location":"SUMMARY/#customization","title":"Customization","text":"<p>This repository can be customized by:</p>"},{"location":"SUMMARY/#adding-content","title":"Adding Content","text":"<ul> <li>Company-specific coding standards</li> <li>Internal tools documentation</li> <li>Project-specific requirements</li> <li>Team workflows</li> </ul>"},{"location":"SUMMARY/#modifying-timeline","title":"Modifying Timeline","text":"<ul> <li>Extend for part-time learning</li> <li>Compress for experienced developers</li> <li>Add additional weeks for deep dives</li> </ul>"},{"location":"SUMMARY/#adjusting-difficulty","title":"Adjusting Difficulty","text":"<ul> <li>Add advanced topics</li> <li>Include framework training</li> <li>Incorporate DevOps practices</li> </ul>"},{"location":"SUMMARY/#success-metrics","title":"\ud83d\udcc8 Success Metrics","text":"<p>Track success using:</p> <ul> <li>Quiz scores (target: 70%+)</li> <li>Project completion</li> <li>Code review feedback</li> <li>Mentor evaluations</li> <li>Self-assessment scores</li> <li>Time to complete tasks</li> </ul>"},{"location":"SUMMARY/#external-dependencies","title":"External Dependencies","text":""},{"location":"SUMMARY/#third-party-resources","title":"Third-Party Resources","text":"<ul> <li>MDN Web Docs</li> <li>W3Schools</li> <li>Interactive games (Flexbox Froggy, CSS Grid Garden)</li> <li>GitHub repositories (Clean Code examples)</li> </ul>"},{"location":"SUMMARY/#notes-for-repository-maintainers","title":"Notes for Repository Maintainers","text":""},{"location":"SUMMARY/#regular-updates-needed","title":"Regular Updates Needed","text":"<ul> <li>Check external resources for updates</li> <li>Update software versions (PHP, MySQL, Node)</li> <li>Refresh external links</li> <li>Update best practices</li> </ul>"},{"location":"SUMMARY/#quality-checks","title":"Quality Checks","text":"<ul> <li>Verify all links work</li> <li>Test code examples</li> <li>Review for accuracy</li> <li>Update screenshots if needed</li> </ul>"},{"location":"SUMMARY/#continuous-improvement","title":"Continuous Improvement","text":"<ul> <li>Collect feedback from learners</li> <li>Update based on common questions</li> <li>Add clarifications where needed</li> <li>Include new resources</li> </ul>"},{"location":"SUMMARY/#completion","title":"Completion","text":""},{"location":"SUMMARY/#what-youve-built","title":"What You've Built","text":"<p>A comprehensive, production-ready onboarding program that includes: - \u2705 Clear learning path - \u2705 Detailed instructions - \u2705 Progress tracking - \u2705 Assessment tools - \u2705 Support structure - \u2705 All resources in one place</p>"},{"location":"SUMMARY/#ready-to-use","title":"Ready to Use","text":"<p>This repository is immediately usable for: - Onboarding new developers - Self-directed learning - Team training programs - Bootcamp curriculum</p>"},{"location":"SUMMARY/#feedback-improvements","title":"\ud83d\udce7 Feedback &amp; Improvements","text":"<p>To improve this onboarding program:</p> <ol> <li>Collect feedback from learners</li> <li>Track common pain points</li> <li>Monitor completion rates</li> <li>Review quiz results</li> <li>Analyze project quality</li> <li>Update content regularly</li> </ol>"},{"location":"SUMMARY/#acknowledgments","title":"Acknowledgments","text":"<p>Based on:</p> <ul> <li>Industry best practices</li> <li>Clean code principles</li> <li>Real-world development experience</li> </ul> <p>This onboarding program is ready to use! \ud83d\ude80</p> <p>Start onboarding: Share QUICK-START.md with new developers Track progress: Use PROGRESS-CHECKLIST.md Get details: Reference ONBOARDING-GUIDE.md</p> <p>Created: October 2025 Last Updated: October 2025</p>"},{"location":"debuging/","title":"Debugging Tools and Configuration","text":"<p>Complete guide for debugging WordPress and PHP applications using Laravel Herd.</p>"},{"location":"debuging/#table-of-contents","title":"Table of Contents","text":"<ol> <li>WordPress Debugging Plugins</li> <li>PHP Debug with VSCode</li> <li>PHP Debug with PhpStorm</li> <li>Additional Resources</li> </ol>"},{"location":"debuging/#wordpress-debugging-plugins","title":"WordPress Debugging Plugins","text":"<p>Essential plugins for WordPress development and debugging:</p> <ul> <li>User Switching - Instantly switch between user accounts in WordPress for testing different user roles and permissions</li> <li>Query Monitor - Debug database queries, hooks, conditionals, HTTP requests, and more with detailed performance insights</li> <li>WP Crontrol - View and control WP-Cron jobs and schedules directly from the WordPress admin</li> <li>WP Console - Run WordPress and PHP code directly from your browser console for quick debugging</li> <li>WP Mail Logging - Log and view all emails sent through WordPress to debug email delivery issues</li> </ul>"},{"location":"debuging/#php-debug-configuration-for-vscode","title":"PHP Debug Configuration for VSCode","text":""},{"location":"debuging/#prerequisites","title":"Prerequisites","text":"<ul> <li>Laravel Herd installed</li> <li>Visual Studio Code installed</li> <li>Basic understanding of Xdebug</li> </ul>"},{"location":"debuging/#step-1-configure-xdebug-in-phpini","title":"Step 1: Configure Xdebug in php.ini","text":"<p>Modify the <code>php.ini</code> file for your PHP version in <code>~/Library/Application Support/Herd/config/php/</code> folder.</p> <p>Example for PHP 8.1 (<code>~/Library/Application Support/Herd/config/php/php81.ini</code>):</p> <pre><code>pcre.jit=0\noutput_buffering=4096\nupload_max_filesize=200M\npost_max_size=2000M\nmemory_limit=-1\nauto_prepend_file=/Applications/Herd.app/Contents/Resources/valet/dump-loader.php\nextension=/Applications/Herd.app/Contents/Resources/herd-ext/herd-81-arm64.so\nzend_extension=/Applications/Herd.app/Contents/Resources/xdebug/xdebug-81-arm64.so\nxdebug.mode=debug,develop\nxdebug.start_with_request=yes\nxdebug.start_upon_error=yes\n</code></pre> <p>Note: Adjust the paths according to your PHP version (php81, php82, php83).</p> <p>See the Laravel Herd Xdebug documentation for more details.</p>"},{"location":"debuging/#step-2-install-php-debug-extension","title":"Step 2: Install PHP Debug Extension","text":"<p>Install the PHP Debug extension for VSCode.</p>"},{"location":"debuging/#step-3-create-launch-configuration","title":"Step 3: Create Launch Configuration","text":"<p>Create a <code>.vscode/launch.json</code> file in your workspace root:</p> <pre><code>{\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"name\": \"Listen for Xdebug\",\n            \"type\": \"php\",\n            \"request\": \"launch\",\n            \"port\": 9003,\n            \"pathMappings\": {\n                \"/absolute/path/to/your/project\": \"${workspaceFolder}\"\n            },\n            \"log\": true\n        }\n    ]\n}\n</code></pre> <p>Replace <code>/absolute/path/to/your/project</code> with your actual project path.</p> <p>Example: <pre><code>\"pathMappings\": {\n    \"/Users/mahbub/Development/Projects/my-project\": \"${workspaceFolder}\"\n}\n</code></pre></p>"},{"location":"debuging/#step-4-start-debugging","title":"Step 4: Start Debugging","text":"<ol> <li>Set breakpoints in your PHP code (click in the gutter next to line numbers)</li> <li>Press <code>F5</code> or click Run &gt; Start Debugging</li> <li>VSCode will start listening for Xdebug connections</li> <li>Access your site in the browser</li> <li>VSCode should pause at your breakpoints</li> </ol>"},{"location":"debuging/#php-debug-configuration-for-phpstorm","title":"PHP Debug Configuration for PhpStorm","text":""},{"location":"debuging/#prerequisites_1","title":"Prerequisites","text":"<ul> <li>Laravel Herd installed</li> <li>PhpStorm installed</li> <li>Basic understanding of Xdebug</li> </ul>"},{"location":"debuging/#step-1-configure-xdebug-in-phpini_1","title":"Step 1: Configure Xdebug in php.ini","text":"<p>Modify the <code>php.ini</code> file for your PHP version in <code>~/Library/Application Support/Herd/config/php/</code> folder.</p> <p>Example for PHP 8.1 (<code>~/Library/Application Support/Herd/config/php/php81.ini</code>):</p> <pre><code>pcre.jit=0\noutput_buffering=4096\nupload_max_filesize=200M\npost_max_size=2000M\nmemory_limit=-1\nauto_prepend_file=/Applications/Herd.app/Contents/Resources/valet/dump-loader.php\nextension=/Applications/Herd.app/Contents/Resources/herd-ext/herd-81-arm64.so\nzend_extension=/Applications/Herd.app/Contents/Resources/xdebug/xdebug-81-arm64.so\nxdebug.mode=debug,develop\nxdebug.start_with_request=yes\nxdebug.start_upon_error=yes\n</code></pre> <p>Note: Adjust the paths according to your PHP version (php81, php82, php83).</p> <p>See the Laravel Herd Xdebug documentation for more details.</p>"},{"location":"debuging/#step-2-configure-php-interpreter-in-phpstorm","title":"Step 2: Configure PHP Interpreter in PhpStorm","text":"<ol> <li>Open PhpStorm &gt; Settings (or Preferences on Mac)</li> <li>Navigate to PHP</li> <li>Click the ... button next to CLI Interpreter</li> <li>Click + to add a new interpreter</li> <li>Select Other Local...</li> <li>Set the PHP executable path:</li> <li>For PHP 8.1: <code>/Users/YOUR_USERNAME/Library/Application Support/Herd/bin/php81</code></li> <li>For PHP 8.2: <code>/Users/YOUR_USERNAME/Library/Application Support/Herd/bin/php82</code></li> <li>For PHP 8.3: <code>/Users/YOUR_USERNAME/Library/Application Support/Herd/bin/php83</code></li> <li>PhpStorm should automatically detect Xdebug</li> <li>Click OK to save</li> </ol>"},{"location":"debuging/#step-3-configure-debug-settings","title":"Step 3: Configure Debug Settings","text":"<ol> <li>Go to PhpStorm &gt; Settings &gt; PHP &gt; Debug</li> <li>Set the following:</li> <li>Xdebug port: <code>9003</code> (default)</li> <li>\u2705 Check Can accept external connections</li> <li>\u2705 Check Break at first line in PHP scripts (for initial testing, can disable later)</li> <li>\u2705 Check Force break at first line when no path mapping specified</li> <li>\u2705 Check Force break at first line when a script is outside the project</li> <li>Click OK</li> </ol>"},{"location":"debuging/#step-4-configure-server-for-wordpressweb-projects","title":"Step 4: Configure Server (for WordPress/Web Projects)","text":"<ol> <li>Go to PhpStorm &gt; Settings &gt; PHP &gt; Servers</li> <li>Click + to add a new server</li> <li>Configure:</li> <li>Name: Your project name (e.g., <code>my-project.test</code>)</li> <li>Host: Your Herd domain (e.g., <code>my-project.test</code>)</li> <li>Port: <code>80</code> (or <code>443</code> for HTTPS)</li> <li>Debugger: <code>Xdebug</code></li> <li>\u2705 Check Use path mappings</li> <li>Map your project root to the absolute server path:<ul> <li>Local path: <code>/Users/YOUR_USERNAME/Herd/my-project</code></li> <li>Absolute path on server: <code>/Users/YOUR_USERNAME/Herd/my-project</code></li> </ul> </li> <li>Click OK</li> </ol>"},{"location":"debuging/#step-5-create-debug-configuration","title":"Step 5: Create Debug Configuration","text":"<ol> <li>Click Run &gt; Edit Configurations...</li> <li>Click + and select PHP Web Page</li> <li>Configure:</li> <li>Name: Debug My Project</li> <li>Server: Select the server you created in Step 4</li> <li>Start URL: <code>/</code> (or your starting page)</li> <li>Click OK</li> </ol>"},{"location":"debuging/#step-6-start-debugging","title":"Step 6: Start Debugging","text":"<ol> <li>Set breakpoints in your PHP code (click in the gutter next to line numbers)</li> <li>Click the Listen for PHP Debug Connections button (phone icon) in the toolbar</li> <li>Start debugging:</li> <li>Option A: Click Run &gt; Debug 'Debug My Project'</li> <li>Option B: Install the Xdebug helper browser extension and enable debugging in your browser</li> <li>Access your site in the browser</li> <li>PhpStorm should pause at your breakpoints</li> </ol>"},{"location":"debuging/#troubleshooting","title":"Troubleshooting","text":""},{"location":"debuging/#xdebug-not-detected","title":"Xdebug Not Detected","text":"<ul> <li>Verify Xdebug is installed: Run <code>php -v</code> in terminal (should show \"with Xdebug\")</li> <li>Restart Herd after modifying php.ini</li> <li>Restart PhpStorm</li> </ul>"},{"location":"debuging/#breakpoints-not-working","title":"Breakpoints Not Working","text":"<ul> <li>Ensure the \"Listen for PHP Debug Connections\" icon is active (green)</li> <li>Check that port 9003 is not blocked by firewall</li> <li>Verify path mappings in Server configuration</li> <li>Check PhpStorm's Event Log for Xdebug connection messages</li> </ul>"},{"location":"debuging/#path-mapping-issues","title":"Path Mapping Issues","text":"<ul> <li>Make sure local path exactly matches your project directory</li> <li>Absolute path should be the same for Herd local development</li> <li>Check for case-sensitivity in paths</li> </ul>"},{"location":"debuging/#useful-phpstorm-shortcuts","title":"Useful PhpStorm Shortcuts","text":"Action Mac Windows/Linux Set/Remove Breakpoint <code>Cmd + F8</code> <code>Ctrl + F8</code> Resume Program <code>Cmd + Option + R</code> <code>F9</code> Step Over <code>F8</code> <code>F8</code> Step Into <code>F7</code> <code>F7</code> Step Out <code>Shift + F8</code> <code>Shift + F8</code> Evaluate Expression <code>Option + F8</code> <code>Alt + F8</code>"},{"location":"debuging/#additional-resources","title":"Additional Resources","text":""},{"location":"debuging/#documentation","title":"Documentation","text":"<ul> <li>Laravel Herd Documentation - Official Herd documentation</li> <li>Xdebug Documentation - Complete Xdebug reference</li> </ul>"},{"location":"debuging/#ide-guides","title":"IDE Guides","text":"<ul> <li>VSCode PHP Debug Guide - VSCode extension documentation</li> <li>PhpStorm Xdebug Guide - Official PhpStorm debugging guide</li> </ul>"},{"location":"debuging/#browser-extensions","title":"Browser Extensions","text":"<ul> <li>Xdebug Helper for Chrome - Enable/disable Xdebug from browser</li> <li>Xdebug Helper for Firefox - Firefox version</li> </ul>"},{"location":"debuging/#wordpress-debugging","title":"WordPress Debugging","text":"<ul> <li>WordPress Debugging - Official WordPress debugging guide</li> <li>Query Monitor Documentation - Advanced WordPress debugging</li> </ul>"},{"location":"operating-system/os-fundamentals/","title":"Operating System Basics","text":"<p>Understanding operating system fundamentals is crucial for efficient software development. This guide covers essential OS concepts that every developer should know.</p>"},{"location":"operating-system/os-fundamentals/#table-of-contents","title":"Table of Contents","text":"<ol> <li>Command-Line Interface (CLI)</li> <li>Process Management</li> <li>File System &amp; Permissions</li> <li>System Monitoring</li> <li>Shell Scripting Basics</li> </ol>"},{"location":"operating-system/os-fundamentals/#command-line-interface-cli","title":"Command-Line Interface (CLI)","text":""},{"location":"operating-system/os-fundamentals/#why-cli-matters","title":"Why CLI Matters","text":"<ul> <li>Faster than GUI for many tasks</li> <li>Essential for server management</li> <li>Automation and scripting capabilities</li> <li>Better for remote systems</li> </ul>"},{"location":"operating-system/os-fundamentals/#essential-commands","title":"Essential Commands","text":""},{"location":"operating-system/os-fundamentals/#navigation","title":"Navigation","text":"<pre><code># Print working directory\npwd\n\n# List files and directories\nls                    # Basic listing\nls -l                 # Long format with details\nls -la                # Include hidden files\nls -lh                # Human-readable file sizes\n\n# Change directory\ncd /path/to/directory # Absolute path\ncd ../                # Up one level\ncd ~                  # Home directory\ncd -                  # Previous directory\n</code></pre>"},{"location":"operating-system/os-fundamentals/#file-operations","title":"File Operations","text":"<pre><code># Create files\ntouch filename.txt\necho \"content\" &gt; file.txt\n\n# Create directories\nmkdir new-folder\nmkdir -p parent/child/grandchild\n\n# Copy files/directories\ncp source.txt destination.txt\ncp -r source-dir/ destination-dir/\n\n# Move/rename\nmv old-name.txt new-name.txt\nmv file.txt /new/location/\n\n# Delete\nrm file.txt\nrm -r directory/      # Recursive delete\nrm -rf directory/     # Force recursive delete (use carefully!)\n</code></pre>"},{"location":"operating-system/os-fundamentals/#viewing-files","title":"Viewing Files","text":"<pre><code># View entire file\ncat file.txt\n\n# View with pagination\nless file.txt         # Navigate with arrows, q to quit\nmore file.txt\n\n# View first/last lines\nhead file.txt         # First 10 lines\nhead -n 20 file.txt   # First 20 lines\ntail file.txt         # Last 10 lines\ntail -f log.txt       # Follow/watch file (great for logs)\n</code></pre>"},{"location":"operating-system/os-fundamentals/#search-filter","title":"Search &amp; Filter","text":"<pre><code># Search within files\ngrep \"search-term\" file.txt\ngrep -r \"term\" directory/       # Recursive search\ngrep -i \"term\" file.txt         # Case-insensitive\ngrep -n \"term\" file.txt         # Show line numbers\n\n# Find files\nfind . -name \"*.php\"            # Find by name\nfind . -type f                  # Find files only\nfind . -type d                  # Find directories only\nfind . -mtime -7                # Modified in last 7 days\nfind . -size +100M              # Files larger than 100MB\n\n# Which/whereis\nwhich php                       # Show command location\nwhereis php                     # Show binary, source, manual locations\n</code></pre>"},{"location":"operating-system/os-fundamentals/#pipes-redirection","title":"Pipes &amp; Redirection","text":"<pre><code># Pipe output to another command\nls -l | grep \".php\"\ncat file.txt | grep \"error\" | wc -l\n\n# Redirect output\ncommand &gt; output.txt            # Overwrite file\ncommand &gt;&gt; output.txt           # Append to file\ncommand 2&gt; error.txt            # Redirect errors\ncommand &amp;&gt; all.txt              # Redirect output and errors\n\n# Input redirection\ncommand &lt; input.txt\n</code></pre>"},{"location":"operating-system/os-fundamentals/#practical-examples","title":"Practical Examples","text":"<pre><code># Count PHP files in current directory\nfind . -name \"*.php\" | wc -l\n\n# Find and delete all .log files\nfind . -name \"*.log\" -delete\n\n# Search for TODO comments in PHP files\ngrep -rn \"TODO\" . --include=\"*.php\"\n\n# Find large files\nfind . -type f -size +50M -exec ls -lh {} \\;\n\n# Monitor real-time logs\ntail -f /var/log/apache2/error.log | grep \"PHP\"\n</code></pre>"},{"location":"operating-system/os-fundamentals/#process-management","title":"Process Management","text":""},{"location":"operating-system/os-fundamentals/#understanding-processes","title":"Understanding Processes","text":"<p>A process is a running instance of a program. Every command you run creates a process.</p>"},{"location":"operating-system/os-fundamentals/#process-information","title":"Process Information","text":"<pre><code># List all processes\nps aux\n\n# Interactive process viewer\ntop\nhtop                  # Enhanced version (may need to install)\n\n# Process tree\npstree\nps auxf\n\n# Find specific processes\nps aux | grep php\npgrep -l php         # Process ID and name\npidof php-fpm        # Get PID of process\n</code></pre>"},{"location":"operating-system/os-fundamentals/#process-control","title":"Process Control","text":"<pre><code># Run process in background\ncommand &amp;\n\n# Bring to foreground\nfg\n\n# Send to background\nbg\n\n# List background jobs\njobs\n\n# Suspend current process\nCtrl + Z\n\n# Kill processes\nkill PID                # Graceful termination (SIGTERM)\nkill -9 PID            # Force kill (SIGKILL)\nkillall process-name   # Kill by name\npkill process-name     # Kill by name (pattern)\n</code></pre>"},{"location":"operating-system/os-fundamentals/#common-signals","title":"Common Signals","text":"<pre><code>kill -l                # List all signals\n\n# Common signals\nSIGTERM (15)          # Graceful shutdown (default)\nSIGKILL (9)           # Force kill (cannot be caught)\nSIGINT (2)            # Interrupt (Ctrl+C)\nSIGHUP (1)            # Hangup (reload config)\nSIGSTOP (19)          # Pause process\nSIGCONT (18)          # Continue paused process\n</code></pre>"},{"location":"operating-system/os-fundamentals/#process-priority","title":"Process Priority","text":"<pre><code># Run with different priority\nnice -n 10 command     # Lower priority (nice to others)\nnice -n -10 command    # Higher priority (requires sudo)\n\n# Change priority of running process\nrenice 10 -p PID\n\n# View process priority\nps -el | grep process-name\n</code></pre>"},{"location":"operating-system/os-fundamentals/#background-daemon-processes","title":"Background &amp; Daemon Processes","text":"<pre><code># Run and detach from terminal\nnohup command &amp;\n\n# Run in background, ignore hangup\nnohup ./script.sh &gt; output.log 2&gt;&amp;1 &amp;\n\n# Disown a job\ncommand &amp;\ndisown\n</code></pre>"},{"location":"operating-system/os-fundamentals/#file-system-permissions","title":"File System &amp; Permissions","text":""},{"location":"operating-system/os-fundamentals/#file-system-hierarchy","title":"File System Hierarchy","text":"<pre><code>/                     Root directory\n\u251c\u2500\u2500 bin              Essential binaries\n\u251c\u2500\u2500 etc              Configuration files\n\u251c\u2500\u2500 home             User home directories\n\u251c\u2500\u2500 var              Variable files (logs, cache)\n\u2502   \u251c\u2500\u2500 log          Log files\n\u2502   \u2514\u2500\u2500 www          Web files\n\u251c\u2500\u2500 usr              User programs\n\u2502   \u251c\u2500\u2500 bin          User binaries\n\u2502   \u2514\u2500\u2500 local        Locally installed software\n\u2514\u2500\u2500 tmp              Temporary files\n</code></pre>"},{"location":"operating-system/os-fundamentals/#file-permissions","title":"File Permissions","text":""},{"location":"operating-system/os-fundamentals/#understanding-permission-format","title":"Understanding Permission Format","text":"<pre><code>-rwxrw-r--  1 user group 4096 Jan 1 12:00 file.txt\n\u2502\u2514\u252c\u2518\u2514\u252c\u2518\u2514\u252c\u2518\n\u2502 \u2502  \u2502  \u2514\u2500\u2500 Others permissions (read)\n\u2502 \u2502  \u2514\u2500\u2500\u2500\u2500\u2500 Group permissions (read, write)\n\u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Owner permissions (read, write, execute)\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 File type (- = file, d = directory, l = link)\n</code></pre>"},{"location":"operating-system/os-fundamentals/#permission-values","title":"Permission Values","text":"<ul> <li>r (read): 4</li> <li>w (write): 2</li> <li>x (execute): 1</li> </ul>"},{"location":"operating-system/os-fundamentals/#common-permission-combinations","title":"Common Permission Combinations","text":"<ul> <li>777: rwxrwxrwx (all permissions for everyone) - AVOID in production!</li> <li>755: rwxr-xr-x (owner can do anything, others can read/execute)</li> <li>644: rw-r--r-- (owner can read/write, others can only read)</li> <li>600: rw------- (only owner can read/write)</li> </ul>"},{"location":"operating-system/os-fundamentals/#managing-permissions","title":"Managing Permissions","text":"<pre><code># Change file permissions\nchmod 755 script.sh          # Numeric\nchmod u+x script.sh          # Add execute for user\nchmod go-w file.txt          # Remove write for group and others\nchmod -R 755 directory/      # Recursive\n\n# Change ownership\nchown user:group file.txt\nchown -R user:group directory/\nchgrp group file.txt         # Change group only\n\n# View permissions\nls -l file.txt\nstat file.txt                # Detailed info\n</code></pre>"},{"location":"operating-system/os-fundamentals/#special-permissions","title":"Special Permissions","text":"<pre><code># Setuid (SUID) - run as file owner\nchmod u+s file\nchmod 4755 file\n\n# Setgid (SGID) - run as group owner\nchmod g+s file\nchmod 2755 file\n\n# Sticky bit - only owner can delete\nchmod +t directory\nchmod 1777 directory\n</code></pre>"},{"location":"operating-system/os-fundamentals/#system-monitoring","title":"System Monitoring","text":""},{"location":"operating-system/os-fundamentals/#disk-usage","title":"Disk Usage","text":"<pre><code># Disk space\ndf -h                        # Human-readable\ndf -i                        # Inodes\n\n# Directory sizes\ndu -sh directory/            # Summary\ndu -sh *                     # All items in current dir\ndu -h --max-depth=1          # One level deep\nncdu                         # Interactive disk usage (install separately)\n</code></pre>"},{"location":"operating-system/os-fundamentals/#memory-usage","title":"Memory Usage","text":"<pre><code># Memory information\nfree -h                      # Human-readable\nfree -m                      # In megabytes\n\n# Detailed memory info\ncat /proc/meminfo\nvmstat                       # Virtual memory statistics\nvmstat 5                     # Update every 5 seconds\n</code></pre>"},{"location":"operating-system/os-fundamentals/#cpu-load","title":"CPU &amp; Load","text":"<pre><code># CPU information\nlscpu\ncat /proc/cpuinfo\n\n# Load average\nuptime                       # System uptime and load\nw                           # Who's logged in and system load\n\n# Monitor CPU usage\ntop\nhtop\nmpstat                      # Multiprocessor statistics\n</code></pre>"},{"location":"operating-system/os-fundamentals/#network","title":"Network","text":"<pre><code># Network interfaces\nifconfig                    # Show network interfaces\nip addr                     # Modern alternative\nip link                     # Network devices\n\n# Network statistics\nnetstat -tuln              # Listening ports\nss -tuln                   # Modern alternative\nlsof -i :80                # What's using port 80\n\n# Test connectivity\nping example.com\ncurl -I https://example.com\nwget https://example.com\ntraceroute example.com\n</code></pre>"},{"location":"operating-system/os-fundamentals/#system-information","title":"System Information","text":"<pre><code># OS information\nuname -a                   # All system info\ncat /etc/os-release        # Distribution info\nhostnamectl               # System hostname and info\n\n# Hardware information\nlshw                      # Detailed hardware\nlsblk                     # Block devices\nlsusb                     # USB devices\nlspci                     # PCI devices\n</code></pre>"},{"location":"operating-system/os-fundamentals/#shell-scripting-basics","title":"Shell Scripting Basics","text":""},{"location":"operating-system/os-fundamentals/#creating-a-script","title":"Creating a Script","text":"<pre><code>#!/bin/bash\n# This is a comment\n\necho \"Hello, World!\"\n</code></pre>"},{"location":"operating-system/os-fundamentals/#making-script-executable","title":"Making Script Executable","text":"<pre><code>chmod +x script.sh\n./script.sh\n</code></pre>"},{"location":"operating-system/os-fundamentals/#variables","title":"Variables","text":"<pre><code>#!/bin/bash\n\n# Variable assignment (no spaces around =)\nNAME=\"John\"\nAGE=30\n\n# Using variables\necho \"Name: $NAME\"\necho \"Age: ${AGE}\"\n\n# Command output\nCURRENT_DIR=$(pwd)\nDATE=`date +%Y-%m-%d`\n\n# Read user input\nread -p \"Enter your name: \" USERNAME\necho \"Hello, $USERNAME\"\n</code></pre>"},{"location":"operating-system/os-fundamentals/#conditionals","title":"Conditionals","text":"<pre><code>#!/bin/bash\n\nif [ \"$1\" = \"start\" ]; then\n    echo \"Starting...\"\nelif [ \"$1\" = \"stop\" ]; then\n    echo \"Stopping...\"\nelse\n    echo \"Unknown command\"\nfi\n\n# File tests\nif [ -f \"file.txt\" ]; then\n    echo \"File exists\"\nfi\n\nif [ -d \"directory\" ]; then\n    echo \"Directory exists\"\nfi\n</code></pre>"},{"location":"operating-system/os-fundamentals/#loops","title":"Loops","text":"<pre><code>#!/bin/bash\n\n# For loop\nfor i in 1 2 3 4 5; do\n    echo \"Number: $i\"\ndone\n\n# For loop with range\nfor i in {1..5}; do\n    echo \"Count: $i\"\ndone\n\n# For loop with files\nfor file in *.txt; do\n    echo \"Processing: $file\"\ndone\n\n# While loop\nCOUNT=0\nwhile [ $COUNT -lt 5 ]; do\n    echo \"Count: $COUNT\"\n    COUNT=$((COUNT + 1))\ndone\n</code></pre>"},{"location":"operating-system/os-fundamentals/#functions","title":"Functions","text":"<pre><code>#!/bin/bash\n\n# Define function\ngreet() {\n    echo \"Hello, $1!\"\n}\n\n# Call function\ngreet \"World\"\ngreet \"Developer\"\n\n# Function with return\nadd() {\n    return $(($1 + $2))\n}\n\nadd 5 3\nresult=$?\necho \"Result: $result\"\n</code></pre>"},{"location":"operating-system/os-fundamentals/#practical-script-examples","title":"Practical Script Examples","text":""},{"location":"operating-system/os-fundamentals/#backup-script","title":"Backup Script","text":"<pre><code>#!/bin/bash\n\n# Backup directory script\nSOURCE=\"/var/www/html\"\nDEST=\"/backup\"\nDATE=$(date +%Y%m%d_%H%M%S)\nBACKUP_NAME=\"backup_$DATE.tar.gz\"\n\necho \"Starting backup...\"\ntar -czf \"$DEST/$BACKUP_NAME\" \"$SOURCE\"\n\nif [ $? -eq 0 ]; then\n    echo \"Backup completed: $BACKUP_NAME\"\nelse\n    echo \"Backup failed!\"\n    exit 1\nfi\n</code></pre>"},{"location":"operating-system/os-fundamentals/#log-monitor","title":"Log Monitor","text":"<pre><code>#!/bin/bash\n\n# Monitor log file for errors\nLOG_FILE=\"/var/log/app.log\"\nERROR_COUNT=$(grep -c \"ERROR\" \"$LOG_FILE\")\n\necho \"Found $ERROR_COUNT errors in log\"\n\nif [ $ERROR_COUNT -gt 0 ]; then\n    echo \"Recent errors:\"\n    grep \"ERROR\" \"$LOG_FILE\" | tail -5\nfi\n</code></pre>"},{"location":"operating-system/os-fundamentals/#scheduled-tasks-cron-jobs","title":"Scheduled Tasks (Cron Jobs)","text":""},{"location":"operating-system/os-fundamentals/#crontab-format","title":"Crontab Format","text":"<pre><code>* * * * * command\n\u2502 \u2502 \u2502 \u2502 \u2502\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500\u2500 Day of week (0-7, Sunday = 0 or 7)\n\u2502 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500 Month (1-12)\n\u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Day of month (1-31)\n\u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Hour (0-23)\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Minute (0-59)\n</code></pre>"},{"location":"operating-system/os-fundamentals/#crontab-examples","title":"Crontab Examples","text":"<pre><code># Every minute\n* * * * * /path/to/script.sh\n\n# Every hour\n0 * * * * /path/to/script.sh\n\n# Every day at 2:30 AM\n30 2 * * * /path/to/script.sh\n\n# Every Monday at 5 PM\n0 17 * * 1 /path/to/script.sh\n\n# First day of month at midnight\n0 0 1 * * /path/to/script.sh\n</code></pre>"},{"location":"operating-system/os-fundamentals/#managing-cron-jobs","title":"Managing Cron Jobs","text":"<pre><code># Edit crontab\ncrontab -e\n\n# List cron jobs\ncrontab -l\n\n# Remove all cron jobs\ncrontab -r\n\n# Edit cron for specific user (requires sudo)\nsudo crontab -u username -e\n</code></pre>"},{"location":"operating-system/os-fundamentals/#learning-resources","title":"Learning Resources","text":""},{"location":"operating-system/os-fundamentals/#documentation","title":"Documentation","text":"<ul> <li>Linux Command Line Basics</li> <li>Bash Guide for Beginners</li> <li>Advanced Bash-Scripting Guide</li> </ul>"},{"location":"operating-system/os-fundamentals/#practice","title":"Practice","text":"<ul> <li>OverTheWire: Bandit - Learn Linux commands through challenges</li> <li>Terminus - Terminal game</li> </ul>"},{"location":"operating-system/os-fundamentals/#cheat-sheets","title":"Cheat Sheets","text":"<ul> <li>Linux Command Cheat Sheet</li> <li>Bash Scripting Cheat Sheet</li> </ul>"},{"location":"operating-system/os-fundamentals/#quiz-questions","title":"Quiz Questions","text":"<p>Test your knowledge:</p> <ol> <li>What is the difference between <code>rm</code> and <code>rm -rf</code>?</li> <li>How do you find all files modified in the last 24 hours?</li> <li>What signal does <code>kill</code> send by default?</li> <li>What does the permission <code>644</code> mean?</li> <li>How do you run a process in the background?</li> <li>What's the difference between <code>ps aux</code> and <code>top</code>?</li> <li>How do you schedule a script to run every day at midnight?</li> <li>What does the <code>|</code> (pipe) operator do?</li> </ol>"},{"location":"operating-system/os-fundamentals/#best-practices","title":"Best Practices","text":"<ol> <li>Always test destructive commands first (especially rm -rf)</li> <li>Use tab completion to avoid typos</li> <li>Read man pages: <code>man command-name</code></li> <li>Use <code>--help</code> flag: <code>command --help</code></li> <li>Be careful with sudo - understand what you're doing</li> <li>Regular backups before system changes</li> <li>Log important operations for audit trail</li> <li>Use version control for scripts and configs</li> </ol>"},{"location":"operating-system/os-fundamentals/#common-pitfalls-to-avoid","title":"Common Pitfalls to Avoid","text":"<p>\u274c Don't: <code>sudo rm -rf /</code> \u2705 Do: Double-check paths before deleting</p> <p>\u274c Don't: Run untrusted scripts with sudo \u2705 Do: Review scripts before executing</p> <p>\u274c Don't: Store sensitive data in plain text \u2705 Do: Use proper encryption and permissions</p> <p>\u274c Don't: Ignore error messages \u2705 Do: Read and understand errors</p> <p>Next Step: Web Fundamentals</p>"},{"location":"programming-languages/","title":"Programming Languages Guide","text":"<p>Complete learning path for web development with WordPress focus.</p>"},{"location":"programming-languages/#learning-path","title":"Learning Path","text":"<p>Follow this order for best results:</p>"},{"location":"programming-languages/#1-development-environment-setup","title":"1. Development Environment Setup \u2699\ufe0f","text":"<p>Time: 1-2 hours Set up your development machine with all required tools.</p> <p>What you'll install:</p> <ul> <li>VS Code</li> <li>Laravel Herd (PHP)</li> <li>Composer</li> <li>MySQL/MariaDB</li> <li>Node.js &amp; npm</li> <li>nvm</li> <li>Git</li> <li>Oh My Zsh</li> </ul> <p>Start here \u2192 dev-environment.md</p>"},{"location":"programming-languages/#2-html-css","title":"2. HTML &amp; CSS \ud83c\udfa8","text":"<p>Time: 2-3 days Learn web structure and styling fundamentals.</p> <p>Topics:</p> <ul> <li>HTML5 semantic tags</li> <li>CSS3 layouts (Flexbox, Grid)</li> <li>Responsive design</li> <li>BEM methodology</li> <li>SASS preprocessor</li> </ul> <p>Quick Start:</p> <ul> <li>W3Schools Tutorial</li> <li>Video Course</li> <li>Laracasts: HTML &amp; CSS Workshop</li> </ul> <p>Practice: Build a responsive 3-column layout Quiz: HTML &amp; CSS Quiz</p>"},{"location":"programming-languages/#3-javascript","title":"3. JavaScript \u26a1","text":"<p>Time: 3-4 days Master interactive web programming.</p> <p>Topics:</p> <ul> <li>ES6+ modern syntax</li> <li>Closures &amp; scope</li> <li>Event loop</li> <li>Promises &amp; Async/Await</li> <li>Type coercion</li> <li>Clean code practices</li> </ul> <p>Quick Start:</p> <ul> <li>Laracasts: JavaScript - The First Steps</li> <li>Wes Bos JavaScript Notes</li> </ul> <p>Tools: Node.js, npm, nvm Practice: Fix array sum function, understand type coercion Quiz: JavaScript Quiz</p>"},{"location":"programming-languages/#4-php-mysql","title":"4. PHP &amp; MySQL \ud83d\udc18","text":"<p>Time: 3-4 days Learn server-side programming and databases.</p> <p>Topics:</p> <ul> <li>PHP 8 syntax</li> <li>Object-Oriented Programming</li> <li>Namespaces</li> <li>MySQL database operations</li> <li>PDO vs mysqli</li> <li>Session management</li> <li>Clean code practices</li> </ul> <p>Quick Start:</p> <ul> <li>Laracasts: PHP for Beginners (2023)</li> <li>Laracasts: OOP in PHP (2024)</li> <li>Laracasts: MySQL Database Design</li> </ul> <p>Tools: Composer, Laravel Herd, TablePlus/Sequel Ace Practice: Debug log function, fix email validation Quiz: PHP &amp; MySQL Quiz</p>"},{"location":"programming-languages/#5-wordpress-development","title":"5. WordPress Development \ud83c\udf10","text":"<p>Time: 8-12 weeks Master WordPress from basics to advanced development.</p> <p>Topics:</p> <ul> <li>WordPress fundamentals and administration</li> <li>Coding conventions &amp; standards</li> <li>Plugin development (basic to advanced)</li> <li>Theme development (basic to advanced)</li> <li>REST API integration</li> <li>WP-CLI mastery</li> <li>Gutenberg blocks &amp; FSE</li> <li>Performance optimization</li> </ul> <p>Full Course: WordPress Development \u2192</p> <p>Modules:</p> <ol> <li>Introducing WordPress</li> <li>Coding Conventions</li> <li>Basic Plugin Development</li> <li>Basic Theme Development</li> <li>REST API</li> <li>WP-CLI</li> <li>Advanced Plugin Development</li> <li>Advanced Theme Development</li> </ol> <p>Note: Complete the Development Environment Setup before starting WordPress.</p> <p>Practice: Build custom plugins, create themes, develop Gutenberg blocks</p>"},{"location":"programming-languages/#quick-reference","title":"Quick Reference","text":""},{"location":"programming-languages/#by-technology","title":"By Technology","text":"Technology Guide Time Difficulty HTML &amp; CSS html-css.md 2-3 days \u2b50 Beginner JavaScript javascript.md 3-4 days \u2b50\u2b50 Beginner PHP &amp; MySQL php-mysql.md 3-4 days \u2b50\u2b50 Beginner WordPress WordPress Development 8-12 weeks \u2b50\u2b50\u2b50 Intermediate-Advanced"},{"location":"programming-languages/#by-resource-type","title":"By Resource Type","text":"<p>\ud83d\udcf9 Video Courses (Laracasts):</p> <ul> <li>HTML &amp; CSS Workshop</li> <li>Modern CSS for Backend Developers</li> <li>JavaScript - The First Steps</li> <li>PHP for Beginners (2023)</li> <li>OOP Principles in PHP (2024)</li> <li>MySQL Database Design</li> </ul> <p>\ud83d\udcd6 Official Documentation:</p> <ul> <li>MDN Web Docs - HTML, CSS, JavaScript</li> <li>PHP Documentation</li> <li>WordPress Developer Resources</li> <li>WP-CLI</li> </ul> <p>\ud83c\udfae Interactive Learning:</p> <ul> <li>Flexbox Froggy - CSS Flexbox game</li> <li>CSS Grid Garden - CSS Grid game</li> </ul> <p>\u2705 Quizzes:</p> <ul> <li>HTML &amp; CSS Quiz</li> <li>JavaScript Quiz</li> <li>PHP &amp; MySQL Quiz</li> </ul>"},{"location":"programming-languages/#tools-reference","title":"Tools Reference","text":""},{"location":"programming-languages/#code-editor","title":"Code Editor","text":"<ul> <li>VS Code - Recommended for all languages</li> <li>Extensions: PHP Debug, ESLint, Prettier, GitLens</li> </ul>"},{"location":"programming-languages/#php-development","title":"PHP Development","text":"<ul> <li>Laravel Herd - Local PHP environment</li> <li>Composer - PHP package manager</li> <li>PHP 8+ - Latest PHP version</li> </ul>"},{"location":"programming-languages/#database","title":"Database","text":"<ul> <li>MySQL/MariaDB - Database server</li> <li>TablePlus - Database GUI (recommended)</li> <li>Sequel Ace - Mac-only database tool</li> <li>PHPMyAdmin - Web-based management</li> </ul>"},{"location":"programming-languages/#javascript","title":"JavaScript","text":"<ul> <li>Node.js - JavaScript runtime</li> <li>npm - Package manager</li> <li>nvm - Node version manager</li> </ul>"},{"location":"programming-languages/#version-control","title":"Version Control","text":"<ul> <li>Git - Version control system</li> <li>GitHub - Code hosting</li> </ul>"},{"location":"programming-languages/#terminal","title":"Terminal","text":"<ul> <li>Oh My Zsh - Enhanced terminal (optional)</li> </ul>"},{"location":"programming-languages/#learning-tips","title":"Learning Tips","text":""},{"location":"programming-languages/#for-complete-beginners","title":"For Complete Beginners","text":"<ol> <li>\u2705 Start with HTML &amp; CSS - Most visual and immediate</li> <li>\u2705 Move to JavaScript - Add interactivity</li> <li>\u2705 Learn PHP &amp; MySQL - Backend and database</li> <li>\u2705 Finally WordPress - Put it all together</li> </ol>"},{"location":"programming-languages/#for-those-with-programming-experience","title":"For Those with Programming Experience","text":"<ol> <li>\u2705 Skim HTML &amp; CSS basics</li> <li>\u2705 Focus on modern JavaScript (ES6+)</li> <li>\u2705 Study PHP OOP principles</li> <li>\u2705 Dive deep into WordPress architecture</li> </ol>"},{"location":"programming-languages/#daily-practice","title":"Daily Practice","text":"<ul> <li>Morning: Study theory (1-2 hours)</li> <li>Afternoon: Code exercises (2-3 hours)</li> <li>Evening: Build projects (1-2 hours)</li> </ul>"},{"location":"programming-languages/#when-stuck","title":"When Stuck","text":"<ol> <li>Read error messages carefully</li> <li>Google the error</li> <li>Check official documentation</li> <li>Ask in team Slack</li> <li>Schedule time with mentor</li> </ol>"},{"location":"programming-languages/#progress-tracking","title":"Progress Tracking","text":"<p>Use this checklist:</p> <ul> <li> \u2699\ufe0f Development environment setup complete</li> <li> \ud83c\udfa8 HTML &amp; CSS basics learned</li> <li> \ud83c\udfa8 Responsive layout built</li> <li> \ud83c\udfa8 HTML &amp; CSS quiz passed (70%+)</li> <li> \u26a1 JavaScript fundamentals learned</li> <li> \u26a1 Practice problems solved</li> <li> \u26a1 JavaScript quiz passed (70%+)</li> <li> \ud83d\udc18 PHP basics learned</li> <li> \ud83d\udc18 MySQL database operations understood</li> <li> \ud83d\udc18 PHP &amp; MySQL quiz passed (70%+)</li> <li> \ud83c\udf10 WordPress admin dashboard explored</li> <li> \ud83c\udf10 First WordPress plugin created</li> <li> \ud83c\udf10 WP-CLI commands practiced</li> <li> \ud83c\udf10 Gutenberg block developed</li> <li> \ud83c\udf10 WooCommerce basics understood</li> </ul>"},{"location":"programming-languages/#next-steps-after-completion","title":"\ud83c\udf93 Next Steps After Completion","text":"<p>Once you complete all programming language guides:</p> <ol> <li>Operating System Basics - ../operating-system/</li> <li>Web Fundamentals - ../web-fundamentals/</li> <li>Debugging Setup - ../debuging.md</li> <li>Build Real Projects - Apply your knowledge</li> </ol>"},{"location":"programming-languages/#need-help","title":"Need Help?","text":"<ul> <li>Mentor: Schedule 1-on-1 sessions</li> <li>Team Slack: Ask questions in channels</li> <li>Documentation: Check official docs first</li> <li>Stack Overflow: Search for similar problems</li> <li>WordPress.org Forums: WordPress-specific help</li> </ul>"},{"location":"programming-languages/#goals","title":"Goals","text":"<p>By the end of this module, you should be able to:</p> <p>\u2705 Build responsive websites with HTML &amp; CSS \u2705 Create interactive features with JavaScript \u2705 Develop server-side applications with PHP \u2705 Design and query MySQL databases \u2705 Build WordPress plugins and themes \u2705 Customize WooCommerce \u2705 Develop Gutenberg blocks \u2705 Use modern development tools effectively</p> <p>Start your journey: dev-environment.md</p> <p>Estimated Total Time: 12-16 weeks of full-time learning (including comprehensive WordPress)</p> <p>Good luck! \ud83d\ude80</p>"},{"location":"programming-languages/dev-environment/","title":"Development Environment Setup","text":"<p>Complete setup guide for your development machine.</p>"},{"location":"programming-languages/dev-environment/#pre-boarding-checklist","title":"Pre-boarding Checklist","text":"<p>Before you start, ensure you have:</p> <ul> <li> MacBook or development machine</li> <li> GitHub account (Sign up)</li> <li> Slack invitation (ask your team lead)</li> <li> Access to GitHub repositories and projects</li> <li> Code editor installed (see below)</li> </ul>"},{"location":"programming-languages/dev-environment/#required-software","title":"Required Software","text":""},{"location":"programming-languages/dev-environment/#1-code-editor","title":"1. Code Editor","text":"<p>VS Code (Recommended)</p> <ul> <li>Download: https://code.visualstudio.com/</li> <li>Lightweight, fast, excellent extensions</li> <li>Great for JavaScript, PHP, HTML, CSS</li> </ul> <p>Recommended Extensions:</p>"},{"location":"programming-languages/dev-environment/#php-development","title":"PHP Development","text":"<ul> <li>PHP Debug (<code>xdebug.php-debug</code>) - Debug PHP code with Xdebug</li> <li>PHP Intelephense (<code>bmewburn.vscode-intelephense-client</code>) - PHP language support</li> <li>PHP DocBlocker (<code>neilbrayfield.php-docblocker</code>) - Generate PHP docblocks</li> <li>PHP Sniffer (<code>wongjn.php-sniffer</code>) - PHP code sniffer integration</li> <li>PHPUnit (<code>recca0120.vscode-phpunit</code>) - PHPUnit test runner</li> </ul>"},{"location":"programming-languages/dev-environment/#wordpress-development","title":"WordPress Development","text":"<ul> <li>WordPress Hooks IntelliSense (<code>johnbillion.vscode-wordpress-hooks</code>) - WordPress hooks autocomplete</li> <li>WordPress Toolbox (<code>wordpresstoolbox.wordpress-toolbox</code>) - WordPress development tools</li> <li>WooCommerce Snippets (<code>claudiosanches.woocommerce</code>) - WooCommerce code snippets</li> </ul>"},{"location":"programming-languages/dev-environment/#javascriptfrontend","title":"JavaScript/Frontend","text":"<ul> <li>ESLint (<code>dbaeumer.vscode-eslint</code>) - JavaScript linting</li> <li>Prettier (<code>esbenp.prettier-vscode</code>) - Code formatter</li> <li>Prettier ESLint (<code>rvest.vs-code-prettier-eslint</code>) - Prettier + ESLint integration</li> <li>Tailwind CSS IntelliSense (<code>bradlc.vscode-tailwindcss</code>) - Tailwind CSS support</li> <li>Auto Close Tag (<code>formulahendry.auto-close-tag</code>) - Auto close HTML/XML tags</li> <li>Auto Rename Tag (<code>formulahendry.auto-rename-tag</code>) - Auto rename paired tags</li> </ul>"},{"location":"programming-languages/dev-environment/#testing-debugging","title":"Testing &amp; Debugging","text":"<ul> <li>Playwright Test (<code>ms-playwright.playwright</code>) - End-to-end testing</li> </ul>"},{"location":"programming-languages/dev-environment/#utilities","title":"Utilities","text":"<ul> <li>Code Spell Checker (<code>streetsidesoftware.code-spell-checker</code>) - Spell checking</li> <li>Markdown Mermaid (<code>bierner.markdown-mermaid</code>) - Mermaid diagrams in markdown</li> <li>YAML (<code>redhat.vscode-yaml</code>) - YAML language support</li> <li>Live Share (<code>ms-vsliveshare.vsliveshare</code>) - Real-time collaboration</li> </ul> <p>Installation: Open VS Code, press <code>Cmd+Shift+X</code> (Mac) or <code>Ctrl+Shift+X</code> (Windows), search for extension names, and click Install.</p> <p>Also checkout Visual Studio Code Editor for WordPress development</p>"},{"location":"programming-languages/dev-environment/#2-php-development","title":"2. PHP Development","text":"<p>Laravel Herd (All-in-one PHP environment)</p> <ul> <li>Download: https://herd.laravel.com/</li> <li>Includes PHP, Nginx, dnsmasq</li> <li>Easy local site management</li> <li>Perfect for WordPress development</li> </ul> <pre><code># After installation, verify:\nphp --version\n</code></pre> <p>Composer (PHP Package Manager)</p> <ul> <li>Download: https://getcomposer.org/</li> <li>Required for modern PHP development</li> </ul> <pre><code>composer --version\n</code></pre>"},{"location":"programming-languages/dev-environment/#3-database","title":"3. Database","text":"<p>MySQL or MariaDB</p> <ul> <li>MySQL: https://dev.mysql.com/downloads/mysql/</li> <li>MariaDB: https://mariadb.org/download/</li> </ul> <p>Database Management Tools (choose one):</p> <ul> <li>PHPMyAdmin - https://www.phpmyadmin.net/ Web-based, included with Herd</li> <li>TablePlus - https://tableplus.com/ (Recommended for Mac)</li> <li>MySQL Workbench - https://dev.mysql.com/downloads/workbench/</li> <li>Sequel Ace - https://sequel-ace.com/ (Mac only, free)</li> </ul> <pre><code># Verify installation:\nmysql --version\n</code></pre>"},{"location":"programming-languages/dev-environment/#4-javascriptnodejs","title":"4. JavaScript/Node.js","text":"<p>Node.js - JavaScript runtime</p> <ul> <li>Download: https://nodejs.org/ (LTS version)</li> </ul> <p>npm - Comes with Node.js</p> <p>nvm (Node Version Manager) - Manage multiple Node versions - Install: https://github.com/nvm-sh/nvm</p> <pre><code># Verify installations:\nnode --version\nnpm --version\nnvm --version\n\n# Using nvm:\nnvm install 18        # Install Node 18\nnvm use 18           # Use Node 18\nnvm list             # List installed versions\n</code></pre>"},{"location":"programming-languages/dev-environment/#5-version-control","title":"5. Version Control","text":"<p>Git - Already installed on Mac, or:</p> <ul> <li>Download: https://git-scm.com/downloads</li> </ul> <pre><code>git --version\n\n# Configure Git:\ngit config --global user.name \"Your Name\"\ngit config --global user.email \"your.email@example.com\"\n</code></pre> <p>Oh My Zsh (Optional but recommended)</p> <ul> <li>Enhances terminal experience</li> <li>Install: https://ohmyz.sh/</li> </ul> <pre><code># Install Oh My Zsh:\nsh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\n</code></pre>"},{"location":"programming-languages/dev-environment/#quick-setup-commands","title":"\ud83d\udd27 Quick Setup Commands","text":"<p>Run these commands to verify everything is installed:</p> <pre><code># Check all installations at once:\necho \"=== Development Environment Check ===\"\necho \"PHP: $(php --version | head -n 1)\"\necho \"Composer: $(composer --version)\"\necho \"MySQL: $(mysql --version)\"\necho \"Node: $(node --version)\"\necho \"npm: $(npm --version)\"\necho \"Git: $(git --version)\"\necho \"=== Setup Complete! ===\"\n</code></pre>"},{"location":"programming-languages/dev-environment/#installation-order","title":"\ud83d\udce6 Installation Order","text":"<p>Follow this order for smoothest setup:</p> <ol> <li>\u2705 VS Code - Install first</li> <li>\u2705 Laravel Herd - PHP environment</li> <li>\u2705 Composer - PHP packages</li> <li>\u2705 Node.js - JavaScript runtime</li> <li>\u2705 nvm - Node version manager</li> <li>\u2705 Database tool - Choose your preferred GUI</li> <li>\u2705 Oh My Zsh - Terminal enhancement (optional)</li> <li>\u2705 Git config - Set up your identity</li> </ol>"},{"location":"programming-languages/dev-environment/#next-steps","title":"\ud83c\udf93 Next Steps","text":"<p>After setup is complete:</p> <ol> <li>See debuging.md for debugging configuration</li> <li>Start learning HTML &amp; CSS</li> <li>Then move to JavaScript</li> <li>Finally learn PHP &amp; MySQL</li> </ol>"},{"location":"programming-languages/dev-environment/#troubleshooting","title":"Troubleshooting","text":""},{"location":"programming-languages/dev-environment/#common-issues","title":"Common Issues","text":"<p>PHP not found after Herd installation: <pre><code># Add Herd to PATH (already done by installer usually)\nexport PATH=\"$HOME/.config/herd/bin:$PATH\"\n</code></pre></p> <p>MySQL connection issues:</p> <ul> <li>Check if MySQL service is running</li> <li>Verify credentials (default: root / no password)</li> <li>Check port (default: 3306)</li> </ul> <p>Node/npm permission errors:</p> <ul> <li>Use nvm instead of system Node.js</li> <li>Never use <code>sudo</code> with npm</li> </ul>"},{"location":"programming-languages/dev-environment/#getting-help","title":"Getting Help","text":"<ul> <li>Check official documentation</li> <li>Ask in team Slack channel</li> <li>Contact your mentor</li> <li>Search Stack Overflow</li> </ul> <p>Setup Time: 1-2 hours Next: HTML &amp; CSS</p>"},{"location":"programming-languages/html-css/","title":"HTML &amp; CSS","text":"<p>Learn the fundamentals of web structure and styling.</p>"},{"location":"programming-languages/html-css/#quick-start","title":"Quick Start","text":"<p>Beginner? Start here:</p> <ul> <li>W3Schools HTML &amp; CSS - Interactive tutorials</li> <li>HTML &amp; CSS Crash Course (Video) - 1-hour quick start</li> <li>Laracasts: HTML &amp; CSS Workshop - Hands-on workshop</li> <li>Laracasts: Modern CSS - For backend devs</li> </ul>"},{"location":"programming-languages/html-css/#core-learning-resources","title":"Core Learning Resources","text":""},{"location":"programming-languages/html-css/#html-resources","title":"HTML Resources","text":"<ul> <li>MDN HTML Tutorial - Complete HTML5 guide</li> <li>HTML Cheat Sheet - Quick reference</li> </ul>"},{"location":"programming-languages/html-css/#css-resources","title":"CSS Resources","text":"<ul> <li>MDN CSS Tutorial - Complete CSS3 guide</li> <li>CSS Cheat Sheet - Quick reference</li> <li>Learn CSS Layout - Layout fundamentals</li> </ul>"},{"location":"programming-languages/html-css/#modern-css-layouts","title":"Modern CSS Layouts","text":"<ul> <li>Flexbox: Flexbox Froggy (Game) + Visual Guide</li> <li>Grid: CSS Grid Garden (Game)</li> </ul>"},{"location":"programming-languages/html-css/#best-practices","title":"Best Practices","text":"<ul> <li>Code Guide - HTML/CSS standards</li> <li>BEM Methodology - CSS naming convention</li> <li>BEM Examples - Practical examples</li> <li>SASS - CSS preprocessor</li> </ul>"},{"location":"programming-languages/html-css/#html-fundamentals","title":"HTML Fundamentals","text":""},{"location":"programming-languages/html-css/#semantic-html-tags-reference","title":"Semantic HTML Tags Reference","text":"<p>A quick reference for common semantic tags and their purposes:</p> Tag Description Typical Content <code>&lt;header&gt;</code> Introductory content or a heading for a section or page Site title, logo, top nav, intro text <code>&lt;nav&gt;</code> Navigation links Menus, breadcrumbs, table of contents <code>&lt;main&gt;</code> Main content unique to the page Articles, products, core features <code>&lt;section&gt;</code> Thematic grouping of related content Feature blocks, chapters, FAQ groups <code>&lt;article&gt;</code> Self-contained content that can be reused or syndicated Blog post, news article, comment, product card <code>&lt;aside&gt;</code> Content indirectly related to the main content Sidebar, callout box, newsletter signup, ads <code>&lt;footer&gt;</code> Footer for a section or page Copyright, contact info, links <code>&lt;figure&gt;</code> Encapsulates media content Image, chart, diagram <code>&lt;figcaption&gt;</code> Caption for a <code>&lt;figure&gt;</code> Describes the image or media <code>&lt;address&gt;</code> Contact information Author address, company email, physical location <code>&lt;time&gt;</code> Machine-readable date/time Publication date, event start time <code>&lt;mark&gt;</code> Highlighted or relevant text Search result highlight, annotation <code>&lt;summary&gt;</code> Title for <code>&lt;details&gt;</code> element Clickable toggle heading <code>&lt;details&gt;</code> Expandable/collapsible content block Hidden explanations, advanced options"},{"location":"programming-languages/html-css/#semantic-page-layout-example","title":"Semantic Page Layout Example","text":"<pre><code>&lt;body&gt;\n  &lt;header&gt;\n    &lt;h1&gt;Site Title&lt;/h1&gt;\n    &lt;nav&gt;\n      &lt;a href=\"/\"&gt;Home&lt;/a&gt;\n      &lt;a href=\"/about\"&gt;About&lt;/a&gt;\n    &lt;/nav&gt;\n  &lt;/header&gt;\n\n  &lt;main&gt;\n    &lt;article&gt;\n      &lt;h2&gt;Blog Post Title&lt;/h2&gt;\n      &lt;p&gt;Content of the article...&lt;/p&gt;\n    &lt;/article&gt;\n\n    &lt;section&gt;\n      &lt;h3&gt;Related Posts&lt;/h3&gt;\n      &lt;!-- More articles or links --&gt;\n    &lt;/section&gt;\n  &lt;/main&gt;\n\n  &lt;aside&gt;\n    &lt;h4&gt;Subscribe&lt;/h4&gt;\n    &lt;p&gt;Signup form here&lt;/p&gt;\n  &lt;/aside&gt;\n\n  &lt;footer&gt;\n    &lt;p&gt;&amp;copy; 2025 YourSite.com&lt;/p&gt;\n  &lt;/footer&gt;\n&lt;/body&gt;\n</code></pre>"},{"location":"programming-languages/html-css/#best-practices-for-semantic-html","title":"Best Practices for Semantic HTML","text":"<ul> <li>Only one <code>&lt;main&gt;</code> per page</li> <li>Use <code>&lt;section&gt;</code> with headings (<code>&lt;h2&gt;</code>, <code>&lt;h3&gt;</code>, etc.)</li> <li>Use <code>&lt;article&gt;</code> when content is standalone</li> <li>Screen readers benefit from this structure for navigation</li> <li>Helps with SEO by defining hierarchy and relevance</li> </ul>"},{"location":"programming-languages/html-css/#html-elements-with-required-children","title":"HTML Elements with Required Children","text":"Parent Element Required/Expected Children Notes <code>&lt;ul&gt;</code> <code>&lt;li&gt;</code> Unordered list must contain only <code>&lt;li&gt;</code> items. <code>&lt;ol&gt;</code> <code>&lt;li&gt;</code> Ordered list must contain only <code>&lt;li&gt;</code> items. <code>&lt;dl&gt;</code> <code>&lt;dt&gt;</code>, <code>&lt;dd&gt;</code> Definition list uses term (<code>&lt;dt&gt;</code>) and description (<code>&lt;dd&gt;</code>) pairs. <code>&lt;select&gt;</code> <code>&lt;option&gt;</code>, <code>&lt;optgroup&gt;</code> Only <code>&lt;option&gt;</code> and <code>&lt;optgroup&gt;</code> are allowed. <code>&lt;optgroup&gt;</code> <code>&lt;option&gt;</code> Groups of options. No other children allowed. <code>&lt;table&gt;</code> <code>&lt;caption&gt;</code>, <code>&lt;colgroup&gt;</code>, <code>&lt;thead&gt;</code>, <code>&lt;tbody&gt;</code>, <code>&lt;tfoot&gt;</code>, <code>&lt;tr&gt;</code> Must contain at least one row (<code>&lt;tr&gt;</code>), directly or through sectioning. <code>&lt;tr&gt;</code> <code>&lt;td&gt;</code>, <code>&lt;th&gt;</code> Rows must contain cells (data or header). <code>&lt;thead&gt;</code>, <code>&lt;tbody&gt;</code>, <code>&lt;tfoot&gt;</code> <code>&lt;tr&gt;</code> Sectioning elements in tables \u2014 must wrap rows. <code>&lt;colgroup&gt;</code> <code>&lt;col&gt;</code> Defines column groups in tables. <code>&lt;audio&gt;</code>, <code>&lt;video&gt;</code> <code>&lt;source&gt;</code>, <code>&lt;track&gt;</code> (optionally) Arbitrary children will be ignored. <code>&lt;figure&gt;</code> Any element, usually <code>&lt;img&gt;</code> and <code>&lt;figcaption&gt;</code> Optional caption for visual media. <code>&lt;map&gt;</code> <code>&lt;area&gt;</code> Used with image maps. <code>&lt;object&gt;</code> <code>&lt;param&gt;</code> <code>&lt;param&gt;</code> configures embedded content. <code>&lt;fieldset&gt;</code> <code>&lt;legend&gt;</code> (optional), then form controls <code>&lt;legend&gt;</code> must come first if present. <code>&lt;details&gt;</code> <code>&lt;summary&gt;</code> (required), then content <code>&lt;summary&gt;</code> must be the first child. <code>&lt;menu&gt;</code> <code>&lt;li&gt;</code> (in typical usage) Like <code>&lt;ul&gt;</code>, but for commands or context menus. <p>Example of incorrect HTML:</p> <pre><code>&lt;ul&gt;\n  &lt;div&gt;This is invalid&lt;/div&gt; &lt;!-- Not allowed inside &lt;ul&gt; --&gt;\n&lt;/ul&gt;\n</code></pre>"},{"location":"programming-languages/html-css/#css-fundamentals","title":"CSS Fundamentals","text":""},{"location":"programming-languages/html-css/#pseudo-classes-vs-pseudo-elements","title":"Pseudo-Classes vs Pseudo-Elements","text":"<p>Understanding the difference between pseudo-classes and pseudo-elements is essential for advanced CSS styling.</p> <p>Comparison Table:</p> Feature Pseudo-Class Pseudo-Element Syntax <code>:</code> (single colon) <code>::</code> (double colon) Purpose Targets an element based on its state or context Targets a specific part of an element Examples <code>:hover</code>, <code>:focus</code>, <code>:nth-child</code> <code>::before</code>, <code>::after</code>, <code>::first-line</code> Manipulates Element's behavior or state Element's content or sub-part Use Case Styling on interaction or position Inserting content or decorations"},{"location":"programming-languages/html-css/#pseudo-classes-examples","title":"Pseudo-Classes Examples","text":"<p>Pseudo-classes change styles based on dynamic states:</p> <pre><code>/* User hovers over a button */\nbutton:hover {\n  background-color: blue;\n  color: white;\n}\n\n/* Input field is focused */\ninput:focus {\n  border-color: green;\n  outline: none;\n}\n\n/* Style first child in a list */\nli:first-child {\n  font-weight: bold;\n}\n\n/* Style every even row in a table */\ntr:nth-child(even) {\n  background-color: #f9f9f9;\n}\n</code></pre>"},{"location":"programming-languages/html-css/#pseudo-elements-examples","title":"Pseudo-Elements Examples","text":"<p>Pseudo-elements let you style parts of an element or insert generated content:</p> <pre><code>/* Add a bullet before each list item */\nli::before {\n  content: \"\u2022 \";\n  color: red;\n}\n\n/* Add a note after a paragraph */\np.note::after {\n  content: \" [Note]\";\n  font-style: italic;\n}\n\n/* Style only the first line of text */\np::first-line {\n  font-weight: bold;\n}\n\n/* Make the first letter big */\np::first-letter {\n  font-size: 200%;\n}\n</code></pre> <p>Combining pseudo-classes and pseudo-elements:</p> <pre><code>a:hover::after {\n  content: \" \u2192\";\n}\n</code></pre>"},{"location":"programming-languages/html-css/#quick-reference","title":"Quick Reference","text":"Selector Type What it Does <code>:hover</code> Pseudo-class When user hovers over an element <code>:focus</code> Pseudo-class When element (like input) is focused <code>:active</code> Pseudo-class When element is being clicked <code>:nth-child(n)</code> Pseudo-class Selects the nth child of parent <code>:checked</code> Pseudo-class For checked input elements <code>::before</code> Pseudo-element Inserts content before an element <code>::after</code> Pseudo-element Inserts content after an element <code>::first-letter</code> Pseudo-element Styles the first letter of text <code>::first-line</code> Pseudo-element Styles the first line of text <code>::marker</code> Pseudo-element Styles bullets/numbers in lists <code>::selection</code> Pseudo-element Styles text when selected (highlighted) <p>Important Notes:</p> <ul> <li><code>::</code> (double colon) is the modern standard for pseudo-elements (CSS3+), but older versions may use <code>:</code></li> <li>Some pseudo-elements (<code>::before</code>, <code>::after</code>) require <code>content: \"\"</code> to render</li> </ul>"},{"location":"programming-languages/html-css/#practice-exercises","title":"Practice Exercises","text":""},{"location":"programming-languages/html-css/#responsive-layout-challenge","title":"Responsive Layout Challenge","text":"<p>Create a responsive 3-column layout that stacks vertically on mobile:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n   &lt;title&gt;Responsive Layout&lt;/title&gt;\n   &lt;style&gt;\n      .container{ \n         display: flex;\n         flex-wrap: wrap; /* Add this for mobile stacking */\n      }\n\n      .column{\n         flex: 1;\n         min-width: 250px; /* Add this for mobile stacking */\n         padding: 10px;\n         background-color: #d3d3d3;\n         margin: 5px;\n      }\n   &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n   &lt;div class=\"container\"&gt;\n      &lt;div class=\"column\"&gt;Column 1&lt;/div&gt;\n      &lt;div class=\"column\"&gt;Column 2&lt;/div&gt;\n      &lt;div class=\"column\"&gt;Column 3&lt;/div&gt;\n   &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"programming-languages/html-css/#additional-topics-to-explore","title":"Additional Topics to Explore","text":"<ul> <li>Semantic tags: <code>&lt;header&gt;</code>, <code>&lt;nav&gt;</code>, <code>&lt;article&gt;</code>, <code>&lt;section&gt;</code></li> <li>Data attributes: HTML attributes for storing custom data (e.g., <code>data-user-id=\"123\"</code>)</li> <li>CSS position values: static, relative, absolute, fixed, sticky</li> <li>Responsive design: Media queries, mobile-first approach</li> <li>CSS preprocessors: SASS, LESS</li> </ul>"},{"location":"programming-languages/html-css/#test-your-knowledge","title":"Test Your Knowledge","text":"<p>Take the HTML &amp; CSS Quiz</p> <p>Goal: Score 70% or higher to demonstrate proficiency</p>"},{"location":"programming-languages/javascript/","title":"JavaScript","text":"<p>Master modern JavaScript for interactive web applications.</p>"},{"location":"programming-languages/javascript/#quick-start","title":"Quick Start","text":"<p>New to JavaScript? Start here:</p> <ul> <li>Laracasts: JavaScript - The First Steps - Video series</li> <li>JavaScript Notes &amp; Reference - Comprehensive guide</li> </ul>"},{"location":"programming-languages/javascript/#core-learning","title":"Core Learning","text":""},{"location":"programming-languages/javascript/#fundamentals","title":"Fundamentals","text":"<ul> <li>ES6 Tutorial - Modern JavaScript features</li> <li>ESNext - Latest JavaScript additions</li> <li>ECMAScript History - Version evolution</li> </ul>"},{"location":"programming-languages/javascript/#best-practices","title":"Best Practices","text":"<ul> <li>Clean Code JavaScript - Write maintainable code</li> </ul>"},{"location":"programming-languages/javascript/#required-tools-setup","title":"Required Tools Setup","text":"<p>Before coding, install these tools:</p> <ul> <li>Node.js - JavaScript runtime (Download)</li> <li>npm - Package manager (comes with Node.js)</li> <li>nvm - Node Version Manager (Install Guide)</li> </ul> <pre><code># Check installations\nnode --version\nnpm --version\nnvm --version\n</code></pre>"},{"location":"programming-languages/javascript/#practice-problems","title":"Practice Problems","text":""},{"location":"programming-languages/javascript/#problem-1-fix-the-array-sum-function","title":"Problem 1: Fix the Array Sum Function \ud83d\udc1b","text":"<p>Bug: This code has an off-by-one error. Find and fix it!</p> <pre><code>function sumArray(arr) {\n  let sum = 0;\n  for (let i = 0; i &lt;= arr.length; i++) {  // \u26a0\ufe0f Bug here!\n    sum += arr[i];\n  }\n  return sum;\n}\n\nconsole.log(sumArray([1, 2, 3, 4])); // Expected: 10\n</code></pre> \ud83d\udca1 Hint Array indices go from 0 to length-1. What happens when i equals arr.length?"},{"location":"programming-languages/javascript/#problem-2-javascript-type-coercion","title":"Problem 2: JavaScript Type Coercion \ud83d\udd04","text":"<p>Predict the output:</p> <pre><code>let a = 3;\nlet b = \"3\";\n\nconsole.log(a + b);  // ?\nconsole.log(b + a);  // ?\nconsole.log(b * a);  // ?\nconsole.log(a * b);  // ?\nconsole.log(a / b);  // ?\nconsole.log(b / a);  // ?\nconsole.log(a - b);  // ?\nconsole.log(b - a);  // ?\n</code></pre> <p>Question: Why do <code>+</code> and <code>-</code> operators behave differently?</p>"},{"location":"programming-languages/javascript/#deep-dive-topics","title":"\ud83e\udd14 Deep Dive Topics","text":"<p>Master these JavaScript concepts:</p> <ul> <li>Closures - Functions that remember their scope</li> <li>Event Loop - How JavaScript handles async operations</li> <li>null vs undefined - Type differences and use cases</li> <li>Hoisting - Variable and function declarations</li> <li>Promises &amp; Async/Await - Modern asynchronous programming</li> </ul>"},{"location":"programming-languages/javascript/#test-your-knowledge","title":"Test Your Knowledge","text":"<p>Take the JavaScript Quiz \u2192</p> <p>Goal: Score 70% or higher</p>"},{"location":"programming-languages/php-mysql/","title":"PHP &amp; MySQL","text":"<p>Learn server-side programming and database management.</p>"},{"location":"programming-languages/php-mysql/#quick-start","title":"Quick Start","text":"<p>New to PHP? Start here:</p> <ul> <li>Laracasts: PHP for Beginners (2023) - Complete video series</li> <li>Laracasts: OOP Principles in PHP (2024) - Object-oriented programming</li> <li>PHP 8 Tutorial - Interactive tutorials</li> </ul> <p>Database:</p> <ul> <li>Laracasts: MySQL Database Design - Video series</li> <li>MySQL Tutorial - PHP + MySQL integration</li> </ul>"},{"location":"programming-languages/php-mysql/#required-tools-setup","title":"Required Tools Setup","text":"<p>Install these before starting: - Composer - PHP dependency manager (Download) - Laravel Herd - Local PHP development environment (Download) - MySQL or MariaDB - Database server</p>"},{"location":"programming-languages/php-mysql/#database-tools-choose-one","title":"Database Tools (choose one):","text":"<ul> <li>PHPMyAdmin - Web-based database management</li> <li>TablePlus - Modern database GUI (Mac/Windows/Linux)</li> <li>MySQL Workbench - Official MySQL tool</li> <li>Sequel Ace - Mac-only database management</li> </ul> <pre><code># Check installations\nphp --version\ncomposer --version\nmysql --version\n</code></pre>"},{"location":"programming-languages/php-mysql/#core-learning","title":"Core Learning","text":""},{"location":"programming-languages/php-mysql/#php-fundamentals","title":"PHP Fundamentals","text":"<ul> <li>PHP Language Reference - Official documentation</li> <li>PHP Tutorial (TutorialsPoint) - Comprehensive guide</li> <li>PHP Namespaces - Code organization</li> <li>PHP Cheatsheet - Quick reference</li> </ul>"},{"location":"programming-languages/php-mysql/#best-practices","title":"Best Practices","text":"<ul> <li>Clean Code PHP - Write maintainable code</li> </ul>"},{"location":"programming-languages/php-mysql/#mysql","title":"MySQL","text":"<ul> <li>MySQL Tutorial (TutorialsPoint) - Complete database guide</li> </ul>"},{"location":"programming-languages/php-mysql/#practice-problems","title":"Practice Problems","text":""},{"location":"programming-languages/php-mysql/#problem-1-debug-the-log-function","title":"Problem 1: Debug the Log Function \ud83d\udc1b","text":"<p>Bug: This code doesn't write to the file. Find the issue!</p> <pre><code>&lt;?php\nfunction writeLog($message) {\n    $file = fopen('log.txt', 'r');  // \u26a0\ufe0f Bug here!\n    fwrite($file, $message . PHP_EOL);\n    fclose($file);\n}\n\nwriteLog('This is a test log.');\n?&gt;\n</code></pre> \ud83d\udca1 Hint Check the file mode in fopen(). What does 'r' do vs what you need?"},{"location":"programming-languages/php-mysql/#problem-2-fix-email-validation","title":"Problem 2: Fix Email Validation \ud83d\udd0d","text":"<p>Bug: Empty emails pass validation. We need to check if the key exists, but allow empty values.</p> <pre><code>&lt;?php\n$data = array(\n    'user' =&gt; array(\n        'name'  =&gt; 'Alice',\n        'email' =&gt; '',  // Empty but key exists\n    ),\n);\n\n// This should pass since key exists\nif (!empty($data['user']['email'])) {  // \u26a0\ufe0f Bug here!\n    echo 'Email key is provided.' . \"\\n\";\n} else {\n    echo 'Email key is missing.' . \"\\n\";\n}\n?&gt;\n</code></pre> \ud83d\udca1 Hint Use isset() to check if a key exists, regardless of its value."},{"location":"programming-languages/php-mysql/#deep-dive-topics","title":"\ud83e\udd14 Deep Dive Topics","text":"<p>Master these PHP concepts:</p> <ul> <li>Type Juggling - How PHP handles type conversions</li> <li>Session Management - <code>session_start()</code>, <code>$_SESSION</code>, <code>session_destroy()</code></li> <li>PDO vs mysqli - Database abstraction vs MySQL-specific</li> <li>Regular Expressions - <code>preg_match()</code>, <code>preg_replace()</code>, <code>preg_split()</code></li> <li>Error Handling - <code>try/catch</code>, <code>throw</code>, custom exceptions</li> <li>Autoloading - PSR-4, Composer autoloader</li> </ul>"},{"location":"programming-languages/php-mysql/#test-your-knowledge","title":"Test Your Knowledge","text":"<p>Take the PHP &amp; MySQL Quiz \u2192</p> <p>Goal: Score 70% or higher</p>"},{"location":"programming-languages/wordpress1/","title":"WordPress Development","text":"<p>Master WordPress development from basics to advanced plugin development.</p>"},{"location":"programming-languages/wordpress1/#prerequisites","title":"Prerequisites","text":"<p>Before starting WordPress, complete:</p> <ul> <li>\u2705 HTML &amp; CSS</li> <li>\u2705 JavaScript</li> <li>\u2705 PHP &amp; MySQL</li> <li>\u2705 Development Environment</li> </ul>"},{"location":"programming-languages/wordpress1/#learning-path","title":"Learning Path","text":""},{"location":"programming-languages/wordpress1/#1-wordpress-administration","title":"1. WordPress Administration","text":"<p>Get comfortable with WordPress first:</p> <ul> <li>Install WordPress locally using Laravel Herd</li> <li>Explore the admin dashboard</li> <li>Create pages, posts, and media</li> <li>Install and activate themes</li> <li>Install and activate plugins</li> <li>Manage users and permissions</li> <li>Understand WordPress settings</li> </ul> <p>Resources:</p> <ul> <li>WordPress.org Learn</li> <li>WordPress Codex</li> <li>WP Beginner</li> </ul>"},{"location":"programming-languages/wordpress1/#2-wordpress-plugin-development","title":"2. WordPress Plugin Development","text":"<p>Official Documentation:</p> <ul> <li>WordPress Plugin Handbook \ud83d\udcd6 START HERE</li> <li>Plugin Developer Handbook</li> </ul> <p>Core Concepts:</p>"},{"location":"programming-languages/wordpress1/#hooks-actions-filters","title":"Hooks: Actions &amp; Filters","text":"<p>WordPress hooks are the foundation of plugin development.</p> <p>Actions - Do something at a specific point: <pre><code>// Add an action\nadd_action('wp_footer', 'my_custom_footer');\n\nfunction my_custom_footer() {\n    echo '&lt;p&gt;Custom footer text&lt;/p&gt;';\n}\n</code></pre></p> <p>Filters - Modify data: <pre><code>// Add a filter\nadd_filter('the_content', 'add_signature');\n\nfunction add_signature($content) {\n    return $content . '&lt;p&gt;Thanks for reading!&lt;/p&gt;';\n}\n</code></pre></p> <p>Resources:</p> <ul> <li>Plugin API/Action Reference</li> <li>Plugin API/Filter Reference</li> </ul>"},{"location":"programming-languages/wordpress1/#wp-cli-wordpress-command-line","title":"WP-CLI (WordPress Command Line)","text":"<p>Essential tool for WordPress developers:</p> <ul> <li>WP-CLI Documentation \ud83d\udee0\ufe0f</li> </ul> <pre><code># Install WordPress\nwp core download\nwp core config --dbname=mydb --dbuser=root\nwp core install --url=example.test --title=\"My Site\"\n\n# Plugin management\nwp plugin list\nwp plugin install query-monitor --activate\nwp plugin update --all\n\n# Theme management\nwp theme list\nwp theme activate twentytwentyfour\n\n# Database\nwp db export\nwp db import backup.sql\n\n# Search and replace\nwp search-replace 'old-url.com' 'new-url.com'\n\n# Generate content\nwp post generate --count=10\n</code></pre>"},{"location":"programming-languages/wordpress1/#3-wordpress-theme-development","title":"3. WordPress Theme Development","text":"<p>Official Documentation:</p> <ul> <li>WordPress Theme Handbook \ud83d\udcd6</li> </ul> <p>Key Concepts:</p> <ul> <li>Template hierarchy</li> <li>Template tags</li> <li>The Loop</li> <li>Custom post types</li> <li>Custom taxonomies</li> <li>Theme functions.php</li> <li>Child themes</li> </ul> <p>Resources:</p> <ul> <li>Underscores (_s) Starter Theme</li> <li>Theme Developer Handbook</li> </ul>"},{"location":"programming-languages/wordpress1/#modern-wordpress-development","title":"\ud83c\udfd7\ufe0f Modern WordPress Development","text":""},{"location":"programming-languages/wordpress1/#4-reactjs-for-wordpress","title":"4. ReactJS for WordPress","text":"<p>Modern JavaScript in WordPress:</p> <ul> <li>React Tutorial (Video) - Comprehensive guide</li> <li>React Official Docs</li> </ul> <p>Why React in WordPress? - Gutenberg editor is built with React - Modern block development uses React - Better user interfaces - Component-based architecture</p>"},{"location":"programming-languages/wordpress1/#5-gutenberg-block-development","title":"5. Gutenberg Block Development","text":"<p>Building Custom Blocks:</p> <p>Resources:</p> <ul> <li>Block Editor Handbook</li> <li>Create a Block Tutorial</li> </ul> <p>Quick Start:</p> <pre><code># Install @wordpress/create-block\nnpm install -g @wordpress/create-block\n\n# Create a new block plugin\nnpx @wordpress/create-block my-custom-block\n\n# Start development\ncd my-custom-block\nnpm start\n</code></pre> <p>Basic Block Structure:</p> <pre><code>import { registerBlockType } from '@wordpress/blocks';\nimport { useBlockProps } from '@wordpress/block-editor';\n\nregisterBlockType('myplugin/my-block', {\n    edit: () =&gt; {\n        const blockProps = useBlockProps();\n        return &lt;p {...blockProps}&gt;Hello from the editor!&lt;/p&gt;;\n    },\n    save: () =&gt; {\n        const blockProps = useBlockProps.save();\n        return &lt;p {...blockProps}&gt;Hello from the frontend!&lt;/p&gt;;\n    },\n});\n</code></pre>"},{"location":"programming-languages/wordpress1/#e-commerce-development","title":"\ud83d\uded2 E-Commerce Development","text":""},{"location":"programming-languages/wordpress1/#6-woocommerce","title":"6. WooCommerce","text":"<p>The most popular WordPress e-commerce solution:</p> <p>Resources:</p> <ul> <li>WooCommerce Documentation</li> <li>WooCommerce Developer Docs</li> </ul> <p>Key Topics:</p> <ul> <li>Product types</li> <li>Orders and checkout</li> <li>Payment gateways</li> <li>Shipping methods</li> <li>WooCommerce hooks and filters</li> <li>Custom product types</li> <li>REST API</li> </ul> <p>Common Hooks:</p> <pre><code>// Modify product price\nadd_filter('woocommerce_get_price_html', 'custom_price_html', 10, 2);\n\n// After checkout\nadd_action('woocommerce_thankyou', 'custom_thankyou_page');\n\n// Modify cart\nadd_action('woocommerce_before_calculate_totals', 'modify_cart_items');\n</code></pre>"},{"location":"programming-languages/wordpress1/#7-dokan-plugin-multi-vendor-marketplace","title":"7. Dokan Plugin (Multi-vendor Marketplace)","text":"<p>Build multi-vendor marketplaces:</p> <p>Resources:</p> <ul> <li>Dokan Documentation</li> <li>Dokan GitHub</li> </ul> <p>Key Features:</p> <ul> <li>Vendor dashboard</li> <li>Commission management</li> <li>Vendor products</li> <li>Vendor orders</li> <li>Multi-vendor shipping</li> <li>Custom integrations</li> </ul> <p>Dokan Hooks:</p> <pre><code>// After vendor registration\nadd_action('dokan_new_seller_created', 'custom_vendor_setup');\n\n// Modify vendor dashboard\nadd_filter('dokan_get_dashboard_nav', 'add_custom_vendor_menu');\n</code></pre>"},{"location":"programming-languages/wordpress1/#development-workflow","title":"Development Workflow","text":""},{"location":"programming-languages/wordpress1/#project-structure","title":"Project Structure","text":"<pre><code>wp-content/\n\u251c\u2500\u2500 plugins/\n\u2502   \u2514\u2500\u2500 my-plugin/\n\u2502       \u251c\u2500\u2500 my-plugin.php\n\u2502       \u251c\u2500\u2500 includes/\n\u2502       \u251c\u2500\u2500 admin/\n\u2502       \u251c\u2500\u2500 public/\n\u2502       \u2514\u2500\u2500 assets/\n\u2502           \u251c\u2500\u2500 css/\n\u2502           \u2514\u2500\u2500 js/\n\u2514\u2500\u2500 themes/\n    \u2514\u2500\u2500 my-theme/\n        \u251c\u2500\u2500 style.css\n        \u251c\u2500\u2500 functions.php\n        \u251c\u2500\u2500 index.php\n        \u2514\u2500\u2500 template-parts/\n</code></pre>"},{"location":"programming-languages/wordpress1/#plugin-header","title":"Plugin Header","text":"<pre><code>&lt;?php\n/**\n * Plugin Name: My Awesome Plugin\n * Plugin URI: https://example.com/my-plugin\n * Description: A brief description of the plugin.\n * Version: 1.0.0\n * Author: Your Name\n * Author URI: https://example.com\n * License: GPL-2.0+\n * License URI: http://www.gnu.org/licenses/gpl-2.0.txt\n * Text Domain: my-plugin\n * Domain Path: /languages\n */\n\n// If this file is called directly, abort.\nif (!defined('WPINC')) {\n    die;\n}\n\n// Plugin code starts here...\n</code></pre>"},{"location":"programming-languages/wordpress1/#best-practices","title":"Best Practices","text":"<p>Security:</p> <pre><code>// Sanitize input\n$user_input = sanitize_text_field($_POST['field']);\n\n// Validate and sanitize\n$email = sanitize_email($_POST['email']);\n\n// Escape output\necho esc_html($user_input);\necho esc_url($url);\necho esc_attr($attribute);\n\n// Nonce verification\nwp_verify_nonce($_POST['nonce'], 'action_name');\n</code></pre> <p>Database Queries:</p> <pre><code>global $wpdb;\n\n// Prepared statements (secure)\n$results = $wpdb-&gt;get_results(\n    $wpdb-&gt;prepare(\n        \"SELECT * FROM {$wpdb-&gt;prefix}posts WHERE post_type = %s\",\n        'post'\n    )\n);\n\n// Never use direct queries!\n// BAD: $wpdb-&gt;query(\"SELECT * FROM wp_posts WHERE id = \" . $_GET['id']);\n</code></pre> <p>WordPress Coding Standards:</p> <pre><code>// Use WordPress functions\nwp_enqueue_script('my-script', plugin_dir_url(__FILE__) . 'js/script.js');\nwp_enqueue_style('my-style', plugin_dir_url(__FILE__) . 'css/style.css');\n\n// Use WordPress HTTP API\n$response = wp_remote_get('https://api.example.com/data');\n\n// Use WordPress filesystem\nrequire_once(ABSPATH . 'wp-admin/includes/file.php');\nWP_Filesystem();\nglobal $wp_filesystem;\n$wp_filesystem-&gt;put_contents($file, $content);\n</code></pre>"},{"location":"programming-languages/wordpress1/#essential-wordpress-functions","title":"\ud83d\udd27 Essential WordPress Functions","text":""},{"location":"programming-languages/wordpress1/#common-functions","title":"Common Functions","text":"<pre><code>// Get and set options\nget_option('option_name', 'default');\nupdate_option('option_name', 'value');\ndelete_option('option_name');\n\n// Post functions\nget_post(123);\nwp_insert_post($post_data);\nwp_update_post($post_data);\nwp_delete_post(123);\n\n// User functions\nget_current_user_id();\nwp_get_current_user();\nis_user_logged_in();\n\n// URL functions\nhome_url('/path');\nsite_url('/path');\nadmin_url('admin.php?page=my-plugin');\nplugins_url('assets/js/script.js', __FILE__);\n\n// Localization\n__('Text to translate', 'textdomain');\n_e('Text to echo', 'textdomain');\n</code></pre>"},{"location":"programming-languages/wordpress1/#recommended-wordpress-plugins-for-development","title":"\ud83d\udce6 Recommended WordPress Plugins for Development","text":"<p>Install these from WordPress.org:</p> <ul> <li>Query Monitor - Debugging and profiling</li> <li>User Switching - Switch between user accounts</li> <li>WP Crontrol - Manage WordPress cron jobs</li> <li>WP Console - In-dashboard PHP console</li> <li>WP Mail Logging - Log all emails sent by WordPress</li> </ul>"},{"location":"programming-languages/wordpress1/#learning-projects","title":"\ud83c\udf93 Learning Projects","text":""},{"location":"programming-languages/wordpress1/#beginner-projects","title":"Beginner Projects","text":"<ol> <li>Simple contact form plugin</li> <li>Custom post type plugin</li> <li>Widget plugin</li> <li>Shortcode plugin</li> </ol>"},{"location":"programming-languages/wordpress1/#intermediate-projects","title":"Intermediate Projects","text":"<ol> <li>Custom admin page with settings</li> <li>REST API endpoint plugin</li> <li>Custom Gutenberg block</li> <li>WooCommerce extension</li> </ol>"},{"location":"programming-languages/wordpress1/#advanced-projects","title":"Advanced Projects","text":"<ol> <li>Multi-vendor marketplace feature</li> <li>Custom payment gateway</li> <li>Complex booking system</li> <li>Integration with external APIs</li> </ol>"},{"location":"programming-languages/wordpress1/#certification-courses","title":"Certification &amp; Courses","text":"<p>Free Resources:</p> <ul> <li>WordPress.tv - Video tutorials</li> <li>Learn WordPress - Official learning platform</li> </ul> <p>Paid Courses:</p> <ul> <li>WP Courses</li> <li>Plugin Development Course</li> </ul>"},{"location":"programming-languages/wordpress1/#wordpress-developer-checklist","title":"WordPress Developer Checklist","text":"<ul> <li> Understand WordPress architecture</li> <li> Master hooks (actions &amp; filters)</li> <li> Learn WP-CLI</li> <li> Build custom plugins</li> <li> Develop custom themes</li> <li> Create Gutenberg blocks</li> <li> Understand WooCommerce basics</li> <li> Learn Dokan multi-vendor concepts</li> <li> Follow WordPress coding standards</li> <li> Implement security best practices</li> <li> Use debugging tools effectively</li> </ul>"},{"location":"programming-languages/wordpress1/#additional-resources","title":"Additional Resources","text":"<ul> <li>WordPress Codex</li> <li>WordPress Developer Resources</li> <li>WordPress Stack Exchange</li> <li>WPBeginner</li> <li>Torque Magazine</li> </ul> <p>Next Steps:</p> <ol> <li>Set up WordPress locally with Laravel Herd</li> <li>Explore the admin dashboard</li> <li>Build your first simple plugin</li> <li>Learn WP-CLI commands</li> <li>Study WordPress hooks</li> <li>Create a Gutenberg block</li> </ol> <p>Time to Master: 3-6 months of consistent practice</p> <p>See also:</p> <ul> <li>Development Environment Setup</li> <li>Debugging Configuration</li> <li>PHP &amp; MySQL Guide</li> </ul>"},{"location":"web-fundamentals/web-basics/","title":"Web Fundamentals","text":"<p>Understanding how the web works is essential for every developer. This guide covers the fundamental concepts of web technologies.</p>"},{"location":"web-fundamentals/web-basics/#table-of-contents","title":"Table of Contents","text":"<ol> <li>How the Web Works</li> <li>DNS (Domain Name System)</li> <li>HTTP/HTTPS Protocols</li> <li>Web Servers</li> <li>Browser Rendering</li> <li>Email Systems</li> <li>Web Security</li> </ol>"},{"location":"web-fundamentals/web-basics/#how-the-web-works","title":"How the Web Works","text":""},{"location":"web-fundamentals/web-basics/#client-server-architecture","title":"Client-Server Architecture","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502         \u2502    HTTP Request  \u2502         \u2502\n\u2502 Browser \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500&gt;  \u2502  Server \u2502\n\u2502 (Client)\u2502                  \u2502         \u2502\n\u2502         \u2502 &lt;\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500  \u2502         \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   HTTP Response  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"web-fundamentals/web-basics/#the-request-response-cycle","title":"The Request-Response Cycle","text":"<ol> <li>User enters URL in browser</li> <li>DNS lookup to find IP address</li> <li>TCP connection established</li> <li>Browser sends HTTP request</li> <li>Server processes request</li> <li>Server sends HTTP response</li> <li>Browser renders the page</li> </ol>"},{"location":"web-fundamentals/web-basics/#what-happens-when-you-visit-a-website","title":"What Happens When You Visit a Website?","text":"<pre><code>1. You type: https://example.com\n2. Browser checks cache (DNS cache, browser cache)\n3. DNS query to resolve domain to IP (93.184.216.34)\n4. Browser initiates TCP handshake with server\n5. TLS/SSL handshake (for HTTPS)\n6. Browser sends HTTP GET request\n7. Server processes and sends HTML response\n8. Browser parses HTML\n9. Browser requests additional resources (CSS, JS, images)\n10. Browser renders the page\n</code></pre>"},{"location":"web-fundamentals/web-basics/#dns-domain-name-system","title":"DNS (Domain Name System)","text":""},{"location":"web-fundamentals/web-basics/#what-is-dns","title":"What is DNS?","text":"<p>DNS translates human-readable domain names into IP addresses.</p> <pre><code>example.com \u2192 93.184.216.34\n</code></pre>"},{"location":"web-fundamentals/web-basics/#dns-hierarchy","title":"DNS Hierarchy","text":"<pre><code>                    Root (.)\n                       \u2502\n        \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n        \u2502              \u2502              \u2502\n      .com           .org           .net\n        \u2502              \u2502              \u2502\n    example        wikipedia      github\n        \u2502              \u2502              \u2502\n      www            www            www\n</code></pre>"},{"location":"web-fundamentals/web-basics/#dns-record-types","title":"DNS Record Types","text":""},{"location":"web-fundamentals/web-basics/#a-record-address","title":"A Record (Address)","text":"<p>Maps domain to IPv4 address <pre><code>example.com.    IN    A    93.184.216.34\n</code></pre></p>"},{"location":"web-fundamentals/web-basics/#aaaa-record","title":"AAAA Record","text":"<p>Maps domain to IPv6 address <pre><code>example.com.    IN    AAAA    2606:2800:220:1:248:1893:25c8:1946\n</code></pre></p>"},{"location":"web-fundamentals/web-basics/#cname-record-canonical-name","title":"CNAME Record (Canonical Name)","text":"<p>Creates an alias for another domain <pre><code>www.example.com.    IN    CNAME    example.com.\n</code></pre></p>"},{"location":"web-fundamentals/web-basics/#mx-record-mail-exchange","title":"MX Record (Mail Exchange)","text":"<p>Specifies mail servers <pre><code>example.com.    IN    MX    10 mail.example.com.\n</code></pre></p>"},{"location":"web-fundamentals/web-basics/#txt-record","title":"TXT Record","text":"<p>Stores text information (SPF, DKIM, verification) <pre><code>example.com.    IN    TXT    \"v=spf1 include:_spf.google.com ~all\"\n</code></pre></p>"},{"location":"web-fundamentals/web-basics/#ns-record-name-server","title":"NS Record (Name Server)","text":"<p>Specifies authoritative name servers <pre><code>example.com.    IN    NS    ns1.example.com.\n</code></pre></p>"},{"location":"web-fundamentals/web-basics/#dns-resolution-process","title":"DNS Resolution Process","text":"<pre><code>1. Browser checks local cache\n2. Operating system cache check\n3. Router cache check\n4. ISP DNS server (Recursive resolver)\n5. Root name server\n6. TLD name server (.com)\n7. Authoritative name server\n8. IP address returned\n</code></pre>"},{"location":"web-fundamentals/web-basics/#dns-commands","title":"DNS Commands","text":"<pre><code># Query DNS records\ndig example.com\ndig example.com A\ndig example.com MX\ndig example.com ANY\n\n# Trace DNS resolution\ndig +trace example.com\n\n# Reverse DNS lookup\ndig -x 93.184.216.34\n\n# Using nslookup\nnslookup example.com\nnslookup -type=mx example.com\n\n# Using host\nhost example.com\nhost -t mx example.com\n</code></pre>"},{"location":"web-fundamentals/web-basics/#dns-propagation","title":"DNS Propagation","text":"<p>When you change DNS records, it takes time to propagate (usually 24-48 hours)</p> <ul> <li>TTL (Time To Live) determines cache duration</li> <li>Lower TTL = faster updates, more queries</li> <li>Higher TTL = slower updates, better performance</li> </ul>"},{"location":"web-fundamentals/web-basics/#httphttps-protocols","title":"HTTP/HTTPS Protocols","text":""},{"location":"web-fundamentals/web-basics/#http-hypertext-transfer-protocol","title":"HTTP (HyperText Transfer Protocol)","text":"<p>HTTP is the foundation of data communication on the web.</p>"},{"location":"web-fundamentals/web-basics/#http-methods","title":"HTTP Methods","text":""},{"location":"web-fundamentals/web-basics/#get","title":"GET","text":"<p>Retrieve data from server <pre><code>GET /api/users HTTP/1.1\nHost: example.com\n</code></pre></p> <ul> <li>Safe (doesn't modify data)</li> <li>Idempotent (same result every time)</li> <li>Can be cached</li> <li>Parameters in URL</li> </ul>"},{"location":"web-fundamentals/web-basics/#post","title":"POST","text":"<p>Submit data to server <pre><code>POST /api/users HTTP/1.1\nHost: example.com\nContent-Type: application/json\n\n{\"name\": \"John\", \"email\": \"john@example.com\"}\n</code></pre></p> <ul> <li>Not safe (modifies data)</li> <li>Not idempotent</li> <li>Not cached by default</li> <li>Data in request body</li> </ul>"},{"location":"web-fundamentals/web-basics/#put","title":"PUT","text":"<p>Update/replace resource <pre><code>PUT /api/users/123 HTTP/1.1\nHost: example.com\nContent-Type: application/json\n\n{\"name\": \"John Updated\", \"email\": \"john@example.com\"}\n</code></pre></p> <ul> <li>Not safe</li> <li>Idempotent</li> <li>Replaces entire resource</li> </ul>"},{"location":"web-fundamentals/web-basics/#patch","title":"PATCH","text":"<p>Partial update of resource <pre><code>PATCH /api/users/123 HTTP/1.1\nHost: example.com\nContent-Type: application/json\n\n{\"name\": \"John Updated\"}\n</code></pre></p> <ul> <li>Not safe</li> <li>Not always idempotent</li> <li>Updates specific fields</li> </ul>"},{"location":"web-fundamentals/web-basics/#delete","title":"DELETE","text":"<p>Remove resource <pre><code>DELETE /api/users/123 HTTP/1.1\nHost: example.com\n</code></pre> - Not safe - Idempotent</p>"},{"location":"web-fundamentals/web-basics/#head","title":"HEAD","text":"<p>Same as GET but without response body <pre><code>HEAD /api/users HTTP/1.1\nHost: example.com\n</code></pre></p>"},{"location":"web-fundamentals/web-basics/#options","title":"OPTIONS","text":"<p>Get supported HTTP methods <pre><code>OPTIONS /api/users HTTP/1.1\nHost: example.com\n</code></pre></p>"},{"location":"web-fundamentals/web-basics/#http-status-codes","title":"HTTP Status Codes","text":""},{"location":"web-fundamentals/web-basics/#1xx-informational","title":"1xx - Informational","text":"<ul> <li>100 Continue: Continue with request</li> <li>101 Switching Protocols: Switching to WebSocket</li> </ul>"},{"location":"web-fundamentals/web-basics/#2xx-success","title":"2xx - Success","text":"<ul> <li>200 OK: Request succeeded</li> <li>201 Created: Resource created</li> <li>202 Accepted: Request accepted for processing</li> <li>204 No Content: Success but no content to return</li> </ul>"},{"location":"web-fundamentals/web-basics/#3xx-redirection","title":"3xx - Redirection","text":"<ul> <li>301 Moved Permanently: Permanent redirect</li> <li>302 Found: Temporary redirect</li> <li>304 Not Modified: Use cached version</li> <li>307 Temporary Redirect: Same as 302 but method unchanged</li> </ul>"},{"location":"web-fundamentals/web-basics/#4xx-client-errors","title":"4xx - Client Errors","text":"<ul> <li>400 Bad Request: Invalid syntax</li> <li>401 Unauthorized: Authentication required</li> <li>403 Forbidden: Access denied</li> <li>404 Not Found: Resource not found</li> <li>405 Method Not Allowed: HTTP method not supported</li> <li>409 Conflict: Request conflicts with server state</li> <li>422 Unprocessable Entity: Validation errors</li> <li>429 Too Many Requests: Rate limit exceeded</li> </ul>"},{"location":"web-fundamentals/web-basics/#5xx-server-errors","title":"5xx - Server Errors","text":"<ul> <li>500 Internal Server Error: Generic server error</li> <li>501 Not Implemented: Feature not supported</li> <li>502 Bad Gateway: Invalid response from upstream</li> <li>503 Service Unavailable: Server overloaded/down</li> <li>504 Gateway Timeout: Upstream timeout</li> </ul>"},{"location":"web-fundamentals/web-basics/#http-headers","title":"HTTP Headers","text":""},{"location":"web-fundamentals/web-basics/#request-headers","title":"Request Headers","text":"<pre><code>GET /api/users HTTP/1.1\nHost: example.com\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7)\nAccept: application/json\nAccept-Language: en-US,en;q=0.9\nAccept-Encoding: gzip, deflate, br\nAuthorization: Bearer eyJhbGciOiJIUzI1NiIs...\nCookie: session_id=abc123\nContent-Type: application/json\nReferer: https://example.com/page\n</code></pre>"},{"location":"web-fundamentals/web-basics/#response-headers","title":"Response Headers","text":"<pre><code>HTTP/1.1 200 OK\nDate: Thu, 02 Oct 2025 12:00:00 GMT\nServer: nginx/1.18.0\nContent-Type: application/json; charset=utf-8\nContent-Length: 1234\nCache-Control: max-age=3600\nETag: \"33a64df551425fcc55e4d42a148795d9f25f89d4\"\nSet-Cookie: session_id=xyz789; HttpOnly; Secure\nAccess-Control-Allow-Origin: *\nX-Frame-Options: DENY\n</code></pre>"},{"location":"web-fundamentals/web-basics/#https-http-secure","title":"HTTPS (HTTP Secure)","text":"<p>HTTPS = HTTP + TLS/SSL encryption</p>"},{"location":"web-fundamentals/web-basics/#why-https","title":"Why HTTPS?","text":"<ul> <li>Encryption: Data encrypted in transit</li> <li>Authentication: Verify server identity</li> <li>Integrity: Detect tampering</li> <li>SEO: Google ranking factor</li> <li>Browser trust: No \"Not Secure\" warning</li> </ul>"},{"location":"web-fundamentals/web-basics/#tls-handshake","title":"TLS Handshake","text":"<pre><code>1. Client Hello (supported protocols, cipher suites)\n2. Server Hello (chosen protocol, cipher suite)\n3. Server Certificate (SSL certificate)\n4. Client verifies certificate\n5. Key exchange (generate session keys)\n6. Secure connection established\n</code></pre>"},{"location":"web-fundamentals/web-basics/#ssl-certificates","title":"SSL Certificates","text":"<ul> <li>Domain Validation (DV): Basic validation</li> <li>Organization Validation (OV): Company verified</li> <li>Extended Validation (EV): Highest validation</li> <li>Wildcard: Covers all subdomains (*.example.com)</li> <li>Multi-Domain: Multiple domains in one certificate</li> </ul>"},{"location":"web-fundamentals/web-basics/#web-servers","title":"Web Servers","text":""},{"location":"web-fundamentals/web-basics/#what-is-a-web-server","title":"What is a Web Server?","text":"<p>Software that serves web content over HTTP/HTTPS.</p>"},{"location":"web-fundamentals/web-basics/#popular-web-servers","title":"Popular Web Servers","text":""},{"location":"web-fundamentals/web-basics/#apache-http-server","title":"Apache HTTP Server","text":"<ul> <li>Most widely used</li> <li>Module-based architecture</li> <li>.htaccess support</li> <li>Flexible configuration</li> <li>Process-driven model</li> </ul> <p>Configuration Example: <pre><code>&lt;VirtualHost *:80&gt;\n    ServerName example.com\n    DocumentRoot /var/www/html\n\n    &lt;Directory /var/www/html&gt;\n        Options Indexes FollowSymLinks\n        AllowOverride All\n        Require all granted\n    &lt;/Directory&gt;\n\n    ErrorLog ${APACHE_LOG_DIR}/error.log\n    CustomLog ${APACHE_LOG_DIR}/access.log combined\n&lt;/VirtualHost&gt;\n</code></pre></p>"},{"location":"web-fundamentals/web-basics/#nginx","title":"Nginx","text":"<ul> <li>High performance</li> <li>Event-driven architecture</li> <li>Reverse proxy</li> <li>Load balancing</li> <li>Lower memory usage</li> </ul> <p>Configuration Example: <pre><code>server {\n    listen 80;\n    server_name example.com;\n    root /var/www/html;\n    index index.php index.html;\n\n    location / {\n        try_files $uri $uri/ /index.php?$args;\n    }\n\n    location ~ \\.php$ {\n        fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;\n        fastcgi_index index.php;\n        include fastcgi_params;\n    }\n\n    access_log /var/log/nginx/access.log;\n    error_log /var/log/nginx/error.log;\n}\n</code></pre></p>"},{"location":"web-fundamentals/web-basics/#virtual-hosts","title":"Virtual Hosts","text":"<p>Run multiple websites on single server</p> <ul> <li>Name-based: Multiple domains on same IP</li> <li>IP-based: Different IP for each domain</li> </ul>"},{"location":"web-fundamentals/web-basics/#reverse-proxy","title":"Reverse Proxy","text":"<p>Server sits between clients and backend servers</p> <ul> <li>Load balancing</li> <li>Caching</li> <li>SSL termination</li> <li>Security</li> </ul> <pre><code>Client \u2192 Nginx (Reverse Proxy) \u2192 Backend Servers\n</code></pre>"},{"location":"web-fundamentals/web-basics/#htaccess-apache","title":".htaccess (Apache)","text":"<p>Configuration file for directory-level settings</p> <pre><code># Redirect to HTTPS\nRewriteEngine On\nRewriteCond %{HTTPS} off\nRewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]\n\n# Enable gzip compression\n&lt;IfModule mod_deflate.c&gt;\n    AddOutputFilterByType DEFLATE text/html text/css text/javascript\n&lt;/IfModule&gt;\n\n# Caching\n&lt;IfModule mod_expires.c&gt;\n    ExpiresActive On\n    ExpiresByType image/jpg \"access plus 1 year\"\n    ExpiresByType text/css \"access plus 1 month\"\n&lt;/IfModule&gt;\n\n# Block access to files\n&lt;Files .env&gt;\n    Order allow,deny\n    Deny from all\n&lt;/Files&gt;\n</code></pre>"},{"location":"web-fundamentals/web-basics/#browser-rendering","title":"Browser Rendering","text":""},{"location":"web-fundamentals/web-basics/#rendering-engines","title":"Rendering Engines","text":"<ul> <li>Blink: Chrome, Edge, Opera, Brave</li> <li>WebKit: Safari</li> <li>Gecko: Firefox</li> </ul>"},{"location":"web-fundamentals/web-basics/#critical-rendering-path","title":"Critical Rendering Path","text":"<pre><code>1. Parse HTML \u2192 DOM Tree\n2. Parse CSS \u2192 CSSOM Tree\n3. Combine DOM + CSSOM \u2192 Render Tree\n4. Layout (calculate positions)\n5. Paint (draw pixels)\n6. Composite (layer composition)\n</code></pre>"},{"location":"web-fundamentals/web-basics/#dom-document-object-model","title":"DOM (Document Object Model)","text":"<p>HTML \u2192 Tree structure</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;Page&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;h1&gt;Hello&lt;/h1&gt;\n    &lt;p&gt;World&lt;/p&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <pre><code>Document\n\u2514\u2500\u2500 html\n    \u251c\u2500\u2500 head\n    \u2502   \u2514\u2500\u2500 title\n    \u2502       \u2514\u2500\u2500 \"Page\"\n    \u2514\u2500\u2500 body\n        \u251c\u2500\u2500 h1\n        \u2502   \u2514\u2500\u2500 \"Hello\"\n        \u2514\u2500\u2500 p\n            \u2514\u2500\u2500 \"World\"\n</code></pre>"},{"location":"web-fundamentals/web-basics/#cssom-css-object-model","title":"CSSOM (CSS Object Model)","text":"<p>CSS \u2192 Tree structure showing which styles apply to which elements</p>"},{"location":"web-fundamentals/web-basics/#render-blocking","title":"Render Blocking","text":"<p>CSS blocks rendering:</p> <ul> <li>All CSS is render-blocking</li> <li>Minimize and inline critical CSS</li> <li>Load non-critical CSS asynchronously</li> </ul> <p>JavaScript blocks parsing:</p> <ul> <li>Parser stops when it encounters <code>&lt;script&gt;</code></li> <li>Use <code>async</code> or <code>defer</code> attributes</li> <li>Place scripts at end of body</li> </ul> <pre><code>&lt;!-- Blocks parsing --&gt;\n&lt;script src=\"script.js\"&gt;&lt;/script&gt;\n\n&lt;!-- Downloads parallel, executes after parsing --&gt;\n&lt;script src=\"script.js\" defer&gt;&lt;/script&gt;\n\n&lt;!-- Downloads and executes immediately --&gt;\n&lt;script src=\"script.js\" async&gt;&lt;/script&gt;\n</code></pre>"},{"location":"web-fundamentals/web-basics/#browser-caching","title":"Browser Caching","text":""},{"location":"web-fundamentals/web-basics/#types-of-cache","title":"Types of Cache","text":"<ol> <li>Memory Cache: RAM (fastest, cleared on close)</li> <li>Disk Cache: Hard drive (persistent)</li> <li>Service Worker Cache: Programmatic control</li> </ol>"},{"location":"web-fundamentals/web-basics/#cache-headers","title":"Cache Headers","text":"<pre><code>Cache-Control: max-age=3600\nCache-Control: no-cache\nCache-Control: no-store\nExpires: Thu, 02 Oct 2025 12:00:00 GMT\nETag: \"abc123\"\nLast-Modified: Thu, 01 Oct 2025 12:00:00 GMT\n</code></pre>"},{"location":"web-fundamentals/web-basics/#browser-developer-tools","title":"Browser Developer Tools","text":""},{"location":"web-fundamentals/web-basics/#elements-tab","title":"Elements Tab","text":"<ul> <li>Inspect HTML</li> <li>Modify DOM</li> <li>Edit CSS live</li> <li>View computed styles</li> </ul>"},{"location":"web-fundamentals/web-basics/#console-tab","title":"Console Tab","text":"<ul> <li>JavaScript errors</li> <li>Log messages</li> <li>Execute JavaScript</li> </ul>"},{"location":"web-fundamentals/web-basics/#network-tab","title":"Network Tab","text":"<ul> <li>Monitor requests</li> <li>View response</li> <li>Check timing</li> <li>Analyze performance</li> </ul>"},{"location":"web-fundamentals/web-basics/#performance-tab","title":"Performance Tab","text":"<ul> <li>Record page load</li> <li>Identify bottlenecks</li> <li>CPU profiling</li> <li>Memory usage</li> </ul>"},{"location":"web-fundamentals/web-basics/#application-tab","title":"Application Tab","text":"<ul> <li>View cookies</li> <li>Local/session storage</li> <li>Service workers</li> <li>Cache storage</li> </ul>"},{"location":"web-fundamentals/web-basics/#email-systems","title":"Email Systems","text":""},{"location":"web-fundamentals/web-basics/#email-protocols","title":"Email Protocols","text":""},{"location":"web-fundamentals/web-basics/#smtp-simple-mail-transfer-protocol","title":"SMTP (Simple Mail Transfer Protocol)","text":"<p>Sending emails</p> <ul> <li>Port 25 (unencrypted)</li> <li>Port 587 (TLS)</li> <li>Port 465 (SSL)</li> </ul>"},{"location":"web-fundamentals/web-basics/#pop3-post-office-protocol-v3","title":"POP3 (Post Office Protocol v3)","text":"<p>Receiving emails (download)</p> <ul> <li>Port 110 (unencrypted)</li> <li>Port 995 (SSL)</li> <li>Downloads and deletes from server</li> </ul>"},{"location":"web-fundamentals/web-basics/#imap-internet-message-access-protocol","title":"IMAP (Internet Message Access Protocol)","text":"<p>Receiving emails (sync)</p> <ul> <li>Port 143 (unencrypted)</li> <li>Port 993 (SSL)</li> <li>Keeps emails on server</li> <li>Syncs across devices</li> </ul>"},{"location":"web-fundamentals/web-basics/#email-flow","title":"Email Flow","text":"<pre><code>Sender \u2192 SMTP Server \u2192 Recipient SMTP Server \u2192 POP3/IMAP \u2192 Recipient\n</code></pre>"},{"location":"web-fundamentals/web-basics/#email-authentication","title":"Email Authentication","text":""},{"location":"web-fundamentals/web-basics/#spf-sender-policy-framework","title":"SPF (Sender Policy Framework)","text":"<p>Specifies which servers can send email for domain</p> <pre><code>example.com. IN TXT \"v=spf1 ip4:192.0.2.0/24 include:_spf.google.com ~all\"\n</code></pre>"},{"location":"web-fundamentals/web-basics/#dkim-domainkeys-identified-mail","title":"DKIM (DomainKeys Identified Mail)","text":"<p>Digital signature to verify email authenticity</p> <pre><code>default._domainkey.example.com. IN TXT \"v=DKIM1; k=rsa; p=MIGfMA0GCS...\"\n</code></pre>"},{"location":"web-fundamentals/web-basics/#dmarc-domain-based-message-authentication","title":"DMARC (Domain-based Message Authentication)","text":"<p>Policy for SPF and DKIM failures</p> <pre><code>_dmarc.example.com. IN TXT \"v=DMARC1; p=quarantine; rua=mailto:dmarc@example.com\"\n</code></pre>"},{"location":"web-fundamentals/web-basics/#sending-email-from-php","title":"Sending Email from PHP","text":"<pre><code>// Using mail() function\nmail(\n    'recipient@example.com',\n    'Subject',\n    'Message body',\n    'From: sender@example.com'\n);\n\n// Using PHPMailer (recommended)\nuse PHPMailer\\PHPMailer\\PHPMailer;\n\n$mail = new PHPMailer(true);\n$mail-&gt;isSMTP();\n$mail-&gt;Host = 'smtp.example.com';\n$mail-&gt;SMTPAuth = true;\n$mail-&gt;Username = 'user@example.com';\n$mail-&gt;Password = 'password';\n$mail-&gt;SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;\n$mail-&gt;Port = 587;\n\n$mail-&gt;setFrom('sender@example.com', 'Sender Name');\n$mail-&gt;addAddress('recipient@example.com');\n$mail-&gt;Subject = 'Subject';\n$mail-&gt;Body = 'Message body';\n\n$mail-&gt;send();\n</code></pre>"},{"location":"web-fundamentals/web-basics/#web-security","title":"Web Security","text":""},{"location":"web-fundamentals/web-basics/#common-vulnerabilities-owasp-top-10","title":"Common Vulnerabilities (OWASP Top 10)","text":""},{"location":"web-fundamentals/web-basics/#1-sql-injection","title":"1. SQL Injection","text":"<p>Problem: Malicious SQL code injected</p> <pre><code>// \u274c Vulnerable\n$query = \"SELECT * FROM users WHERE id = \" . $_GET['id'];\n\n// \u2705 Secure - Use prepared statements\n$stmt = $pdo-&gt;prepare(\"SELECT * FROM users WHERE id = ?\");\n$stmt-&gt;execute([$_GET['id']]);\n</code></pre>"},{"location":"web-fundamentals/web-basics/#2-cross-site-scripting-xss","title":"2. Cross-Site Scripting (XSS)","text":"<p>Problem: Malicious JavaScript injected</p> <pre><code>// \u274c Vulnerable\necho \"&lt;div&gt;\" . $_GET['name'] . \"&lt;/div&gt;\";\n\n// \u2705 Secure - Escape output\necho \"&lt;div&gt;\" . htmlspecialchars($_GET['name'], ENT_QUOTES, 'UTF-8') . \"&lt;/div&gt;\";\n</code></pre>"},{"location":"web-fundamentals/web-basics/#3-cross-site-request-forgery-csrf","title":"3. Cross-Site Request Forgery (CSRF)","text":"<p>Problem: Unauthorized actions performed</p> <pre><code>// \u2705 Generate token\n$_SESSION['csrf_token'] = bin2hex(random_bytes(32));\n\n// \u2705 Verify token\nif (!hash_equals($_SESSION['csrf_token'], $_POST['csrf_token'])) {\n    die('Invalid CSRF token');\n}\n</code></pre> <pre><code>&lt;form method=\"POST\"&gt;\n    &lt;input type=\"hidden\" name=\"csrf_token\" value=\"&lt;?= $_SESSION['csrf_token'] ?&gt;\"&gt;\n    &lt;!-- form fields --&gt;\n&lt;/form&gt;\n</code></pre>"},{"location":"web-fundamentals/web-basics/#4-insecure-authentication","title":"4. Insecure Authentication","text":"<pre><code>// \u2705 Hash passwords\n$hash = password_hash($password, PASSWORD_DEFAULT);\n\n// \u2705 Verify passwords\nif (password_verify($password, $hash)) {\n    // Login success\n}\n\n// \u274c Never store plain text passwords!\n</code></pre>"},{"location":"web-fundamentals/web-basics/#security-headers","title":"Security Headers","text":"<pre><code># Prevent XSS\nX-XSS-Protection: 1; mode=block\n\n# Prevent clickjacking\nX-Frame-Options: DENY\nX-Frame-Options: SAMEORIGIN\n\n# Force HTTPS\nStrict-Transport-Security: max-age=31536000; includeSubDomains\n\n# Control resources\nContent-Security-Policy: default-src 'self'; script-src 'self' https://trusted.com\n\n# Prevent MIME sniffing\nX-Content-Type-Options: nosniff\n\n# Referrer policy\nReferrer-Policy: strict-origin-when-cross-origin\n</code></pre>"},{"location":"web-fundamentals/web-basics/#cors-cross-origin-resource-sharing","title":"CORS (Cross-Origin Resource Sharing)","text":"<p>Allow/restrict resources from different origins</p> <pre><code># Allow specific origin\nAccess-Control-Allow-Origin: https://example.com\n\n# Allow any origin (use carefully!)\nAccess-Control-Allow-Origin: *\n\n# Allow credentials\nAccess-Control-Allow-Credentials: true\n\n# Allow specific methods\nAccess-Control-Allow-Methods: GET, POST, PUT, DELETE\n\n# Allow specific headers\nAccess-Control-Allow-Headers: Content-Type, Authorization\n</code></pre>"},{"location":"web-fundamentals/web-basics/#input-validation-sanitization","title":"Input Validation &amp; Sanitization","text":"<pre><code>// Validate email\nif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n    die('Invalid email');\n}\n\n// Validate URL\nif (!filter_var($url, FILTER_VALIDATE_URL)) {\n    die('Invalid URL');\n}\n\n// Sanitize string\n$clean = filter_var($input, FILTER_SANITIZE_STRING);\n\n// Validate integer\n$id = filter_var($_GET['id'], FILTER_VALIDATE_INT);\n</code></pre>"},{"location":"web-fundamentals/web-basics/#learning-resources","title":"Learning Resources","text":""},{"location":"web-fundamentals/web-basics/#official-documentation","title":"Official Documentation","text":"<ul> <li>MDN Web Docs</li> <li>HTTP/1.1 Specification</li> <li>HTTP/2 Specification</li> </ul>"},{"location":"web-fundamentals/web-basics/#interactive-tools","title":"Interactive Tools","text":"<ul> <li>Webhook.site - Test HTTP requests</li> <li>Postman - API testing</li> <li>cURL - Command-line HTTP client</li> </ul>"},{"location":"web-fundamentals/web-basics/#security-resources","title":"Security Resources","text":"<ul> <li>OWASP Top 10</li> <li>Mozilla Observatory</li> <li>Security Headers</li> </ul>"},{"location":"web-fundamentals/web-basics/#testing-tools","title":"Testing Tools","text":"<pre><code># Test HTTP request\ncurl -I https://example.com\n\n# Test with custom headers\ncurl -H \"Authorization: Bearer token\" https://api.example.com\n\n# POST request\ncurl -X POST -d \"key=value\" https://example.com/api\n\n# Test DNS\ndig example.com\nnslookup example.com\n\n# Test port connectivity\ntelnet example.com 80\nnc -zv example.com 443\n\n# Test SSL certificate\nopenssl s_client -connect example.com:443\n</code></pre>"},{"location":"web-fundamentals/web-basics/#practice-exercises","title":"Practice Exercises","text":"<ol> <li>Trace a Website Visit: Use browser dev tools to monitor all requests when loading a website</li> <li>DNS Investigation: Use dig to trace DNS resolution for your favorite website</li> <li>HTTP Methods: Create a simple REST API using different HTTP methods</li> <li>Security Headers: Check security headers of popular websites</li> <li>Performance Audit: Use Lighthouse to audit a website's performance</li> </ol>"},{"location":"web-fundamentals/web-basics/#quiz-questions","title":"Quiz Questions","text":"<ol> <li>What's the difference between HTTP and HTTPS?</li> <li>What does a 404 status code mean?</li> <li>What is the purpose of DNS?</li> <li>What's the difference between GET and POST?</li> <li>What is CORS and why is it important?</li> <li>What are the three main email authentication methods?</li> <li>How does browser caching improve performance?</li> <li>What is XSS and how can you prevent it?</li> </ol> <p>Next Step: Apply these concepts in real projects!</p>"},{"location":"wordpress/","title":"WordPress Development","text":"<p>Welcome to the WordPress Development learning path! This comprehensive guide will take you from WordPress basics to advanced plugin and theme development.</p>"},{"location":"wordpress/#course-overview","title":"Course Overview","text":"<p>This comprehensive WordPress development course covers everything you need to become a proficient WordPress developer, from fundamentals to advanced techniques.</p>"},{"location":"wordpress/#learning-path","title":"Learning Path","text":"<ol> <li>Introducing WordPress - WordPress fundamentals</li> <li>Coding Conventions - Best practices and standards</li> <li>Basic Plugin Development - Create your first plugins</li> <li>Basic Theme Development - Build custom themes</li> <li>REST API - WordPress REST API integration</li> <li>WP-CLI - Command-line interface mastery</li> </ol>"},{"location":"wordpress/#prerequisites","title":"Prerequisites","text":"<p>Before starting this WordPress course, you should have:</p> <ul> <li>\u2705 Completed Development Environment Setup</li> <li>\u2705 Basic understanding of HTML &amp; CSS</li> <li>\u2705 JavaScript fundamentals</li> <li>\u2705 PHP programming knowledge</li> <li>\u2705 MySQL database basics</li> </ul>"},{"location":"wordpress/#time-commitment","title":"Time Commitment","text":"<p>Estimated Duration: 8-12 weeks (with consistent practice)</p> <ul> <li>Beginner Level: 3-4 weeks</li> <li>Intermediate Level: 3-4 weeks</li> <li>Advanced Level: 2-4 weeks</li> </ul>"},{"location":"wordpress/#learning-outcomes","title":"Learning Outcomes","text":"<p>By the end of this course, you will be able to:</p> <ul> <li>\u2705 Install and configure WordPress</li> <li>\u2705 Develop custom plugins from scratch</li> <li>\u2705 Create custom WordPress themes</li> <li>\u2705 Work with WordPress hooks (actions &amp; filters)</li> <li>\u2705 Build REST API endpoints</li> <li>\u2705 Use WP-CLI for development tasks</li> <li>\u2705 Follow WordPress coding standards</li> <li>\u2705 Implement security best practices</li> <li>\u2705 Debug WordPress applications effectively</li> </ul>"},{"location":"wordpress/#getting-started","title":"Getting Started","text":"<ol> <li>Ensure you've completed Development Environment Setup</li> <li>Start with Introducing WordPress</li> <li>Progress through each module sequentially</li> <li>Complete the practical exercises in each section</li> <li>Build real projects to reinforce learning</li> </ol>"},{"location":"wordpress/#additional-resources","title":"Additional Resources","text":"<ul> <li>WordPress.org Learn</li> <li>WordPress Developer Documentation</li> <li>WordPress Codex</li> <li>WordPress TV</li> </ul> <p>Ready to begin? Start with Introducing WordPress \u2192</p>"},{"location":"wordpress/02-introducing-wordpress/","title":"Introducing WordPress","text":"<p>Learn the fundamentals of WordPress, its architecture, and how to navigate and use WordPress as a content management system (CMS).</p>"},{"location":"wordpress/02-introducing-wordpress/#what-is-wordpress","title":"What is WordPress?","text":"<p>WordPress is a free, open-source content management system (CMS) written in PHP and paired with a MySQL or MariaDB database. It was originally created as a blogging platform but has evolved into a versatile CMS that powers over 43% of all websites on the internet.</p> <p>Checkout WordPress Admin Dashboard Explained</p>"},{"location":"wordpress/02-introducing-wordpress/#key-features","title":"Key Features","text":"<ul> <li>Open Source - Free to use and modify</li> <li>User-Friendly - Intuitive admin interface</li> <li>Extensible - Thousands of plugins and themes</li> <li>SEO-Friendly - Built-in SEO features</li> <li>Responsive - Mobile-friendly design</li> <li>Community - Large, active community</li> <li>Regular Updates - Continuous security and feature improvements</li> </ul>"},{"location":"wordpress/02-introducing-wordpress/#wordpress-architecture","title":"WordPress Architecture","text":""},{"location":"wordpress/02-introducing-wordpress/#core-components","title":"Core Components","text":""},{"location":"wordpress/02-introducing-wordpress/#1-wordpress-core","title":"1. WordPress Core","text":"<p>The main WordPress files that provide the foundation:</p> <ul> <li>wp-admin/ - Administration interface</li> <li>wp-includes/ - Core libraries and functions</li> <li>wp-content/ - Themes, plugins, and uploads</li> <li>wp-config.php - Configuration file</li> <li>index.php - Entry point</li> </ul>"},{"location":"wordpress/02-introducing-wordpress/#2-database-structure","title":"2. Database Structure","text":"<p>WordPress uses MySQL/MariaDB with the following core tables:</p> <pre><code>wp_posts              # Posts, pages, custom post types\nwp_postmeta           # Post metadata\nwp_users              # User accounts\nwp_usermeta           # User metadata\nwp_comments           # Comments on posts\nwp_commentmeta        # Comment metadata\nwp_terms              # Categories, tags, taxonomies\nwp_term_taxonomy      # Taxonomy relationships\nwp_term_relationships # Object-term relationships\nwp_options            # Site settings and options\nwp_links              # Blogroll links (legacy)\n</code></pre>"},{"location":"wordpress/02-introducing-wordpress/#3-file-structure","title":"3. File Structure","text":"<pre><code>wordpress/\n\u251c\u2500\u2500 wp-admin/              # Admin dashboard files\n\u251c\u2500\u2500 wp-content/            # User content directory\n\u2502   \u251c\u2500\u2500 plugins/          # Installed plugins\n\u2502   \u251c\u2500\u2500 themes/           # Installed themes\n\u2502   \u251c\u2500\u2500 uploads/          # Media uploads\n\u2502   \u2514\u2500\u2500 languages/        # Translation files\n\u251c\u2500\u2500 wp-includes/          # Core WordPress files\n\u2502   \u251c\u2500\u2500 js/              # JavaScript files\n\u2502   \u251c\u2500\u2500 css/             # Stylesheets\n\u2502   \u2514\u2500\u2500 *.php            # Core PHP files\n\u251c\u2500\u2500 wp-config.php         # Configuration\n\u251c\u2500\u2500 index.php             # Main entry point\n\u251c\u2500\u2500 wp-settings.php       # Bootstrap file\n\u2514\u2500\u2500 other wp-*.php files # Various core files\n</code></pre>"},{"location":"wordpress/02-introducing-wordpress/#installing-wordpress","title":"Installing WordPress","text":""},{"location":"wordpress/02-introducing-wordpress/#manual-installation","title":"Manual Installation","text":""},{"location":"wordpress/02-introducing-wordpress/#step-1-download-wordpress","title":"Step 1: Download WordPress","text":"<pre><code># Using WP-CLI\nwp core download\n\n# Or download from WordPress.org\n# https://wordpress.org/download/\n</code></pre>"},{"location":"wordpress/02-introducing-wordpress/#step-2-create-database","title":"Step 2: Create Database","text":"<pre><code>CREATE DATABASE wordpress_db CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\nCREATE USER 'wp_user'@'localhost' IDENTIFIED BY 'strong_password';\nGRANT ALL PRIVILEGES ON wordpress_db.* TO 'wp_user'@'localhost';\nFLUSH PRIVILEGES;\n</code></pre>"},{"location":"wordpress/02-introducing-wordpress/#step-3-configure-wp-configphp","title":"Step 3: Configure wp-config.php","text":"<pre><code># Copy sample config\ncp wp-config-sample.php wp-config.php\n\n# Edit database credentials\nnano wp-config.php\n</code></pre> <pre><code>// Database settings\ndefine('DB_NAME', 'wordpress_db');\ndefine('DB_USER', 'wp_user');\ndefine('DB_PASSWORD', 'strong_password');\ndefine('DB_HOST', 'localhost');\ndefine('DB_CHARSET', 'utf8mb4');\ndefine('DB_COLLATE', 'utf8mb4_unicode_ci');\n\n// Security keys (generate at https://api.wordpress.org/secret-key/1.1/salt/)\ndefine('AUTH_KEY',         'your-unique-key-here');\ndefine('SECURE_AUTH_KEY',  'your-unique-key-here');\n// ... add all 8 security keys\n</code></pre>"},{"location":"wordpress/02-introducing-wordpress/#step-4-run-installation","title":"Step 4: Run Installation","text":"<p>Visit <code>http://your-domain.test/wp-admin/install.php</code> and follow the installation wizard.</p>"},{"location":"wordpress/02-introducing-wordpress/#wp-cli-installation","title":"WP-CLI Installation","text":"<pre><code># Download WordPress core\nwp core download\n\n# Create wp-config.php\nwp config create --dbname=wordpress_db --dbuser=wp_user --dbpass=strong_password\n\n# Install WordPress\nwp core install --url=example.test --title=\"My Site\" --admin_user=admin --admin_password=password --admin_email=admin@example.com\n</code></pre>"},{"location":"wordpress/02-introducing-wordpress/#wordpress-admin-dashboard","title":"WordPress Admin Dashboard","text":""},{"location":"wordpress/02-introducing-wordpress/#navigating-the-dashboard","title":"Navigating the Dashboard","text":""},{"location":"wordpress/02-introducing-wordpress/#main-menu-items","title":"Main Menu Items","text":"<p>Dashboard - Overview and quick stats <pre><code>- Home\n- Updates\n</code></pre></p> <p>Posts - Blog posts management <pre><code>- All Posts\n- Add New\n- Categories\n- Tags\n</code></pre></p> <p>Media - File uploads management <pre><code>- Library\n- Add New\n</code></pre></p> <p>Pages - Static pages <pre><code>- All Pages\n- Add New\n</code></pre></p> <p>Comments - User comments <pre><code>- All Comments\n- Pending, Approved, Spam, Trash\n</code></pre></p> <p>Appearance - Theme management <pre><code>- Themes\n- Customize\n- Widgets\n- Menus\n- Theme File Editor\n</code></pre></p> <p>Plugins - Plugin management <pre><code>- Installed Plugins\n- Add New\n- Plugin File Editor\n</code></pre></p> <p>Users - User management <pre><code>- All Users\n- Add New\n- Your Profile\n</code></pre></p> <p>Tools - WordPress tools <pre><code>- Import\n- Export\n- Site Health\n- Export Personal Data\n- Erase Personal Data\n</code></pre></p> <p>Settings - Site configuration <pre><code>- General\n- Writing\n- Reading\n- Discussion\n- Media\n- Permalinks\n- Privacy\n</code></pre></p>"},{"location":"wordpress/02-introducing-wordpress/#content-management","title":"Content Management","text":""},{"location":"wordpress/02-introducing-wordpress/#posts-vs-pages","title":"Posts vs Pages","text":""},{"location":"wordpress/02-introducing-wordpress/#posts","title":"Posts","text":"<ul> <li>Time-sensitive content (blog articles)</li> <li>Organized by categories and tags</li> <li>RSS feed enabled</li> <li>Reverse chronological order</li> <li>Author and date displayed</li> <li>Comments enabled by default</li> </ul>"},{"location":"wordpress/02-introducing-wordpress/#pages","title":"Pages","text":"<ul> <li>Static content (About, Contact, Services)</li> <li>Hierarchical (can have parent pages)</li> <li>No categories or tags</li> <li>No RSS feed</li> <li>Custom order</li> <li>Page templates available</li> </ul>"},{"location":"wordpress/02-introducing-wordpress/#creating-content","title":"Creating Content","text":""},{"location":"wordpress/02-introducing-wordpress/#adding-a-new-post","title":"Adding a New Post","text":"<pre><code>// Navigate to Posts &gt; Add New\n\nTitle: Your Post Title\n\nContent:\n&lt;!-- Use the block editor (Gutenberg) --&gt;\n- Add blocks (paragraph, image, heading, etc.)\n- Format text\n- Insert media\n- Add links\n\nSettings Panel:\n- Categories: Select or create categories\n- Tags: Add tags\n- Featured Image: Set post thumbnail\n- Excerpt: Custom excerpt\n- Discussion: Enable/disable comments\n- Publish: Schedule or publish immediately\n</code></pre>"},{"location":"wordpress/02-introducing-wordpress/#adding-a-new-page","title":"Adding a New Page","text":"<pre><code>// Navigate to Pages &gt; Add New\n\nSimilar to posts, but with additional options:\n- Page Attributes: Parent page, order, template\n- No categories or tags\n</code></pre>"},{"location":"wordpress/02-introducing-wordpress/#media-library","title":"Media Library","text":""},{"location":"wordpress/02-introducing-wordpress/#supported-file-types","title":"Supported File Types","text":"<p>Images:</p> <ul> <li>JPEG, PNG, GIF, WebP, SVG (with plugin)</li> </ul> <p>Documents:</p> <ul> <li>PDF, DOC, DOCX, PPT, PPTX, XLS, XLSX</li> </ul> <p>Audio:</p> <ul> <li>MP3, M4A, OGG, WAV</li> </ul> <p>Video:</p> <ul> <li>MP4, M4V, MOV, WMV, AVI, MPG, OGV, 3GP, 3G2</li> </ul>"},{"location":"wordpress/02-introducing-wordpress/#uploading-media","title":"Uploading Media","text":"<pre><code>// Method 1: Media &gt; Add New\n// Drag and drop files or select from computer\n\n// Method 2: Within post/page editor\n// Add Image block or Media &amp; Text block\n\n// Method 3: WP-CLI\nwp media import image.jpg --title=\"Image Title\"\n</code></pre>"},{"location":"wordpress/02-introducing-wordpress/#image-sizes","title":"Image Sizes","text":"<p>WordPress automatically creates multiple image sizes:</p> <pre><code>// Default sizes\nthumbnail    # 150x150 (cropped)\nmedium       # 300x300 (proportional)\nmedium_large # 768x768 (proportional)\nlarge        # 1024x1024 (proportional)\nfull         # Original size\n</code></pre>"},{"location":"wordpress/02-introducing-wordpress/#user-roles-and-permissions","title":"User Roles and Permissions","text":""},{"location":"wordpress/02-introducing-wordpress/#user-roles","title":"User Roles","text":""},{"location":"wordpress/02-introducing-wordpress/#super-admin","title":"Super Admin","text":"<ul> <li>Multisite only</li> <li>Full control over entire network</li> </ul>"},{"location":"wordpress/02-introducing-wordpress/#administrator","title":"Administrator","text":"<ul> <li>Complete control over single site</li> <li>Can do everything except manage network</li> </ul> <p>Capabilities:</p> <ul> <li>Install/activate themes and plugins</li> <li>Add/delete users</li> <li>Manage all content</li> <li>Modify site settings</li> </ul>"},{"location":"wordpress/02-introducing-wordpress/#editor","title":"Editor","text":"<ul> <li>Manage and publish all content</li> </ul> <p>Capabilities:</p> <ul> <li>Create, edit, publish, delete any posts/pages</li> <li>Moderate comments</li> <li>Manage categories and tags</li> <li>Upload files</li> </ul>"},{"location":"wordpress/02-introducing-wordpress/#author","title":"Author","text":"<ul> <li>Create and publish own content</li> </ul> <p>Capabilities:</p> <ul> <li>Create, edit, publish, delete own posts</li> <li>Upload files</li> <li>Cannot edit others' content</li> </ul>"},{"location":"wordpress/02-introducing-wordpress/#contributor","title":"Contributor","text":"<ul> <li>Create content but cannot publish</li> </ul> <p>Capabilities:</p> <ul> <li>Create and edit own posts (unpublished)</li> <li>Cannot upload files</li> <li>Cannot publish</li> </ul>"},{"location":"wordpress/02-introducing-wordpress/#subscriber","title":"Subscriber","text":"<ul> <li>Read-only access</li> </ul> <p>Capabilities:</p> <ul> <li>View content</li> <li>Manage own profile</li> <li>Post comments</li> </ul>"},{"location":"wordpress/02-introducing-wordpress/#managing-users","title":"Managing Users","text":"<pre><code># Add user via WP-CLI\nwp user create johndoe john@example.com --role=editor --user_pass=password\n\n# List users\nwp user list\n\n# Update user role\nwp user update 2 --role=administrator\n\n# Delete user\nwp user delete 123 --reassign=456\n</code></pre>"},{"location":"wordpress/02-introducing-wordpress/#wordpress-settings","title":"WordPress Settings","text":""},{"location":"wordpress/02-introducing-wordpress/#general-settings","title":"General Settings","text":"<pre><code>Site Title: Your Site Name\nTagline: Your Site Description\nWordPress Address (URL): https://example.com\nSite Address (URL): https://example.com\nEmail Address: admin@example.com\nMembership: Anyone can register (optional)\nNew User Default Role: Subscriber\nSite Language: English\nTimezone: Your timezone\nDate Format: F j, Y\nTime Format: g:i a\nWeek Starts On: Monday\n</code></pre>"},{"location":"wordpress/02-introducing-wordpress/#permalink-settings","title":"Permalink Settings","text":"<p>Permalink Structure Options:</p> <pre><code>Plain:          ?p=123\nDay and name:   /2025/10/03/sample-post/\nMonth and name: /2025/10/sample-post/\nNumeric:        /archives/123\nPost name:      /sample-post/ (Recommended)\nCustom:         /blog/%postname%/\n</code></pre> <p>Recommended Structure:</p> <pre><code>Post name: /%postname%/\n</code></pre> <p>This provides: - SEO-friendly URLs - Clean, readable links - Better user experience</p>"},{"location":"wordpress/02-introducing-wordpress/#themes","title":"Themes","text":""},{"location":"wordpress/02-introducing-wordpress/#what-are-themes","title":"What are Themes?","text":"<p>Themes control the appearance and layout of your WordPress site without modifying the core software.</p>"},{"location":"wordpress/02-introducing-wordpress/#default-themes","title":"Default Themes","text":"<p>WordPress ships with default themes: - Twenty Twenty-Four (2024) - Twenty Twenty-Three (2023) - Twenty Twenty-Two (2022)</p>"},{"location":"wordpress/02-introducing-wordpress/#installing-themes","title":"Installing Themes","text":""},{"location":"wordpress/02-introducing-wordpress/#from-wordpress-repository","title":"From WordPress Repository","text":"<pre><code># Via admin dashboard\n# Appearance &gt; Themes &gt; Add New &gt; Search\n\n# Via WP-CLI\nwp theme install twentytwentyfour --activate\n</code></pre>"},{"location":"wordpress/02-introducing-wordpress/#from-zip-file","title":"From ZIP File","text":"<pre><code># Via admin dashboard\n# Appearance &gt; Themes &gt; Add New &gt; Upload Theme\n\n# Via WP-CLI\nwp theme install theme.zip --activate\n</code></pre>"},{"location":"wordpress/02-introducing-wordpress/#child-themes","title":"Child Themes","text":"<p>Child themes allow you to modify a theme without changing the parent theme files.</p>"},{"location":"wordpress/02-introducing-wordpress/#plugins","title":"Plugins","text":""},{"location":"wordpress/02-introducing-wordpress/#what-are-plugins","title":"What are Plugins?","text":"<p>Plugins extend WordPress functionality by adding features and capabilities.</p>"},{"location":"wordpress/02-introducing-wordpress/#essential-plugins-for-development","title":"Essential Plugins for Development","text":""},{"location":"wordpress/02-introducing-wordpress/#debugging-and-development","title":"Debugging and Development","text":"<ul> <li>Query Monitor - Debugging toolkit</li> <li>User Switching - Switch between user accounts</li> <li>WP Crontrol - Manage cron jobs</li> </ul>"},{"location":"wordpress/02-introducing-wordpress/#seo","title":"SEO","text":"<ul> <li>Yoast SEO - SEO optimization</li> <li>Rank Math - SEO toolkit</li> </ul>"},{"location":"wordpress/02-introducing-wordpress/#security","title":"Security","text":"<ul> <li>Wordfence - Security and firewall</li> <li>iThemes Security - Security hardening</li> </ul>"},{"location":"wordpress/02-introducing-wordpress/#performance","title":"Performance","text":"<ul> <li>WP Super Cache - Page caching</li> <li>Smush - Image optimization</li> </ul>"},{"location":"wordpress/02-introducing-wordpress/#forms","title":"Forms","text":"<ul> <li>Contact Form 7 - Contact forms</li> <li>WPForms - Form builder</li> </ul>"},{"location":"wordpress/02-introducing-wordpress/#installing-plugins","title":"Installing Plugins","text":"<pre><code># Via admin dashboard\n# Plugins &gt; Add New &gt; Search\n\n# Via WP-CLI\nwp plugin install query-monitor --activate\n\n# Install from ZIP\nwp plugin install plugin.zip --activate\n\n# List installed plugins\nwp plugin list\n\n# Update all plugins\nwp plugin update --all\n</code></pre>"},{"location":"wordpress/02-introducing-wordpress/#the-loop","title":"The Loop","text":"<p>The Loop is WordPress's core mechanism for displaying posts.</p>"},{"location":"wordpress/02-introducing-wordpress/#basic-loop","title":"Basic Loop","text":"<pre><code>&lt;?php\nif (have_posts()) :\n    while (have_posts()) : the_post();\n        // Display post content\n        the_title('&lt;h2&gt;', '&lt;/h2&gt;');\n        the_content();\n    endwhile;\nelse :\n    echo '&lt;p&gt;No posts found&lt;/p&gt;';\nendif;\n?&gt;\n</code></pre>"},{"location":"wordpress/02-introducing-wordpress/#template-hierarchy","title":"Template Hierarchy","text":"<p>WordPress uses a template hierarchy to determine which template file to use:</p> <pre><code>Single Post:\nsingle-{post-type}-{slug}.php\nsingle-{post-type}.php\nsingle.php\nsingular.php\nindex.php\n\nPage:\npage-{slug}.php\npage-{id}.php\npage.php\nsingular.php\nindex.php\n\nArchive:\narchive-{post-type}.php\narchive.php\nindex.php\n\nHomepage:\nfront-page.php\nhome.php\nindex.php\n</code></pre>"},{"location":"wordpress/02-introducing-wordpress/#practical-exercises","title":"Practical Exercises","text":""},{"location":"wordpress/02-introducing-wordpress/#exercise-1-wordpress-administration","title":"Exercise 1: WordPress Administration","text":"<ul> <li> Install WordPress locally</li> <li> Explore the admin dashboard</li> <li> Create 5 sample posts with categories and tags</li> <li> Create 3 pages with a parent-child relationship</li> <li> Upload various media files</li> <li> Create user accounts with different roles</li> <li> Configure permalink structure</li> <li> Install and activate a theme</li> <li> Install 3-5 essential plugins</li> </ul>"},{"location":"wordpress/02-introducing-wordpress/#exercise-2-content-management","title":"Exercise 2: Content Management","text":"<ul> <li> Create a blog post with featured image</li> <li> Add categories and tags</li> <li> Create custom menus</li> <li> Customize the homepage</li> <li> Create a contact page</li> <li> Manage comments</li> <li> Use the block editor (Gutenberg)</li> <li> Create reusable blocks</li> </ul>"},{"location":"wordpress/02-introducing-wordpress/#key-takeaways","title":"Key Takeaways","text":"<ol> <li>WordPress is a powerful, open-source CMS</li> <li>Understanding the file structure is crucial</li> <li>The admin dashboard is intuitive and user-friendly</li> <li>Posts are for time-sensitive content; pages for static content</li> <li>Themes control appearance; plugins add functionality</li> <li>User roles define capabilities and permissions</li> <li>The Loop is core to displaying content</li> <li>Template hierarchy determines which file is used</li> </ol>"},{"location":"wordpress/02-introducing-wordpress/#next-steps","title":"Next Steps","text":"<p>Now that you understand WordPress fundamentals, proceed to Coding Conventions to learn WordPress coding standards and best practices.</p> <p>Resources:</p> <ul> <li>WordPress.org Learn - Introduction to WordPress</li> <li>WordPress Codex</li> <li>WordPress Developer Documentation</li> </ul>"},{"location":"wordpress/03-coding-conventions/","title":"Coding Conventions","text":"<p>Learn WordPress coding standards, best practices, and conventions to write clean, maintainable, and secure code.</p>"},{"location":"wordpress/03-coding-conventions/#why-coding-standards-matter","title":"Why Coding Standards Matter","text":"<p>Coding standards ensure:</p> <ul> <li>Consistency - Code looks uniform across projects</li> <li>Readability - Easier to understand and maintain</li> <li>Collaboration - Team members can work together seamlessly</li> <li>Quality - Reduces bugs and security vulnerabilities</li> <li>Professionalism - Industry-standard code</li> </ul>"},{"location":"wordpress/03-coding-conventions/#wordpress-coding-standards","title":"WordPress Coding Standards","text":"<p>WordPress follows specific coding standards for different languages:</p> <ol> <li>PHP Coding Standards</li> <li>HTML Coding Standards</li> <li>CSS Coding Standards</li> <li>JavaScript Coding Standards</li> </ol>"},{"location":"wordpress/03-coding-conventions/#official-documentation","title":"Official Documentation","text":"<ul> <li>WordPress Coding Standards</li> <li>WordPress PHP Coding Standards</li> </ul>"},{"location":"wordpress/03-coding-conventions/#php-coding-standards","title":"PHP Coding Standards","text":""},{"location":"wordpress/03-coding-conventions/#file-organization","title":"File Organization","text":""},{"location":"wordpress/03-coding-conventions/#file-header","title":"File Header","text":"<pre><code>&lt;?php\n/**\n * Plugin Name: My Plugin Name\n * Plugin URI: https://example.com/my-plugin\n * Description: Brief description of the plugin\n * Version: 1.0.0\n * Author: Your Name\n * Author URI: https://example.com\n * License: GPL-2.0+\n * License URI: http://www.gnu.org/licenses/gpl-2.0.txt\n * Text Domain: my-plugin\n * Domain Path: /languages\n */\n\n// If this file is called directly, abort.\nif (!defined('WPINC')) {\n    die;\n}\n</code></pre>"},{"location":"wordpress/03-coding-conventions/#naming-conventions","title":"Naming Conventions","text":""},{"location":"wordpress/03-coding-conventions/#functions","title":"Functions","text":"<pre><code>// Use lowercase and underscores\nfunction my_plugin_function_name() {\n    // Function code\n}\n\n// Prefix with plugin/theme name to avoid conflicts\nfunction myplugin_get_user_data() {\n    // Function code\n}\n\n// BAD - no prefix, camelCase\nfunction getUserData() {\n    // Don't do this\n}\n</code></pre>"},{"location":"wordpress/03-coding-conventions/#variables","title":"Variables","text":"<pre><code>// Use lowercase and underscores\n$user_name = 'John';\n$post_count = 10;\n$is_active = true;\n\n// BAD - camelCase\n$userName = 'John';\n$postCount = 10;\n</code></pre>"},{"location":"wordpress/03-coding-conventions/#classes","title":"Classes","text":"<pre><code>// Use PascalCase (first letter of each word capitalized)\nclass My_Plugin_Admin {\n    // Class code\n}\n\nclass WP_Custom_Widget extends WP_Widget {\n    // Class code\n}\n\n// With namespaces (recommended for modern code)\nnamespace MyPlugin\\Admin;\n\nclass Dashboard {\n    // Class code\n}\n</code></pre>"},{"location":"wordpress/03-coding-conventions/#constants","title":"Constants","text":"<pre><code>// Use uppercase and underscores\ndefine('MY_PLUGIN_VERSION', '1.0.0');\ndefine('MY_PLUGIN_PATH', plugin_dir_path(__FILE__));\n\n// Or use const in classes\nclass My_Plugin {\n    const VERSION = '1.0.0';\n    const MIN_PHP_VERSION = '7.4';\n}\n</code></pre>"},{"location":"wordpress/03-coding-conventions/#indentation-and-spacing","title":"Indentation and Spacing","text":""},{"location":"wordpress/03-coding-conventions/#indentation","title":"Indentation","text":"<p>Use tabs for indentation (not spaces):</p> <pre><code>&lt;?php\nfunction my_function() {\n    if (condition) {\n        // Code here (one tab)\n        for ($i = 0; $i &lt; 10; $i++) {\n            // Code here (two tabs)\n        }\n    }\n}\n</code></pre>"},{"location":"wordpress/03-coding-conventions/#spacing","title":"Spacing","text":"<pre><code>// Space after control structures\nif (condition) {\n    // code\n}\n\nwhile (condition) {\n    // code\n}\n\nfor ($i = 0; $i &lt; 10; $i++) {\n    // code\n}\n\n// Space around operators\n$result = $value1 + $value2;\n$is_equal = ($a === $b);\n\n// Space after commas in function calls\nmy_function($arg1, $arg2, $arg3);\n\n// No space inside parentheses\nif ($condition) {  // GOOD\nif ( $condition ) {  // BAD\n</code></pre>"},{"location":"wordpress/03-coding-conventions/#brace-style","title":"Brace Style","text":"<pre><code>// Opening brace on same line (K&amp;R style)\nfunction my_function() {\n    // code\n}\n\nif ($condition) {\n    // code\n} else {\n    // code\n}\n\n// Always use braces, even for single-line statements\nif ($condition) {\n    return true;\n}\n\n// BAD - no braces\nif ($condition)\n    return true;\n</code></pre>"},{"location":"wordpress/03-coding-conventions/#code-documentation","title":"Code Documentation","text":""},{"location":"wordpress/03-coding-conventions/#file-documentation","title":"File Documentation","text":"<pre><code>&lt;?php\n/**\n * My Plugin Core File\n *\n * This file contains the main plugin functionality\n *\n * @package    My_Plugin\n * @subpackage My_Plugin/includes\n * @since      1.0.0\n */\n</code></pre>"},{"location":"wordpress/03-coding-conventions/#function-documentation","title":"Function Documentation","text":"<pre><code>/**\n * Retrieve user data by user ID.\n *\n * @since 1.0.0\n *\n * @param int    $user_id User ID.\n * @param string $context Optional. Context for data. Default 'display'.\n * @return array|false User data array on success, false on failure.\n */\nfunction myplugin_get_user_data($user_id, $context = 'display') {\n    // Function code\n}\n</code></pre>"},{"location":"wordpress/03-coding-conventions/#class-documentation","title":"Class Documentation","text":"<pre><code>/**\n * Core plugin class.\n *\n * This is used to define internationalization, admin-specific hooks,\n * and public-facing site hooks.\n *\n * @since      1.0.0\n * @package    My_Plugin\n * @subpackage My_Plugin/includes\n * @author     Your Name &lt;email@example.com&gt;\n */\nclass My_Plugin {\n    // Class code\n}\n</code></pre>"},{"location":"wordpress/03-coding-conventions/#inline-comments","title":"Inline Comments","text":"<pre><code>// Single-line comment for brief explanations\n\n/*\n * Multi-line comment for longer\n * explanations that span multiple lines.\n */\n\n/**\n * Multi-line comment using\n * PHPDoc format (preferred).\n */\n</code></pre>"},{"location":"wordpress/03-coding-conventions/#security-best-practices","title":"Security Best Practices","text":""},{"location":"wordpress/03-coding-conventions/#input-validation-and-sanitization","title":"Input Validation and Sanitization","text":"<pre><code>// Sanitize text input\n$user_input = sanitize_text_field($_POST['field_name']);\n\n// Sanitize email\n$email = sanitize_email($_POST['email']);\n\n// Sanitize URL\n$url = esc_url_raw($_POST['url']);\n\n// Sanitize HTML\n$html = wp_kses_post($_POST['content']);\n\n// Sanitize integer\n$number = absint($_POST['number']);\n\n// Sanitize array\n$array = array_map('sanitize_text_field', $_POST['array_field']);\n</code></pre>"},{"location":"wordpress/03-coding-conventions/#output-escaping","title":"Output Escaping","text":"<pre><code>// Escape HTML\necho esc_html($user_input);\n\n// Escape attributes\necho '&lt;div class=\"' . esc_attr($class_name) . '\"&gt;';\n\n// Escape URLs\necho '&lt;a href=\"' . esc_url($url) . '\"&gt;';\n\n// Escape JavaScript\necho '&lt;script&gt;var data = \"' . esc_js($data) . '\";&lt;/script&gt;';\n\n// Escape translation\necho esc_html__('Hello World', 'text-domain');\n</code></pre>"},{"location":"wordpress/03-coding-conventions/#nonce-verification","title":"Nonce Verification","text":"<pre><code>// Create nonce\nwp_nonce_field('my_action', 'my_nonce_field');\n\n// Verify nonce\nif (!isset($_POST['my_nonce_field']) || \n    !wp_verify_nonce($_POST['my_nonce_field'], 'my_action')) {\n    die('Security check failed');\n}\n\n// Nonce for URLs\n$url = wp_nonce_url(admin_url('admin-post.php?action=my_action'), 'my_action');\n\n// Verify nonce from URL\nif (!wp_verify_nonce($_GET['_wpnonce'], 'my_action')) {\n    die('Security check failed');\n}\n</code></pre>"},{"location":"wordpress/03-coding-conventions/#database-queries","title":"Database Queries","text":"<pre><code>global $wpdb;\n\n// BAD - SQL injection vulnerable\n$results = $wpdb-&gt;get_results(\"SELECT * FROM {$wpdb-&gt;posts} WHERE ID = {$_GET['id']}\");\n\n// GOOD - prepared statement\n$results = $wpdb-&gt;get_results(\n    $wpdb-&gt;prepare(\n        \"SELECT * FROM {$wpdb-&gt;posts} WHERE ID = %d\",\n        $_GET['id']\n    )\n);\n\n// Multiple placeholders\n$results = $wpdb-&gt;get_results(\n    $wpdb-&gt;prepare(\n        \"SELECT * FROM {$wpdb-&gt;posts} WHERE post_type = %s AND post_status = %s\",\n        $post_type,\n        $post_status\n    )\n);\n</code></pre>"},{"location":"wordpress/03-coding-conventions/#capability-checks","title":"Capability Checks","text":"<pre><code>// Check user capabilities\nif (!current_user_can('manage_options')) {\n    wp_die(__('You do not have sufficient permissions to access this page.'));\n}\n\n// Check for specific post\nif (!current_user_can('edit_post', $post_id)) {\n    wp_die(__('You do not have permission to edit this post.'));\n}\n\n// Check for custom capability\nif (!current_user_can('publish_plugins')) {\n    return;\n}\n</code></pre>"},{"location":"wordpress/03-coding-conventions/#wordpress-specific-best-practices","title":"WordPress-Specific Best Practices","text":""},{"location":"wordpress/03-coding-conventions/#using-wordpress-functions","title":"Using WordPress Functions","text":"<pre><code>// GOOD - Use WordPress HTTP API\n$response = wp_remote_get('https://api.example.com/data');\n\n// BAD - Don't use curl directly\n$ch = curl_init('https://api.example.com/data');\n\n// GOOD - Use WordPress filesystem API\nrequire_once(ABSPATH . 'wp-admin/includes/file.php');\nWP_Filesystem();\nglobal $wp_filesystem;\n$wp_filesystem-&gt;put_contents($file, $content);\n\n// BAD - Don't use PHP file functions directly in production\nfile_put_contents($file, $content);\n</code></pre>"},{"location":"wordpress/03-coding-conventions/#enqueuing-assets","title":"Enqueuing Assets","text":"<pre><code>// GOOD - Enqueue scripts and styles properly\nfunction myplugin_enqueue_assets() {\n    wp_enqueue_style(\n        'myplugin-styles',\n        plugins_url('css/style.css', __FILE__),\n        array(),\n        '1.0.0'\n    );\n\n    wp_enqueue_script(\n        'myplugin-script',\n        plugins_url('js/script.js', __FILE__),\n        array('jquery'),\n        '1.0.0',\n        true\n    );\n}\nadd_action('wp_enqueue_scripts', 'myplugin_enqueue_assets');\n\n// BAD - Don't include directly in templates\n&lt;link rel=\"stylesheet\" href=\"&lt;?php echo plugins_url('css/style.css', __FILE__); ?&gt;\"&gt;\n</code></pre>"},{"location":"wordpress/03-coding-conventions/#database-operations","title":"Database Operations","text":"<pre><code>// GOOD - Use WordPress database functions\n$post_data = array(\n    'post_title'   =&gt; 'My Post',\n    'post_content' =&gt; 'Post content',\n    'post_status'  =&gt; 'publish',\n    'post_type'    =&gt; 'post',\n);\n$post_id = wp_insert_post($post_data);\n\n// Update post meta\nupdate_post_meta($post_id, 'custom_field', $value);\n\n// Get post meta\n$value = get_post_meta($post_id, 'custom_field', true);\n\n// Delete post meta\ndelete_post_meta($post_id, 'custom_field');\n</code></pre>"},{"location":"wordpress/03-coding-conventions/#internationalization-i18n","title":"Internationalization (i18n)","text":"<pre><code>// Translatable strings\n__('Hello World', 'text-domain');           // Return translated string\n_e('Hello World', 'text-domain');           // Echo translated string\n_x('Post', 'noun', 'text-domain');          // Context-specific translation\n_n('1 item', '%d items', $count, 'text-domain'); // Plural forms\n\n// Translation with escaping\nesc_html__('Hello World', 'text-domain');   // Escape HTML\nesc_attr__('Hello World', 'text-domain');   // Escape attribute\nesc_html_e('Hello World', 'text-domain');   // Echo escaped HTML\n\n// Variables in translations\nsprintf(\n    /* translators: %s: user name */\n    __('Hello, %s!', 'text-domain'),\n    $user_name\n);\n</code></pre>"},{"location":"wordpress/03-coding-conventions/#code-quality-tools","title":"Code Quality Tools","text":""},{"location":"wordpress/03-coding-conventions/#php-codesniffer","title":"PHP CodeSniffer","text":"<p>Install and configure PHP_CodeSniffer with WordPress standards:</p> <pre><code># Install via Composer\ncomposer global require \"squizlabs/php_codesniffer=*\"\ncomposer global require wp-coding-standards/wpcs\n\n# Set WordPress as default standard\nphpcs --config-set installed_paths ~/.composer/vendor/wp-coding-standards/wpcs\nphpcs --config-set default_standard WordPress\n\n# Check a file\nphpcs my-plugin.php\n\n# Check a directory\nphpcs wp-content/plugins/my-plugin/\n\n# Auto-fix issues\nphpcbf wp-content/plugins/my-plugin/\n</code></pre>"},{"location":"wordpress/03-coding-conventions/#vs-code-php-coding-standards","title":"VS Code PHP Coding Standards","text":"<pre><code>{\n    \"phpSniffer.standard\": \"WordPress\",\n    \"phpSniffer.autoExecute\": true,\n    \"phpSniffer.executablesFolder\": \"/usr/local/bin/\"\n}\n</code></pre>"},{"location":"wordpress/03-coding-conventions/#html-coding-standards","title":"HTML Coding Standards","text":""},{"location":"wordpress/03-coding-conventions/#html-formatting","title":"HTML Formatting","text":"<pre><code>&lt;!-- Use proper indentation --&gt;\n&lt;div class=\"container\"&gt;\n    &lt;div class=\"row\"&gt;\n        &lt;div class=\"col\"&gt;\n            &lt;p&gt;Content here&lt;/p&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n\n&lt;!-- Self-closing tags --&gt;\n&lt;img src=\"image.jpg\" alt=\"Description\" /&gt;\n&lt;br /&gt;\n&lt;input type=\"text\" name=\"field\" /&gt;\n\n&lt;!-- Attributes in order: class, id, data-*, then others --&gt;\n&lt;div class=\"my-class\" id=\"my-id\" data-value=\"123\" aria-label=\"Label\"&gt;\n</code></pre>"},{"location":"wordpress/03-coding-conventions/#accessibility","title":"Accessibility","text":"<pre><code>&lt;!-- Always include alt text for images --&gt;\n&lt;img src=\"logo.png\" alt=\"Company Logo\" /&gt;\n\n&lt;!-- Use semantic HTML --&gt;\n&lt;header&gt;\n    &lt;nav aria-label=\"Main Navigation\"&gt;\n        &lt;ul&gt;\n            &lt;li&gt;&lt;a href=\"/\"&gt;Home&lt;/a&gt;&lt;/li&gt;\n        &lt;/ul&gt;\n    &lt;/nav&gt;\n&lt;/header&gt;\n\n&lt;main&gt;\n    &lt;article&gt;\n        &lt;h1&gt;Article Title&lt;/h1&gt;\n    &lt;/article&gt;\n&lt;/main&gt;\n\n&lt;footer&gt;\n    &lt;!-- Footer content --&gt;\n&lt;/footer&gt;\n\n&lt;!-- ARIA labels for accessibility --&gt;\n&lt;button aria-label=\"Close dialog\"&gt;X&lt;/button&gt;\n</code></pre>"},{"location":"wordpress/03-coding-conventions/#css-coding-standards","title":"CSS Coding Standards","text":""},{"location":"wordpress/03-coding-conventions/#css-formatting","title":"CSS Formatting","text":"<pre><code>/* Use lowercase and hyphens for selectors */\n.my-custom-class {\n    display: block;\n    margin: 0 auto;\n    padding: 10px 20px;\n}\n\n/* Property order: positioning, box model, typography, visual, misc */\n.my-element {\n    /* Positioning */\n    position: absolute;\n    top: 0;\n    left: 0;\n\n    /* Box model */\n    display: block;\n    width: 100%;\n    padding: 10px;\n    margin: 0;\n\n    /* Typography */\n    font-family: Arial, sans-serif;\n    font-size: 16px;\n    line-height: 1.5;\n\n    /* Visual */\n    background-color: #fff;\n    border: 1px solid #ddd;\n    color: #333;\n}\n\n/* Use shorthand properties when possible */\nmargin: 10px 20px;           /* top/bottom left/right */\npadding: 10px 15px 10px 15px; /* top right bottom left */\n\n/* Prefix classes with plugin/theme name */\n.myplugin-button { }\n.mytheme-header { }\n</code></pre>"},{"location":"wordpress/03-coding-conventions/#javascript-coding-standards","title":"JavaScript Coding Standards","text":""},{"location":"wordpress/03-coding-conventions/#javascript-formatting","title":"JavaScript Formatting","text":"<pre><code>// Use camelCase for variables and functions\nconst userName = 'John';\nconst postCount = 10;\n\nfunction getUserData() {\n    // Function code\n}\n\n// Use PascalCase for classes\nclass UserManager {\n    constructor() {\n        // Constructor code\n    }\n}\n\n// Use const and let, avoid var\nconst API_URL = 'https://api.example.com';\nlet counter = 0;\n\n// jQuery best practices\n(function($) {\n    'use strict';\n\n    $(document).ready(function() {\n        // DOM manipulation code\n        $('.my-button').on('click', function(e) {\n            e.preventDefault();\n            // Handle click\n        });\n    });\n})(jQuery);\n\n// Use WordPress translations in JavaScript\nwp.i18n.__('Hello World', 'text-domain');\n</code></pre>"},{"location":"wordpress/03-coding-conventions/#practical-exercises","title":"Practical Exercises","text":""},{"location":"wordpress/03-coding-conventions/#exercise-1-code-review","title":"Exercise 1: Code Review","text":"<p>Review the following code and identify issues:</p> <pre><code>&lt;?php\nfunction GetUserData($ID) {\n$data = $wpdb-&gt;get_results(\"SELECT * FROM wp_users WHERE ID = \" . $ID);\necho $data-&gt;user_name;\nreturn $data;\n}\n?&gt;\n</code></pre>"},{"location":"wordpress/03-coding-conventions/#exercise-2-refactor-code","title":"Exercise 2: Refactor Code","text":"<p>Refactor this code to follow WordPress standards:</p> <pre><code>&lt;?php\n$Title = $_POST['title'];\necho \"&lt;h1&gt;\" . $Title . \"&lt;/h1&gt;\";\n?&gt;\n</code></pre>"},{"location":"wordpress/03-coding-conventions/#exercise-3-security-audit","title":"Exercise 3: Security Audit","text":"<p>Identify security vulnerabilities in this code:</p> <pre><code>&lt;?php\nfunction my_save_data() {\n    $user_input = $_POST['data'];\n    update_option('my_option', $user_input);\n}\nadd_action('wp_ajax_save_data', 'my_save_data');\n?&gt;\n</code></pre>"},{"location":"wordpress/03-coding-conventions/#key-takeaways","title":"Key Takeaways","text":"<ol> <li>Always follow WordPress coding standards for consistency</li> <li>Use proper naming conventions with prefixes</li> <li>Sanitize input, escape output for security</li> <li>Use WordPress functions instead of PHP native functions</li> <li>Document your code with PHPDoc comments</li> <li>Validate user capabilities before sensitive operations</li> <li>Use prepared statements for database queries</li> <li>Make code translatable with i18n functions</li> <li>Use code quality tools like PHP_CodeSniffer</li> <li>Write accessible HTML with semantic markup</li> </ol>"},{"location":"wordpress/03-coding-conventions/#next-steps","title":"Next Steps","text":"<p>With coding conventions mastered, move on to Basic Plugin Development to start building your first WordPress plugin.</p> <p>Resources:</p> <ul> <li>WordPress Coding Standards</li> <li>WordPress PHP Coding Standards</li> <li>PHP_CodeSniffer</li> <li>WordPress Coding Standards for PHP_CodeSniffer</li> </ul>"},{"location":"wordpress/04-basic-plugin-development/","title":"Basic Plugin Development","text":"<p>Learn to create custom WordPress plugins from scratch, understanding hooks, actions, filters, and plugin architecture.</p>"},{"location":"wordpress/04-basic-plugin-development/#wordpress-plugin-development-study-plan","title":"WordPress Plugin Development Study Plan","text":"<p>This comprehensive 6-week study plan is based on the official WordPress Plugin Developer Handbook. Follow this structured approach to master plugin development.</p>"},{"location":"wordpress/04-basic-plugin-development/#table-of-contents","title":"Table of Contents","text":"<ul> <li>Week 1: Plugin Fundamentals</li> <li>Week 2: Hooks &amp; Security</li> <li>Week 3: Administration &amp; Content</li> <li>Week 4: Custom Content Types</li> <li>Week 5: Advanced Functionality</li> <li>Week 6: REST API, Cron &amp; Distribution</li> <li>Week 7: Final Project (Optional)</li> <li>Additional Resources</li> </ul>"},{"location":"wordpress/04-basic-plugin-development/#week-1-plugin-fundamentals","title":"Week 1: Plugin Fundamentals","text":""},{"location":"wordpress/04-basic-plugin-development/#day-1-2-introduction-setup","title":"Day 1-2: Introduction &amp; Setup","text":"<ul> <li>Introduction to Plugin Development</li> <li>What is a Plugin?</li> <li>Set up local development environment (Local, XAMPP, or Docker)</li> <li>Practice: Create your first \"Hello World\" plugin</li> </ul>"},{"location":"wordpress/04-basic-plugin-development/#day-3-4-plugin-basics","title":"Day 3-4: Plugin Basics","text":"<ul> <li>Header Requirements</li> <li>Best Practices</li> <li>Determining Plugin and Content Directories</li> <li>Practice: Create a plugin with proper structure and header</li> </ul>"},{"location":"wordpress/04-basic-plugin-development/#day-5-activation-deactivation","title":"Day 5: Activation &amp; Deactivation","text":"<ul> <li>Activation / Deactivation Hooks</li> <li>Uninstall Methods</li> <li>Practice: Add activation hook that creates options, deactivation that cleans up</li> </ul>"},{"location":"wordpress/04-basic-plugin-development/#day-6-7-weekend-project","title":"Day 6-7: Weekend Project","text":"<ul> <li>Create a \"Site Maintenance Mode\" plugin</li> <li>Include activation, deactivation, and uninstall functionality</li> <li>Add basic admin settings page</li> </ul>"},{"location":"wordpress/04-basic-plugin-development/#week-2-hooks-security","title":"Week 2: Hooks &amp; Security","text":""},{"location":"wordpress/04-basic-plugin-development/#day-1-2-understanding-hooks","title":"Day 1-2: Understanding Hooks","text":"<ul> <li>Hooks Overview</li> <li>Actions</li> <li>Filters</li> <li>Practice: Create plugins using 5 different action hooks and 5 filter hooks</li> </ul>"},{"location":"wordpress/04-basic-plugin-development/#day-3-custom-hooks","title":"Day 3: Custom Hooks","text":"<ul> <li>Custom Hooks</li> <li>Advanced Hook Topics</li> <li>Practice: Create a plugin with custom action and filter hooks</li> </ul>"},{"location":"wordpress/04-basic-plugin-development/#day-4-5-plugin-security","title":"Day 4-5: Plugin Security","text":"<ul> <li>Checking User Capabilities</li> <li>Data Validation</li> <li>Nonces</li> <li>Securing Output (Escaping)</li> <li>Securing Input (Sanitizing)</li> <li>Practice: Refactor previous plugins to add security measures</li> </ul>"},{"location":"wordpress/04-basic-plugin-development/#day-6-7-weekend-project_1","title":"Day 6-7: Weekend Project","text":"<ul> <li>Create a \"Custom Login Message\" plugin with settings page</li> <li>Implement all security best practices (nonces, sanitization, escaping, capabilities)</li> <li>Add proper validation and error handling</li> </ul>"},{"location":"wordpress/04-basic-plugin-development/#week-3-administration-content","title":"Week 3: Administration &amp; Content","text":""},{"location":"wordpress/04-basic-plugin-development/#day-1-2-administration-menus","title":"Day 1-2: Administration Menus","text":"<ul> <li>Administration Menus</li> <li>Top-Level Menus</li> <li>Sub-Menus</li> <li>Practice: Create plugin with custom admin menu and multiple sub-pages</li> </ul>"},{"location":"wordpress/04-basic-plugin-development/#day-3-shortcodes","title":"Day 3: Shortcodes","text":"<ul> <li>Shortcodes Overview</li> <li>Basic Shortcodes</li> <li>Enclosing Shortcodes</li> <li>Shortcodes with Parameters</li> <li>Practice: Create 3 different types of shortcodes (simple, with attributes, enclosing)</li> </ul>"},{"location":"wordpress/04-basic-plugin-development/#day-4-5-settings-options","title":"Day 4-5: Settings &amp; Options","text":"<ul> <li>Settings Overview</li> <li>Options API</li> <li>Settings API</li> <li>Using Settings API</li> <li>Practice: Create a plugin with comprehensive settings using Settings API</li> </ul>"},{"location":"wordpress/04-basic-plugin-development/#day-6-7-weekend-project_2","title":"Day 6-7: Weekend Project","text":"<ul> <li>Create a \"Team Members\" plugin with:</li> <li>Admin menu with settings page</li> <li>Multiple shortcodes for display</li> <li>Settings API for configuration</li> <li>Display options (grid, list, slider)</li> </ul>"},{"location":"wordpress/04-basic-plugin-development/#week-4-custom-content-types","title":"Week 4: Custom Content Types","text":""},{"location":"wordpress/04-basic-plugin-development/#day-1-2-metadata","title":"Day 1-2: Metadata","text":"<ul> <li>Metadata Overview</li> <li>Managing Post Metadata</li> <li>Custom Meta Boxes</li> <li>Rendering Post Metadata</li> <li>Practice: Add custom meta boxes to posts with various field types</li> </ul>"},{"location":"wordpress/04-basic-plugin-development/#day-3-4-custom-post-types","title":"Day 3-4: Custom Post Types","text":"<ul> <li>Custom Post Types</li> <li>Registering Custom Post Types</li> <li>Working with Custom Post Types</li> <li>Practice: Create \"Portfolio\" and \"FAQ\" custom post types with meta boxes</li> </ul>"},{"location":"wordpress/04-basic-plugin-development/#day-5-taxonomies","title":"Day 5: Taxonomies","text":"<ul> <li>Taxonomies Overview</li> <li>Working with Custom Taxonomies</li> <li>Practice: Add custom taxonomies to your custom post types</li> </ul>"},{"location":"wordpress/04-basic-plugin-development/#day-6-7-weekend-project_3","title":"Day 6-7: Weekend Project","text":"<ul> <li>Create a complete \"Book Library\" plugin:</li> <li>Custom post type \"Books\"</li> <li>Custom taxonomies: \"Genre\", \"Author\"</li> <li>Meta boxes: ISBN, Publisher, Year, Rating</li> <li>Admin columns showing custom data</li> <li>Shortcode to display book collection</li> </ul>"},{"location":"wordpress/04-basic-plugin-development/#week-5-advanced-functionality","title":"Week 5: Advanced Functionality","text":""},{"location":"wordpress/04-basic-plugin-development/#day-1-2-users-roles","title":"Day 1-2: Users &amp; Roles","text":"<ul> <li>Users Overview</li> <li>Roles and Capabilities</li> <li>Working with Users</li> <li>Working with User Metadata</li> <li>Practice: Create plugin that adds custom user roles and capabilities</li> </ul>"},{"location":"wordpress/04-basic-plugin-development/#day-3-http-api","title":"Day 3: HTTP API","text":"<ul> <li>HTTP API</li> <li>Practice: Create plugin that fetches data from external API</li> </ul>"},{"location":"wordpress/04-basic-plugin-development/#day-4-5-javascript-ajax","title":"Day 4-5: JavaScript &amp; AJAX","text":"<ul> <li>JavaScript Overview</li> <li>jQuery</li> <li>AJAX</li> <li>Server Side PHP and Enqueuing</li> <li>Practice: Create plugin with AJAX functionality (live search, form submission)</li> </ul>"},{"location":"wordpress/04-basic-plugin-development/#day-6-7-weekend-project_4","title":"Day 6-7: Weekend Project","text":"<ul> <li>Create a \"Weather Widget\" plugin:</li> <li>Fetch weather data from API</li> <li>AJAX-powered location search</li> <li>Custom widget</li> <li>Admin settings with Settings API</li> <li>Shortcode for display</li> </ul>"},{"location":"wordpress/04-basic-plugin-development/#week-6-rest-api-cron-distribution","title":"Week 6: REST API, Cron &amp; Distribution","text":""},{"location":"wordpress/04-basic-plugin-development/#day-1-3-rest-api","title":"Day 1-3: REST API","text":"<ul> <li>REST API Overview</li> <li>Routes &amp; Endpoints</li> <li>Requests</li> <li>Responses</li> <li>Schema</li> <li>Controller Classes</li> <li>Practice: Add REST API endpoints to your custom post type plugin</li> </ul>"},{"location":"wordpress/04-basic-plugin-development/#day-4-wp-cron","title":"Day 4: WP-Cron","text":"<ul> <li>Cron Overview</li> <li>Scheduling WP Cron Events</li> <li>Understanding WP-Cron Scheduling</li> <li>Practice: Create plugin with scheduled daily task</li> </ul>"},{"location":"wordpress/04-basic-plugin-development/#day-5-internationalization","title":"Day 5: Internationalization","text":"<ul> <li>Internationalization</li> <li>How to Internationalize Your Plugin</li> <li>Localization</li> <li>Practice: Make all your previous plugins translation-ready</li> </ul>"},{"location":"wordpress/04-basic-plugin-development/#day-6-privacy-database","title":"Day 6: Privacy &amp; Database","text":"<ul> <li>Privacy Overview</li> <li>Creating Tables with Plugins</li> <li>Practice: Add privacy exporters/erasers to user data plugins</li> </ul>"},{"location":"wordpress/04-basic-plugin-development/#day-7-publishing-maintenance","title":"Day 7: Publishing &amp; Maintenance","text":"<ul> <li>The WordPress.org Plugin Directory</li> <li>Detailed Plugin Guidelines</li> <li>Plugin Readmes</li> <li>How Your Plugin Assets Work</li> <li>Practice: Prepare one of your plugins for WordPress.org submission</li> </ul>"},{"location":"wordpress/04-basic-plugin-development/#final-project-week-7-optional","title":"Final Project (Week 7 - Optional)","text":"<p>Create a complete, production-ready plugin that combines everything learned:</p> <p>Project Ideas: 1. Event Management System    - Custom post type for events    - Custom fields for date, time, location, capacity    - Frontend event registration with AJAX    - Admin dashboard for managing registrations    - Email notifications using WP-Cron    - REST API endpoints    - Export functionality</p> <ol> <li>Review &amp; Rating System</li> <li>Add reviews to any post type</li> <li>Star rating system</li> <li>AJAX submission</li> <li>Moderation capabilities</li> <li>Email notifications</li> <li>REST API for retrieving reviews</li> <li> <p>Review widgets and shortcodes</p> </li> <li> <p>Custom Form Builder</p> </li> <li>Admin interface to create forms</li> <li>Multiple field types</li> <li>Form submissions storage</li> <li>Email notifications</li> <li>Export submissions to CSV</li> <li>AJAX form submission</li> <li>Shortcode for displaying forms</li> </ol>"},{"location":"wordpress/04-basic-plugin-development/#additional-resources","title":"Additional Resources","text":""},{"location":"wordpress/04-basic-plugin-development/#official-documentation","title":"Official Documentation","text":"<ul> <li>WordPress Plugin Developer Handbook</li> <li>WordPress Code Reference</li> <li>WordPress Coding Standards</li> </ul>"},{"location":"wordpress/04-basic-plugin-development/#developer-tools","title":"Developer Tools","text":"<ul> <li>Debug Bar</li> <li>Query Monitor</li> <li>WP-CLI</li> </ul>"},{"location":"wordpress/04-basic-plugin-development/#testing-best-practices","title":"Testing &amp; Best Practices","text":"<ul> <li>Plugin Unit Tests</li> <li>Plugin Security Guidelines</li> </ul>"},{"location":"wordpress/04-basic-plugin-development/#learning-path","title":"Learning Path","text":"<p>Follow the structured study plan above and refer to the official WordPress Plugin Developer Handbook for detailed documentation, code examples, and best practices for each topic.</p>"},{"location":"wordpress/05-basic-theme-development/","title":"Basic Theme Development","text":"<p>Learn to create modern WordPress block themes using Full Site Editing (FSE), understanding theme.json, block templates, patterns, and the future of WordPress theme development.</p>"},{"location":"wordpress/05-basic-theme-development/#wordpress-block-theme-development-study-plan","title":"WordPress Block Theme Development Study Plan","text":"<p>This comprehensive 6-week study plan focuses on Block Themes (Full Site Editing), the modern standard for WordPress theme development. Based on the official WordPress Theme Developer Handbook.</p> <p>Note: This plan focuses on modern Block Themes. For legacy Classic Theme development, see the Appendix at the end.</p>"},{"location":"wordpress/05-basic-theme-development/#table-of-contents","title":"Table of Contents","text":"<ul> <li>Week 1: Block Theme Fundamentals</li> <li>Week 2: Block Templates &amp; Template Parts</li> <li>Week 3: Block Patterns &amp; Style Variations</li> <li>Week 4: Advanced theme.json &amp; Customization</li> <li>Week 5: Query Loop, Navigation &amp; Dynamic Content</li> <li>Week 6: Performance, Accessibility &amp; Distribution</li> <li>Week 7: Final Project (Optional)</li> <li>Additional Resources</li> </ul>"},{"location":"wordpress/05-basic-theme-development/#week-1-block-theme-fundamentals","title":"Week 1: Block Theme Fundamentals","text":"<p>Goal: Understand what block themes are and create your first minimal block theme</p>"},{"location":"wordpress/05-basic-theme-development/#day-1-2-introduction-to-block-themes-fse","title":"Day 1-2: Introduction to Block Themes &amp; FSE","text":"<p>\ud83d\udcd6 Reading:</p> <ul> <li>What are Block Themes?</li> <li>Block Theme Overview</li> <li>Getting Started with FSE</li> <li>Block Theme Requirements</li> </ul> <p>\ud83d\udcbb Setup:</p> <ul> <li>Set up local development environment with WordPress 6.0+</li> <li>Install WordPress with block theme support</li> </ul> <p>\u270f\ufe0f Practice:</p> <ul> <li>Explore existing block themes (Twenty Twenty-Four, Twenty Twenty-Three)</li> <li>Navigate the Site Editor interface</li> <li>Understand the difference between block themes and classic themes</li> </ul>"},{"location":"wordpress/05-basic-theme-development/#day-3-4-themejson-the-core-configuration","title":"Day 3-4: theme.json - The Core Configuration","text":"<p>\ud83d\udcd6 Reading:</p> <ul> <li>theme.json Overview</li> <li>Global Settings</li> <li>Global Styles</li> <li>Color Palettes</li> <li>Typography Settings</li> <li>Spacing &amp; Layout</li> </ul> <p>\u270f\ufe0f Practice:</p> <ul> <li>Create a basic theme.json with custom colors</li> <li>Add custom font sizes and font families</li> <li>Configure spacing and layout settings</li> <li>Test your settings in the Site Editor</li> </ul>"},{"location":"wordpress/05-basic-theme-development/#day-5-minimum-block-theme-structure","title":"Day 5: Minimum Block Theme Structure","text":"<p>\ud83d\udcd6 Reading:</p> <ul> <li>Block Theme Setup</li> </ul> <p>\ud83d\udcc1 Required Files: <pre><code>my-theme/\n\u251c\u2500\u2500 style.css          (theme header)\n\u251c\u2500\u2500 theme.json         (configuration)\n\u251c\u2500\u2500 templates/\n\u2502   \u2514\u2500\u2500 index.html     (required template)\n\u2514\u2500\u2500 parts/             (template parts directory)\n</code></pre></p> <p>\u270f\ufe0f Practice:</p> <ul> <li>Create your first minimal block theme from scratch</li> <li>Add proper style.css header information</li> <li>Create a basic theme.json</li> <li>Build a simple index.html template</li> </ul>"},{"location":"wordpress/05-basic-theme-development/#day-6-7-weekend-project","title":"Day 6-7: Weekend Project","text":"<p>Project: Create a \"Minimal Blog\" block theme</p> <p>Requirements:</p> <ul> <li>\u2705 Proper style.css header with theme information</li> <li>\u2705 Complete theme.json with:</li> <li>Custom color palette (5+ colors)</li> <li>Typography settings (2+ font sizes)</li> <li>Spacing scale</li> <li>\u2705 Basic index.html template</li> <li>\u2705 Header template part (parts/header.html)</li> <li>\u2705 Footer template part (parts/footer.html)</li> <li>\u2705 Screenshot (1200x900px)</li> <li>\u2705 Basic documentation</li> </ul> <p>Deliverable: A working block theme that can be activated and displays a simple blog layout.</p>"},{"location":"wordpress/05-basic-theme-development/#week-2-block-templates-template-parts","title":"Week 2: Block Templates &amp; Template Parts","text":"<p>Goal: Master the template system and create a complete template hierarchy</p>"},{"location":"wordpress/05-basic-theme-development/#day-1-2-introduction-to-templates","title":"Day 1-2: Introduction to Templates","text":"<p>\ud83d\udcd6 Reading:</p> <ul> <li>Introduction to Templates</li> <li>Templates Overview</li> <li>Templates Documentation</li> </ul> <p>\ud83d\udcdd Topics:</p> <ul> <li>Understanding the template system</li> <li>How templates work in block themes</li> <li>Template file structure and naming conventions</li> </ul> <p>\ud83d\udcc1 Core Templates:</p> <ul> <li><code>index.html</code> (required - fallback for all views)</li> <li><code>home.html</code> (blog homepage)</li> <li><code>single.html</code> (single post)</li> <li><code>page.html</code> (static pages)</li> <li><code>archive.html</code> (archives)</li> <li><code>search.html</code> (search results)</li> <li><code>404.html</code> (not found page)</li> </ul> <p>\u270f\ufe0f Practice:</p> <ul> <li>Create all core templates using HTML and block markup</li> <li>Test each template by viewing different page types</li> <li>Understand when each template is used</li> </ul>"},{"location":"wordpress/05-basic-theme-development/#day-3-template-hierarchy","title":"Day 3: Template Hierarchy","text":"<p>\ud83d\udcd6 Reading:</p> <ul> <li>Template Hierarchy</li> </ul> <p>\ud83d\udcdd Topics:</p> <ul> <li>How WordPress chooses which template to use</li> <li>Template hierarchy for block themes vs classic themes</li> <li>Fallback templates</li> <li>Template specificity</li> </ul> <p>\ud83c\udfaf Specific Templates:</p> <ul> <li>Custom post types: <code>single-{post-type}.html</code></li> <li>Taxonomies: <code>taxonomy-{taxonomy}.html</code>, <code>category-{slug}.html</code></li> <li>Authors: <code>author-{nicename}.html</code></li> <li>Dates: <code>date.html</code></li> <li>Custom templates: templates with <code>Template Name</code> in comments</li> </ul> <p>\u270f\ufe0f Practice:</p> <ul> <li>Create a complete template hierarchy for a blog</li> <li>Test template hierarchy by creating different content types</li> <li>Create custom templates for specific categories</li> </ul>"},{"location":"wordpress/05-basic-theme-development/#day-4-5-template-parts","title":"Day 4-5: Template Parts","text":"<p>\ud83d\udcd6 Reading:</p> <ul> <li>Template Parts</li> <li>Creating Template Parts</li> <li>Template Part Block</li> </ul> <p>\ud83d\udcc1 Common Template Parts:</p> <ul> <li><code>parts/header.html</code> - Site header with logo and navigation</li> <li><code>parts/footer.html</code> - Site footer with copyright and links</li> <li><code>parts/sidebar.html</code> - Sidebar content</li> <li><code>parts/post-meta.html</code> - Post metadata (author, date, categories)</li> <li><code>parts/comments.html</code> - Comments section</li> </ul> <p>\ud83d\udcdd Topics:</p> <ul> <li>Creating reusable template parts</li> <li>Using template parts in templates</li> <li>Creating dynamic template parts</li> <li>Template part areas (header, footer, general)</li> </ul> <p>\u270f\ufe0f Practice:</p> <ul> <li>Create reusable template parts</li> <li>Use template parts across multiple templates</li> <li>Create variations of header/footer for different pages</li> </ul>"},{"location":"wordpress/05-basic-theme-development/#day-6-7-block-markup-weekend-project","title":"Day 6-7: Block Markup &amp; Weekend Project","text":"<p>\ud83d\udcd6 Day 6 Morning Reading:</p> <ul> <li>Block Markup</li> <li>Core Blocks Reference</li> </ul> <p>\ud83e\uddf1 Essential Structural Blocks:</p> <ul> <li>Site Blocks: Site Title, Site Logo, Site Tagline</li> <li>Navigation: Navigation Block</li> <li>Query Blocks: Query Loop, Post Template</li> <li>Post Blocks: Post Title, Post Content, Post Featured Image, Post Date, Post Author</li> <li>Layout Blocks: Group, Row, Stack, Columns</li> <li>Design Blocks: Cover, Spacer, Separator</li> </ul> <p>\u270f\ufe0f Practice:</p> <ul> <li>Build complex layouts using only core blocks</li> <li>Understand block attributes and customization</li> <li>Practice nesting blocks for complex structures</li> </ul> <p>Day 6-7: Weekend Project</p> <p>Project: Create a \"Portfolio Block Theme\"</p> <p>Requirements:</p> <ul> <li>\u2705 Complete template hierarchy:</li> <li>index.html</li> <li>home.html</li> <li>single.html</li> <li>page.html</li> <li>archive.html</li> <li>search.html</li> <li>404.html</li> <li>\u2705 Reusable template parts:</li> <li>Header with navigation</li> <li>Footer with social links</li> <li>Post meta</li> <li>\u2705 Archive template with Query Loop for posts</li> <li>\u2705 Single post template with post meta template part</li> <li>\u2705 Custom page template for portfolio showcase</li> <li>\u2705 All templates using proper block markup</li> <li>\u2705 Proper theme.json configuration</li> </ul> <p>Deliverable: A complete portfolio theme with full template hierarchy.</p>"},{"location":"wordpress/05-basic-theme-development/#week-3-block-patterns-style-variations","title":"Week 3: Block Patterns &amp; Style Variations","text":"<p>Goal: Create reusable block patterns and multiple style variations</p>"},{"location":"wordpress/05-basic-theme-development/#day-1-2-block-patterns","title":"Day 1-2: Block Patterns","text":"<p>\ud83d\udcd6 Reading:</p> <ul> <li>Block Patterns Overview</li> <li>Creating Block Patterns</li> <li>Registering Patterns</li> <li>Pattern Directory</li> </ul> <p>\ud83d\udcdd Topics:</p> <ul> <li>What are block patterns</li> <li>Pattern categories and organization</li> <li>Creating patterns in PHP</li> <li>Pattern best practices</li> </ul> <p>\ud83c\udfa8 Common Pattern Types:</p> <ul> <li>Hero sections</li> <li>Feature sections</li> <li>Testimonials</li> <li>Call-to-action (CTA)</li> <li>Footer layouts</li> <li>Contact sections</li> <li>Pricing tables</li> <li>Team member grids</li> </ul> <p>\u270f\ufe0f Practice:</p> <ul> <li>Create 5+ block patterns covering different use cases</li> <li>Register custom pattern categories</li> <li>Test patterns in the Site Editor</li> <li>Create pattern variations</li> </ul>"},{"location":"wordpress/05-basic-theme-development/#day-3-4-style-variations","title":"Day 3-4: Style Variations","text":"<p>\ud83d\udcd6 Reading:</p> <ul> <li>Style Variations</li> <li>Creating Style Variations</li> </ul> <p>\ud83d\udcc1 Style Variations Directory: <pre><code>my-theme/\n\u251c\u2500\u2500 theme.json\n\u2514\u2500\u2500 styles/\n    \u251c\u2500\u2500 light.json\n    \u251c\u2500\u2500 dark.json\n    \u2514\u2500\u2500 high-contrast.json\n</code></pre></p> <p>\ud83d\udcdd Topics:</p> <ul> <li>Creating style variations</li> <li>Color scheme variations</li> <li>Typography variations</li> <li>Spacing variations</li> <li>Testing style variations</li> </ul> <p>\u270f\ufe0f Practice:</p> <ul> <li>Create 3 style variations:</li> <li>Light theme (default)</li> <li>Dark theme</li> <li>High-contrast theme</li> <li>Test switching between variations in Site Editor</li> </ul>"},{"location":"wordpress/05-basic-theme-development/#day-5-custom-block-styles","title":"Day 5: Custom Block Styles","text":"<p>\ud83d\udcd6 Reading:</p> <ul> <li>Block Styles</li> <li>Registering Block Styles</li> </ul> <p>\ud83d\udcdd Topics:</p> <ul> <li>Creating custom block styles</li> <li>Registering block styles via functions.php</li> <li>Adding custom CSS for block variations</li> <li>Block style best practices</li> </ul> <p>\u270f\ufe0f Practice:</p> <ul> <li>Create custom styles for core blocks</li> <li>Register block styles programmatically</li> <li>Add custom CSS for block style variations</li> </ul>"},{"location":"wordpress/05-basic-theme-development/#day-6-7-weekend-project_1","title":"Day 6-7: Weekend Project","text":"<p>Project: Create a \"Business Block Theme\"</p> <p>Requirements:</p> <ul> <li>\u2705 10+ Block Patterns:</li> <li>Header variations (3)</li> <li>Hero sections (2)</li> <li>Services section</li> <li>About section</li> <li>Team member grid</li> <li>Pricing table</li> <li>Testimonials</li> <li>Call-to-action</li> <li>Contact form layout</li> <li>Footer variations (2)</li> <li>\u2705 3 Style Variations:</li> <li>Light (default)</li> <li>Dark</li> <li>Professional (high-contrast)</li> <li>\u2705 Custom Block Styles:</li> <li>Button variations</li> <li>Heading styles</li> <li>Group/Cover styles</li> <li>\u2705 Pattern categories organized logically</li> <li>\u2705 Complete pattern library documentation</li> </ul> <p>Deliverable: A business theme with extensive pattern library and style options.</p>"},{"location":"wordpress/05-basic-theme-development/#week-4-advanced-themejson-customization","title":"Week 4: Advanced theme.json &amp; Customization","text":"<p>Goal: Master advanced theme.json features and per-block customization</p>"},{"location":"wordpress/05-basic-theme-development/#day-1-2-advanced-themejson-features","title":"Day 1-2: Advanced theme.json Features","text":"<p>\ud83d\udcd6 Reading:</p> <ul> <li>theme.json Schema</li> <li>Custom CSS Properties</li> <li>appearanceTools</li> <li>useRootPaddingAwareAlignments</li> <li>Fluid Typography</li> <li>Responsive Spacing</li> </ul> <p>\ud83d\udcdd Advanced Topics:</p> <ul> <li>Fluid typography system</li> <li>Responsive spacing scales</li> <li>Custom CSS properties in theme.json</li> <li>Root padding aware alignments</li> <li>Appearance tools</li> </ul> <p>\u270f\ufe0f Practice:</p> <ul> <li>Implement fluid typography with min/max values</li> <li>Create responsive spacing scales</li> <li>Use custom CSS properties</li> <li>Enable appearance tools globally</li> </ul>"},{"location":"wordpress/05-basic-theme-development/#day-3-4-custom-block-settings-per-block","title":"Day 3-4: Custom Block Settings Per Block","text":"<p>\ud83d\udcd6 Reading:</p> <ul> <li>Block-specific Settings</li> </ul> <p>\ud83d\udcdd Topics:</p> <ul> <li>Customizing individual blocks via theme.json</li> <li>Enabling/disabling features per block</li> <li>Block-specific color palettes</li> <li>Block-specific typography</li> <li>Block-specific spacing</li> </ul> <p>\ud83d\udd27 Per-Block Customization: <pre><code>{\n  \"settings\": {\n    \"blocks\": {\n      \"core/heading\": {\n        \"color\": { \"palette\": [...] },\n        \"typography\": { \"fontSizes\": [...] }\n      }\n    }\n  }\n}\n</code></pre></p> <p>\u270f\ufe0f Practice:</p> <ul> <li>Configure different settings for different blocks</li> <li>Disable specific features for certain blocks</li> <li>Create block-specific color palettes</li> </ul>"},{"location":"wordpress/05-basic-theme-development/#day-5-functionsphp-in-block-themes","title":"Day 5: Functions.php in Block Themes","text":"<p>\ud83d\udcd6 Reading:</p> <ul> <li>functions.php for Block Themes</li> </ul> <p>\ud83d\udcdd Topics:</p> <ul> <li>Theme support declarations</li> <li>Enqueuing editor styles</li> <li>Custom fonts registration</li> <li>Block pattern categories</li> <li>Block styles registration</li> <li>Asset enqueuing</li> </ul> <p>\u2699\ufe0f Common Functions: <pre><code>// Theme setup\nadd_action('after_setup_theme', 'theme_setup');\n\n// Enqueue scripts and styles\nadd_action('wp_enqueue_scripts', 'theme_scripts');\n\n// Register block patterns\nregister_block_pattern_category();\n\n// Register block styles\nregister_block_style();\n</code></pre></p> <p>\u270f\ufe0f Practice:</p> <ul> <li>Add essential functions.php configurations</li> <li>Register custom pattern categories</li> <li>Enqueue custom fonts</li> <li>Add editor styles</li> </ul>"},{"location":"wordpress/05-basic-theme-development/#day-6-7-weekend-project_2","title":"Day 6-7: Weekend Project","text":"<p>Project: Create a \"Magazine Block Theme\"</p> <p>Requirements:</p> <ul> <li>\u2705 Advanced theme.json:</li> <li>Fluid typography system</li> <li>Responsive spacing scales</li> <li>Custom CSS properties</li> <li>Appearance tools enabled</li> <li>useRootPaddingAwareAlignments</li> <li>\u2705 Block-specific customizations:</li> <li>Heading-specific typography</li> <li>Button-specific colors</li> <li>Cover block settings</li> <li>\u2705 Custom fonts:</li> <li>Google Fonts integration</li> <li>Web font loading optimization</li> <li>\u2705 Editor styles:</li> <li>Editor stylesheet that matches frontend</li> <li>\u2705 Custom pattern categories:</li> <li>Editorial patterns</li> <li>Featured content</li> <li>Ad spaces</li> <li>\u2705 Optimized for readability and performance</li> </ul> <p>Deliverable: A magazine theme with advanced theme.json configuration.</p>"},{"location":"wordpress/05-basic-theme-development/#week-5-query-loop-navigation-dynamic-content","title":"Week 5: Query Loop, Navigation &amp; Dynamic Content","text":"<p>Goal: Master dynamic content display and navigation systems</p>"},{"location":"wordpress/05-basic-theme-development/#day-1-2-query-loop-block-mastery","title":"Day 1-2: Query Loop Block Mastery","text":"<p>\ud83d\udcd6 Reading:</p> <ul> <li>Query Loop Block</li> <li>Post Template Block</li> </ul> <p>\ud83d\udcdd Topics:</p> <ul> <li>Understanding the Query Loop block</li> <li>Custom query parameters</li> <li>Pagination patterns</li> <li>Multiple query loops on one page</li> <li>Filtering by taxonomy</li> <li>Filtering by custom fields</li> </ul> <p>\ud83d\udd0d Query Parameters:</p> <ul> <li>Post type</li> <li>Number of posts</li> <li>Order by</li> <li>Taxonomy queries</li> <li>Author queries</li> <li>Date queries</li> <li>Sticky posts</li> </ul> <p>\u270f\ufe0f Practice:</p> <ul> <li>Create complex archive layouts with Query Loop</li> <li>Build featured posts section</li> <li>Create category-specific query loops</li> <li>Implement pagination</li> <li>Display related posts</li> </ul>"},{"location":"wordpress/05-basic-theme-development/#day-3-navigation-block-menus","title":"Day 3: Navigation Block &amp; Menus","text":"<p>\ud83d\udcd6 Reading:</p> <ul> <li>Navigation Block</li> <li>Creating Menus in FSE</li> </ul> <p>\ud83d\udcdd Topics:</p> <ul> <li>Navigation block features</li> <li>Creating responsive navigation</li> <li>Building mega menus with patterns</li> <li>Footer menus</li> <li>Social navigation</li> <li>Mobile menu patterns</li> </ul> <p>\ud83e\udded Navigation Types:</p> <ul> <li>Primary navigation</li> <li>Footer navigation</li> <li>Social links</li> <li>Breadcrumbs</li> <li>Pagination</li> </ul> <p>\u270f\ufe0f Practice:</p> <ul> <li>Build responsive header with navigation</li> <li>Create mobile menu pattern</li> <li>Build mega menu with patterns</li> <li>Create footer menu with social links</li> </ul>"},{"location":"wordpress/05-basic-theme-development/#day-4-5-dynamic-blocks-custom-post-types","title":"Day 4-5: Dynamic Blocks &amp; Custom Post Types","text":"<p>\ud83d\udcd6 Reading:</p> <ul> <li>Custom Post Type Support</li> </ul> <p>\ud83d\udcdd Topics:</p> <ul> <li>Creating templates for custom post types</li> <li>Custom archive pages</li> <li>Custom taxonomies in block themes</li> <li>Query Loop with custom post types</li> <li>Single custom post type templates</li> </ul> <p>\u2699\ufe0f Implementation:</p> <pre><code>// Register custom post type\nregister_post_type('portfolio');\n\n// Register custom taxonomy\nregister_taxonomy('project-type', 'portfolio');\n</code></pre> <p>\ud83d\udcc1 Template Files:</p> <ul> <li><code>single-portfolio.html</code></li> <li><code>archive-portfolio.html</code></li> <li><code>taxonomy-project-type.html</code></li> </ul> <p>\u270f\ufe0f Practice:</p> <ul> <li>Create templates and patterns for portfolio custom post type</li> <li>Build custom archive with Query Loop</li> <li>Create custom taxonomy templates</li> <li>Add custom fields display</li> </ul>"},{"location":"wordpress/05-basic-theme-development/#day-6-7-weekend-project_3","title":"Day 6-7: Weekend Project","text":"<p>Project: Create an \"E-Commerce Block Theme\"</p> <p>Requirements:</p> <ul> <li>\u2705 WooCommerce Support:</li> <li>theme.json with WooCommerce settings</li> <li>functions.php with WooCommerce declarations</li> <li>\u2705 Product Templates:</li> <li>Product archive with Query Loop</li> <li>Single product template</li> <li>Product categories template</li> <li>\u2705 Shopping Patterns:</li> <li>Shopping cart page pattern</li> <li>Checkout page patterns</li> <li>Account page patterns</li> <li>\u2705 Multiple Navigation:</li> <li>Primary navigation with cart icon</li> <li>Footer navigation</li> <li>Mobile menu</li> <li>Product categories menu</li> <li>\u2705 Responsive mega menu with product categories</li> <li>\u2705 Full Query Loop implementation for products</li> </ul> <p>Deliverable: A complete e-commerce theme with WooCommerce integration.</p>"},{"location":"wordpress/05-basic-theme-development/#week-6-performance-accessibility-distribution","title":"Week 6: Performance, Accessibility &amp; Distribution","text":"<p>Goal: Optimize theme for performance, accessibility, and prepare for distribution</p>"},{"location":"wordpress/05-basic-theme-development/#day-1-2-performance-optimization","title":"Day 1-2: Performance Optimization","text":"<p>\ud83d\udcd6 Reading:</p> <ul> <li>Performance Best Practices</li> </ul> <p>\ud83d\udcdd Topics:</p> <ul> <li>Optimizing theme.json</li> <li>Reducing CSS output</li> <li>Font loading strategies</li> <li>Image optimization</li> <li>Core Web Vitals optimization</li> <li>Lazy loading</li> <li>Caching strategies</li> </ul> <p>\u26a1 Performance Checklist:</p> <ul> <li>\u2705 Optimize CSS delivery</li> <li>\u2705 Minimize JavaScript</li> <li>\u2705 Optimize web fonts</li> <li>\u2705 Implement lazy loading</li> <li>\u2705 Optimize images</li> <li>\u2705 Reduce HTTP requests</li> <li>\u2705 Test Core Web Vitals</li> </ul> <p>\u270f\ufe0f Practice:</p> <ul> <li>Audit theme performance with Lighthouse</li> <li>Optimize font loading</li> <li>Reduce CSS output</li> <li>Test on slow connections</li> </ul>"},{"location":"wordpress/05-basic-theme-development/#day-3-accessibility-in-block-themes","title":"Day 3: Accessibility in Block Themes","text":"<p>\ud83d\udcd6 Reading:</p> <ul> <li>Accessibility</li> <li>ARIA Labels</li> </ul> <p>\ud83d\udcdd Topics:</p> <ul> <li>WCAG 2.1 AA compliance</li> <li>Keyboard navigation</li> <li>Screen reader compatibility</li> <li>Color contrast requirements</li> <li>Skip links and landmarks</li> <li>Focus management</li> <li>ARIA labels</li> </ul> <p>\u267f Accessibility Checklist:</p> <ul> <li>\u2705 Proper heading hierarchy</li> <li>\u2705 Keyboard navigation</li> <li>\u2705 Color contrast (4.5:1 minimum)</li> <li>\u2705 Alt text for images</li> <li>\u2705 ARIA labels where needed</li> <li>\u2705 Skip to content link</li> <li>\u2705 Focus indicators</li> <li>\u2705 Screen reader testing</li> </ul> <p>\u270f\ufe0f Practice:</p> <ul> <li>Make theme fully accessibility-ready</li> <li>Test with screen readers</li> <li>Test keyboard navigation</li> <li>Check color contrast</li> <li>Validate HTML</li> </ul>"},{"location":"wordpress/05-basic-theme-development/#day-4-internationalization-localization","title":"Day 4: Internationalization &amp; Localization","text":"<p>\ud83d\udcd6 Reading:</p> <ul> <li>Internationalization</li> </ul> <p>\ud83d\udcdd Topics:</p> <ul> <li>Translating theme.json strings</li> <li>RTL (Right-to-Left) support</li> <li>Translation-ready patterns</li> <li>Text domains</li> <li>Translation functions</li> </ul> <p>\ud83c\udf10 i18n Implementation: <pre><code>{\n  \"title\": \"Dark\",\n  \"$schema\": \"https://schemas.wp.org/trunk/theme.json\",\n  \"version\": 2\n}\n</code></pre></p> <p>RTL Support: <pre><code>body.rtl {\n  direction: rtl;\n  text-align: right;\n}\n</code></pre></p> <p>\u270f\ufe0f Practice:</p> <ul> <li>Make theme fully translation-ready</li> <li>Implement RTL support</li> <li>Test with different languages</li> <li>Create .pot file</li> </ul>"},{"location":"wordpress/05-basic-theme-development/#day-5-theme-testing-debugging","title":"Day 5: Theme Testing &amp; Debugging","text":"<p>\ud83d\udcd6 Reading:</p> <ul> <li>Theme Unit Test</li> <li>Theme Check Plugin</li> </ul> <p>\ud83d\udcdd Topics:</p> <ul> <li>Theme unit testing</li> <li>Testing across different content types</li> <li>Browser testing</li> <li>Responsive testing</li> <li>Debugging techniques</li> </ul> <p>\ud83e\uddea Testing Checklist:</p> <ul> <li>\u2705 Theme Check plugin passes</li> <li>\u2705 Theme Unit Test data displays correctly</li> <li>\u2705 All templates work properly</li> <li>\u2705 Responsive on all devices</li> <li>\u2705 Cross-browser testing</li> <li>\u2705 Performance testing</li> <li>\u2705 Accessibility testing</li> <li>\u2705 i18n/RTL testing</li> </ul> <p>\u270f\ufe0f Practice:</p> <ul> <li>Complete full theme testing checklist</li> <li>Fix any issues found</li> <li>Document known limitations</li> </ul>"},{"location":"wordpress/05-basic-theme-development/#day-6-7-distribution-wordpressorg-submission","title":"Day 6-7: Distribution &amp; WordPress.org Submission","text":"<p>\ud83d\udcd6 Reading:</p> <ul> <li>Theme Review Requirements</li> <li>Preparing Theme for Submission</li> </ul> <p>\ud83d\udcdd Topics:</p> <ul> <li>Theme review guidelines</li> <li>Creating theme screenshots</li> <li>Writing theme documentation (readme.txt)</li> <li>Theme licensing (GPL)</li> <li>Versioning strategy</li> <li>Changelog maintenance</li> </ul> <p>\ud83d\udce6 Submission Requirements:</p> <ul> <li>\u2705 Valid theme.json</li> <li>\u2705 Proper style.css header</li> <li>\u2705 Screenshot (1200x900px)</li> <li>\u2705 readme.txt file</li> <li>\u2705 GPL-compatible license</li> <li>\u2705 No errors or warnings</li> <li>\u2705 Accessibility ready</li> <li>\u2705 Passes Theme Check</li> <li>\u2705 Translation ready</li> <li>\u2705 Documentation included</li> </ul> <p>\ud83d\udcc4 readme.txt Template: <pre><code>=== Theme Name ===\nContributors: username\nRequires at least: 6.0\nTested up to: 6.4\nRequires PHP: 7.4\nLicense: GPLv2 or later\nLicense URI: http://www.gnu.org/licenses/gpl-2.0.html\n\n== Description ==\n[Theme description]\n\n== Installation ==\n[Installation instructions]\n\n== Changelog ==\n= 1.0.0 =\n* Initial release\n</code></pre></p> <p>\u270f\ufe0f Practice:</p> <ul> <li>Prepare complete submission package</li> <li>Write comprehensive readme.txt</li> <li>Create screenshots</li> <li>Create demo content</li> <li>Document theme features</li> </ul>"},{"location":"wordpress/05-basic-theme-development/#final-project-week-7-optional","title":"Final Project (Week 7 - Optional)","text":"<p>Goal: Create a complete, production-ready block theme</p> <p>Create a complete, production-ready block theme that combines everything learned:</p>"},{"location":"wordpress/05-basic-theme-development/#project-option-1-multi-purpose-block-theme","title":"Project Option 1: Multi-Purpose Block Theme","text":"<p>Requirements:</p> <ul> <li>\u2705 20+ Block Patterns covering all use cases:</li> <li>Headers (3 variations)</li> <li>Heroes (3 variations)</li> <li>Services/Features (3 variations)</li> <li>About sections (2 variations)</li> <li>Team members (2 variations)</li> <li>Testimonials (2 variations)</li> <li>Pricing tables (2 variations)</li> <li>Call-to-action (2 variations)</li> <li>Contact forms (2 variations)</li> <li>Footers (3 variations)</li> <li>\u2705 5+ Style Variations:</li> <li>Default</li> <li>Dark</li> <li>Professional</li> <li>Creative</li> <li>Minimalist</li> <li>\u2705 Complete Page Templates:</li> <li>Homepage</li> <li>About page</li> <li>Services page</li> <li>Portfolio page</li> <li>Contact page</li> <li>Blog page</li> <li>\u2705 WooCommerce Compatibility</li> <li>\u2705 Accessibility Ready (WCAG 2.1 AA)</li> <li>\u2705 RTL Support</li> <li>\u2705 Optimized for Core Web Vitals</li> <li>\u2705 Full Documentation</li> </ul>"},{"location":"wordpress/05-basic-theme-development/#project-option-2-creative-agency-block-theme","title":"Project Option 2: Creative Agency Block Theme","text":"<p>Requirements:</p> <ul> <li>\u2705 Portfolio System:</li> <li>Custom post type for portfolio</li> <li>Portfolio templates</li> <li>Portfolio archive with filtering</li> <li>Single project template</li> <li>Case study layout</li> <li>\u2705 Team &amp; Services:</li> <li>Team member patterns</li> <li>Service showcase patterns</li> <li>Client logo patterns</li> <li>Testimonial patterns</li> <li>\u2705 Dynamic Features:</li> <li>Project filtering by category</li> <li>Related projects</li> <li>Newsletter integration patterns</li> <li>Contact form patterns</li> <li>\u2705 Visual Polish:</li> <li>Smooth CSS animations</li> <li>Hover effects</li> <li>Parallax sections</li> <li>Video backgrounds</li> <li>\u2705 Performance Optimized</li> <li>\u2705 Fully Accessible</li> </ul>"},{"location":"wordpress/05-basic-theme-development/#project-option-3-blog-content-creator-theme","title":"Project Option 3: Blog &amp; Content Creator Theme","text":"<p>Requirements:</p> <ul> <li>\u2705 Multiple Blog Layouts:</li> <li>Standard blog layout</li> <li>Grid layout</li> <li>Featured posts section</li> <li>Magazine-style homepage</li> <li>\u2705 Content Features:</li> <li>Author bio patterns</li> <li>Related posts patterns</li> <li>Table of contents block</li> <li>Reading time indicator</li> <li>Post series support</li> <li>\u2705 Engagement:</li> <li>Social sharing patterns</li> <li>Newsletter subscription patterns</li> <li>Comment patterns</li> <li>Breadcrumb navigation</li> <li>\u2705 Monetization:</li> <li>Ad space patterns</li> <li>Affiliate disclosure patterns</li> <li>Sponsored post layouts</li> <li>\u2705 SEO Optimized</li> <li>\u2705 Performance Optimized</li> <li>\u2705 Accessibility Ready</li> </ul>"},{"location":"wordpress/05-basic-theme-development/#additional-resources","title":"Additional Resources","text":""},{"location":"wordpress/05-basic-theme-development/#official-documentation","title":"Official Documentation","text":"<ul> <li>WordPress Theme Developer Handbook - Complete theme development guide</li> <li>Block Editor Handbook - Block editor documentation</li> <li>theme.json Reference - Complete theme.json schema</li> <li>Block Theme Documentation - Block theme specific docs</li> </ul>"},{"location":"wordpress/05-basic-theme-development/#block-theme-tools","title":"Block Theme Tools","text":"<ul> <li>Create Block Theme Plugin - Essential tool for FSE development</li> <li>Theme Check Plugin - Validate theme code</li> <li>Query Monitor - Debug queries and performance</li> </ul>"},{"location":"wordpress/05-basic-theme-development/#block-theme-examples","title":"Block Theme Examples","text":"<ul> <li>Twenty Twenty-Four - Latest default theme</li> <li>Twenty Twenty-Three - Previous default theme</li> <li>Block Theme Directory - Browse all block themes</li> </ul>"},{"location":"wordpress/05-basic-theme-development/#learning-resources","title":"Learning Resources","text":"<ul> <li>Full Site Editing Course - Official FSE course</li> <li>Block Pattern Directory - Inspiration and examples</li> <li>WordPress TV - FSE Tutorials - Video tutorials</li> </ul>"},{"location":"wordpress/05-basic-theme-development/#design-inspiration","title":"Design &amp; Inspiration","text":"<ul> <li>WordPress Pattern Directory - Pre-made patterns</li> <li>Block Theme Showcase - Theme gallery</li> <li>Openverse - Free CC-licensed images</li> </ul>"},{"location":"wordpress/05-basic-theme-development/#testing-validation","title":"Testing &amp; Validation","text":"<ul> <li>Theme Unit Test Data - Test data import</li> <li>Accessibility Checker - A11y validation</li> <li>Wave Accessibility Tool - Online accessibility checker</li> <li>Google Lighthouse - Performance testing</li> </ul>"},{"location":"wordpress/05-basic-theme-development/#appendix-classic-themes-legacy","title":"Appendix: Classic Themes (Legacy)","text":"<p>\u26a0\ufe0f Note: Classic themes are legacy. Learn these only if you need to maintain existing classic themes.</p>"},{"location":"wordpress/05-basic-theme-development/#classic-theme-basics","title":"Classic Theme Basics","text":"<p>\ud83d\udcd6 Essential Reading:</p> <ul> <li>Classic Theme Structure</li> <li>Template Files (PHP)</li> <li>Template Hierarchy</li> <li>The Loop</li> <li>Template Tags</li> </ul>"},{"location":"wordpress/05-basic-theme-development/#classic-theme-features","title":"Classic Theme Features","text":"<p>\ud83d\udcd6 Additional Topics:</p> <ul> <li>Theme Customizer API</li> <li>Widgets</li> <li>Sidebars</li> <li>Navigation Menus</li> </ul>"},{"location":"wordpress/05-basic-theme-development/#resources","title":"Resources","text":"<ul> <li>Underscores (_s) - Classic theme starter</li> <li>Classic Theme Documentation - Full classic theme guide</li> </ul>"},{"location":"wordpress/05-basic-theme-development/#learning-path","title":"Learning Path","text":"<p>Follow the structured study plan above and refer to the official WordPress Block Theme Documentation for detailed information, examples, and best practices.</p>"},{"location":"wordpress/05-basic-theme-development/#key-points","title":"Key Points","text":"<ol> <li>Start with Block Themes - They represent the future of WordPress</li> <li>Practice Regularly - Build projects after each week</li> <li>Use Official Resources - WordPress documentation is comprehensive</li> <li>Join the Community - Learn WordPress Slack, Make WordPress</li> <li>Stay Updated - WordPress evolves rapidly with new features</li> </ol>"},{"location":"wordpress/05-basic-theme-development/#success-metrics","title":"Success Metrics","text":"<p>By completing this study plan, you should be able to:</p> <ul> <li>\u2705 Create production-ready block themes from scratch</li> <li>\u2705 Master theme.json configuration</li> <li>\u2705 Build complex layouts with blocks</li> <li>\u2705 Create reusable patterns and style variations</li> <li>\u2705 Optimize themes for performance and accessibility</li> <li>\u2705 Submit themes to WordPress.org</li> <li>\u2705 Understand the modern WordPress ecosystem</li> </ul> <p>\ud83d\ude80 Ready to start? Begin with Week 1: Block Theme Fundamentals</p> <p>Important: Block themes represent the future of WordPress theme development. Focus on mastering block themes first, then learn classic themes only if you need to maintain legacy projects.</p>"},{"location":"wordpress/06-rest-api/","title":"WordPress REST API","text":"<p>Learn to interact with WordPress data using the REST API, create custom endpoints, and build headless WordPress applications.</p>"},{"location":"wordpress/06-rest-api/#wordpress-rest-api-study-plan","title":"WordPress REST API Study Plan","text":"<p>This comprehensive 3-week study plan is based on the official WordPress REST API Handbook. Follow this structured approach to master the WordPress REST API.</p>"},{"location":"wordpress/06-rest-api/#table-of-contents","title":"Table of Contents","text":"<ul> <li>Week 1: REST API Fundamentals</li> <li>Week 2: Using the REST API</li> <li>Week 3: Extending the REST API</li> <li>Additional Resources</li> </ul>"},{"location":"wordpress/06-rest-api/#week-1-rest-api-fundamentals","title":"Week 1: REST API Fundamentals","text":"<p>Goal: Understand what REST APIs are and how the WordPress REST API works</p>"},{"location":"wordpress/06-rest-api/#day-1-introduction-to-rest-api","title":"Day 1: Introduction to REST API","text":"<p>\ud83d\udcd6 Reading:</p> <ul> <li>REST API Handbook</li> <li>What Is A REST API?</li> <li>Key Concepts</li> </ul> <p>\ud83d\udcdd Topics:</p> <ul> <li>What is REST (REpresentational State Transfer)</li> <li>JSON (JavaScript Object Notation) format</li> <li>HTTP methods (GET, POST, PUT, DELETE)</li> <li>How WordPress REST API works</li> <li>REST API vs other WordPress APIs</li> </ul> <p>\u270f\ufe0f Practice:</p> <ul> <li>Access your site's REST API root: <code>https://yoursite.com/wp-json/</code></li> <li>Explore available endpoints</li> <li>View JSON responses in browser or Postman</li> </ul>"},{"location":"wordpress/06-rest-api/#day-2-api-structure-resources","title":"Day 2: API Structure &amp; Resources","text":"<p>\ud83d\udcd6 Reading:</p> <ul> <li>Reference Overview</li> </ul> <p>\ud83d\udcdd Core Resources:</p> <ul> <li>Posts (<code>/wp/v2/posts</code>)</li> <li>Pages (<code>/wp/v2/pages</code>)</li> <li>Categories (<code>/wp/v2/categories</code>)</li> <li>Tags (<code>/wp/v2/tags</code>)</li> <li>Users (<code>/wp/v2/users</code>)</li> <li>Comments (<code>/wp/v2/comments</code>)</li> <li>Media (<code>/wp/v2/media</code>)</li> </ul> <p>\u270f\ufe0f Practice:</p> <ul> <li>Test each core endpoint using browser or cURL</li> <li>Understand the JSON structure of responses</li> <li>Identify common fields across resources</li> </ul>"},{"location":"wordpress/06-rest-api/#day-3-discovery-global-parameters","title":"Day 3: Discovery &amp; Global Parameters","text":"<p>\ud83d\udcd6 Reading:</p> <ul> <li>Discovery</li> <li>Global Parameters</li> </ul> <p>\ud83d\udcdd Topics:</p> <ul> <li>API discovery mechanism</li> <li><code>_fields</code> parameter (field filtering)</li> <li><code>context</code> parameter (view, embed, edit)</li> <li><code>_embed</code> parameter (embedding resources)</li> <li>Error responses and status codes</li> </ul> <p>\u270f\ufe0f Practice:</p> <ul> <li>Use <code>_fields</code> to request specific fields only</li> <li>Test different <code>context</code> values</li> <li>Use <code>_embed</code> to include related resources</li> <li>Handle error responses</li> </ul>"},{"location":"wordpress/06-rest-api/#day-4-5-pagination-linking","title":"Day 4-5: Pagination &amp; Linking","text":"<p>\ud83d\udcd6 Reading:</p> <ul> <li>Pagination</li> <li>Linking and Embedding</li> </ul> <p>\ud83d\udcdd Topics:</p> <ul> <li>Pagination parameters (<code>per_page</code>, <code>page</code>)</li> <li>Pagination headers (<code>X-WP-Total</code>, <code>X-WP-TotalPages</code>)</li> <li>HATEOAS (Hypermedia as the Engine of Application State)</li> <li><code>_links</code> in responses</li> <li>Embedded resources</li> </ul> <p>\ud83d\udd0d Pagination Parameters:</p> <ul> <li><code>per_page</code> - Number of items per request (max 100)</li> <li><code>page</code> - Current page number</li> <li><code>offset</code> - Number of items to skip</li> <li><code>orderby</code> - Field to sort by</li> <li><code>order</code> - Sort direction (asc/desc)</li> </ul> <p>\u270f\ufe0f Practice:</p> <ul> <li>Implement pagination in API requests</li> <li>Parse pagination headers</li> <li>Use <code>_embed</code> for efficient data fetching</li> <li>Navigate through <code>_links</code> relationships</li> </ul>"},{"location":"wordpress/06-rest-api/#day-6-7-weekend-project","title":"Day 6-7: Weekend Project","text":"<p>Project: Create a \"Blog Post Viewer\" web page</p> <p>Requirements:</p> <ul> <li>\u2705 Fetch and display posts from WordPress REST API</li> <li>\u2705 Implement pagination (next/previous)</li> <li>\u2705 Show post title, excerpt, date, author</li> <li>\u2705 Display featured image using <code>_embed</code></li> <li>\u2705 Filter by category or tag</li> <li>\u2705 Handle loading and error states</li> <li>\u2705 Use vanilla JavaScript or your preferred framework</li> </ul> <p>Deliverable: A working web page that consumes WordPress REST API data.</p>"},{"location":"wordpress/06-rest-api/#week-2-using-the-rest-api","title":"Week 2: Using the REST API","text":"<p>Goal: Master API authentication, querying, and client-side implementation</p>"},{"location":"wordpress/06-rest-api/#day-1-2-authentication","title":"Day 1-2: Authentication","text":"<p>\ud83d\udcd6 Reading:</p> <ul> <li>Authentication</li> <li>Application Passwords</li> </ul> <p>\ud83d\udcdd Authentication Methods:</p> <ul> <li>Cookie Authentication - For same-origin requests</li> <li>Application Passwords - For external applications</li> <li>OAuth Authentication - For third-party apps</li> <li>JWT (JSON Web Tokens) - Via plugins</li> </ul> <p>\u2699\ufe0f Cookie Authentication: <pre><code>// Add nonce to requests\nfetch('/wp-json/wp/v2/posts', {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n    'X-WP-Nonce': wpApiSettings.nonce\n  },\n  body: JSON.stringify({\n    title: 'My Post',\n    content: 'Post content',\n    status: 'publish'\n  })\n});\n</code></pre></p> <p>\ud83d\udd10 Application Passwords: <pre><code># Basic Auth with Application Password\ncurl -u \"username:xxxx xxxx xxxx xxxx xxxx xxxx\" \\\n  https://example.com/wp-json/wp/v2/users/me\n</code></pre></p> <p>\u270f\ufe0f Practice:</p> <ul> <li>Create application passwords</li> <li>Make authenticated requests</li> <li>Implement cookie authentication in JavaScript</li> <li>Test different authentication methods</li> </ul>"},{"location":"wordpress/06-rest-api/#day-3-client-libraries","title":"Day 3: Client Libraries","text":"<p>\ud83d\udcd6 Reading:</p> <ul> <li>Client Libraries</li> <li>Backbone JavaScript Client</li> </ul> <p>\ud83d\udcda Popular Libraries:</p> <ul> <li>Backbone.js (built-in WordPress)</li> <li>wpapi (Node.js)</li> <li>wordpress-rest-api-oauth (OAuth)</li> <li>Language-specific clients (PHP, Python, Ruby, etc.)</li> </ul> <p>\u270f\ufe0f Practice:</p> <ul> <li>Use wp-api Backbone.js models</li> <li>Try a REST API client library</li> <li>Compare raw fetch vs client library</li> </ul>"},{"location":"wordpress/06-rest-api/#day-4-5-working-with-resources","title":"Day 4-5: Working with Resources","text":"<p>\ud83d\udcd6 Reading:</p> <ul> <li>Posts Reference</li> <li>Pages Reference</li> <li>Media Reference</li> <li>Users Reference</li> <li>Comments Reference</li> </ul> <p>\ud83d\udd27 CRUD Operations:</p> <p>Create: <pre><code>// Create a post\nfetch('/wp-json/wp/v2/posts', {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n    'X-WP-Nonce': nonce\n  },\n  body: JSON.stringify({\n    title: 'New Post',\n    content: 'Post content',\n    status: 'publish'\n  })\n});\n</code></pre></p> <p>Update: <pre><code>// Update a post\nfetch('/wp-json/wp/v2/posts/123', {\n  method: 'POST', // or PUT\n  headers: {\n    'Content-Type': 'application/json',\n    'X-WP-Nonce': nonce\n  },\n  body: JSON.stringify({\n    title: 'Updated Title'\n  })\n});\n</code></pre></p> <p>Delete: <pre><code>// Delete a post\nfetch('/wp-json/wp/v2/posts/123', {\n  method: 'DELETE',\n  headers: {\n    'X-WP-Nonce': nonce\n  }\n});\n</code></pre></p> <p>\u270f\ufe0f Practice:</p> <ul> <li>Create posts via API</li> <li>Update existing posts</li> <li>Delete posts</li> <li>Upload media files</li> <li>Create and manage comments</li> <li>Work with users endpoint</li> </ul>"},{"location":"wordpress/06-rest-api/#day-6-7-weekend-project_1","title":"Day 6-7: Weekend Project","text":"<p>Project: Create a \"Simple CMS Dashboard\"</p> <p>Requirements:</p> <ul> <li>\u2705 Authentication:</li> <li>Login with application passwords or cookies</li> <li>Show authenticated user info</li> <li>\u2705 Post Management:</li> <li>List all posts with pagination</li> <li>Create new posts</li> <li>Edit existing posts</li> <li>Delete posts</li> <li>Publish/draft status control</li> <li>\u2705 Media Management:</li> <li>Upload images</li> <li>Insert images in posts</li> <li>\u2705 Categories &amp; Tags:</li> <li>Assign categories and tags to posts</li> <li>\u2705 User Experience:</li> <li>Loading states</li> <li>Error handling</li> <li>Success notifications</li> </ul> <p>Deliverable: A functional content management interface using REST API.</p>"},{"location":"wordpress/06-rest-api/#week-3-extending-the-rest-api","title":"Week 3: Extending the REST API","text":"<p>Goal: Create custom endpoints and extend existing resources</p>"},{"location":"wordpress/06-rest-api/#day-1-2-custom-endpoints","title":"Day 1-2: Custom Endpoints","text":"<p>\ud83d\udcd6 Reading:</p> <ul> <li>Adding Custom Endpoints</li> <li>Routes and Endpoints</li> </ul> <p>\ud83d\udcdd Topics:</p> <ul> <li><code>register_rest_route()</code> function</li> <li>Namespace and route patterns</li> <li>HTTP methods and callbacks</li> <li>Permission callbacks</li> <li>Arguments and validation</li> </ul> <p>\u2699\ufe0f Basic Custom Endpoint: <pre><code>add_action('rest_api_init', function () {\n  register_rest_route('myplugin/v1', '/author/(?P&lt;id&gt;\\d+)', array(\n    'methods' =&gt; 'GET',\n    'callback' =&gt; 'myplugin_get_author',\n    'permission_callback' =&gt; '__return_true',\n    'args' =&gt; array(\n      'id' =&gt; array(\n        'validate_callback' =&gt; function($param) {\n          return is_numeric($param);\n        }\n      ),\n    ),\n  ));\n});\n\nfunction myplugin_get_author($request) {\n  $author = get_user_by('id', $request['id']);\n\n  if (!$author) {\n    return new WP_Error('no_author', 'Invalid author', array('status' =&gt; 404));\n  }\n\n  return array(\n    'id' =&gt; $author-&gt;ID,\n    'name' =&gt; $author-&gt;display_name,\n    'email' =&gt; $author-&gt;user_email\n  );\n}\n</code></pre></p> <p>\u270f\ufe0f Practice:</p> <ul> <li>Create a simple GET endpoint</li> <li>Create a POST endpoint with data validation</li> <li>Implement permission callbacks</li> <li>Return proper error responses</li> </ul>"},{"location":"wordpress/06-rest-api/#day-3-controller-classes","title":"Day 3: Controller Classes","text":"<p>\ud83d\udcd6 Reading:</p> <ul> <li>Controller Classes</li> </ul> <p>\ud83d\udcdd Topics:</p> <ul> <li>Extending <code>WP_REST_Controller</code></li> <li>Standard CRUD methods</li> <li>Index, create, update, delete patterns</li> <li>Schema definitions</li> <li>Consistent API design</li> </ul> <p>\u2699\ufe0f Controller Example: <pre><code>class My_REST_Controller extends WP_REST_Controller {\n  public function register_routes() {\n    register_rest_route('myplugin/v1', '/items', array(\n      array(\n        'methods' =&gt; WP_REST_Server::READABLE,\n        'callback' =&gt; array($this, 'get_items'),\n        'permission_callback' =&gt; array($this, 'get_items_permissions_check'),\n      ),\n      array(\n        'methods' =&gt; WP_REST_Server::CREATABLE,\n        'callback' =&gt; array($this, 'create_item'),\n        'permission_callback' =&gt; array($this, 'create_item_permissions_check'),\n      ),\n    ));\n  }\n\n  public function get_items($request) {\n    // Implementation\n  }\n\n  public function create_item($request) {\n    // Implementation\n  }\n}\n</code></pre></p> <p>\u270f\ufe0f Practice:</p> <ul> <li>Create a custom controller class</li> <li>Implement CRUD operations</li> <li>Define schema for your resource</li> </ul>"},{"location":"wordpress/06-rest-api/#day-4-adding-rest-support-to-custom-content","title":"Day 4: Adding REST Support to Custom Content","text":"<p>\ud83d\udcd6 Reading:</p> <ul> <li>Adding REST API Support For Custom Content Types</li> <li>Schema</li> </ul> <p>\ud83d\udcdd Topics:</p> <ul> <li>Enable REST API for custom post types</li> <li>Enable REST API for custom taxonomies</li> <li>Custom meta fields in REST API</li> <li><code>show_in_rest</code> parameter</li> <li><code>rest_base</code> parameter</li> <li>Schema definitions</li> </ul> <p>\u2699\ufe0f Custom Post Type with REST API: <pre><code>register_post_type('book', array(\n  'public' =&gt; true,\n  'label'  =&gt; 'Books',\n  'show_in_rest' =&gt; true,\n  'rest_base' =&gt; 'books',\n  'rest_controller_class' =&gt; 'WP_REST_Posts_Controller',\n  'supports' =&gt; array('title', 'editor', 'custom-fields'),\n));\n\n// Register custom meta in REST API\nregister_post_meta('book', 'isbn', array(\n  'show_in_rest' =&gt; true,\n  'single' =&gt; true,\n  'type' =&gt; 'string',\n));\n</code></pre></p> <p>\u270f\ufe0f Practice:</p> <ul> <li>Add REST API support to custom post type</li> <li>Add REST API support to custom taxonomy</li> <li>Register custom meta fields</li> <li>Test custom endpoints</li> </ul>"},{"location":"wordpress/06-rest-api/#day-5-modifying-responses","title":"Day 5: Modifying Responses","text":"<p>\ud83d\udcd6 Reading:</p> <ul> <li>Modifying Responses</li> </ul> <p>\ud83d\udcdd Topics:</p> <ul> <li><code>register_rest_field()</code> function</li> <li>Adding custom fields to responses</li> <li>Modifying existing fields</li> <li>Get and update callbacks</li> <li>Schema for custom fields</li> </ul> <p>\u2699\ufe0f Add Custom Field:</p> <pre><code>add_action('rest_api_init', function () {\n  register_rest_field('post', 'custom_field', array(\n    'get_callback' =&gt; function($post) {\n      return get_post_meta($post['id'], 'custom_field', true);\n    },\n    'update_callback' =&gt; function($value, $post) {\n      return update_post_meta($post-&gt;ID, 'custom_field', $value);\n    },\n    'schema' =&gt; array(\n      'description' =&gt; 'Custom field description',\n      'type' =&gt; 'string',\n    ),\n  ));\n});\n</code></pre> <p>\u270f\ufe0f Practice:</p> <ul> <li>Add custom fields to posts endpoint</li> <li>Add computed fields (e.g., reading time)</li> <li>Modify user endpoint responses</li> <li>Add custom fields with proper schema</li> </ul>"},{"location":"wordpress/06-rest-api/#day-6-7-weekend-project_2","title":"Day 6-7: Weekend Project","text":"<p>Project: Create a \"Portfolio REST API Plugin\"</p> <p>Requirements:</p> <ul> <li>\u2705 Custom Post Type:</li> <li>Register \"Portfolio\" custom post type</li> <li>Enable REST API support</li> <li>Custom fields: client, project_url, technologies</li> <li>\u2705 Custom Taxonomy:</li> <li>Register \"Project Type\" taxonomy</li> <li>Enable REST API support</li> <li>\u2705 Custom Endpoints:</li> <li><code>/myplugin/v1/portfolio/featured</code> - Get featured projects</li> <li><code>/myplugin/v1/portfolio/stats</code> - Get portfolio statistics</li> <li><code>/myplugin/v1/portfolio/search</code> - Custom search endpoint</li> <li>\u2705 Extended Responses:</li> <li>Add custom fields to portfolio endpoint</li> <li>Add related projects field</li> <li>Add project metadata</li> <li>\u2705 Controller Class:</li> <li>Use proper controller pattern</li> <li>Implement all CRUD operations</li> <li>Define proper schema</li> <li>\u2705 Documentation:</li> <li>Document all endpoints</li> <li>Provide usage examples</li> </ul> <p>Deliverable: A complete plugin with custom REST API implementation.</p>"},{"location":"wordpress/06-rest-api/#additional-resources","title":"Additional Resources","text":""},{"location":"wordpress/06-rest-api/#official-documentation","title":"Official Documentation","text":"<ul> <li>WordPress REST API Handbook - Complete REST API documentation</li> <li>REST API Reference - All available endpoints</li> <li>REST API Glossary - Key terms and concepts</li> </ul>"},{"location":"wordpress/06-rest-api/#tools-testing","title":"Tools &amp; Testing","text":"<ul> <li>Postman - API testing tool</li> <li>Insomnia - REST client</li> <li>WP REST API Console - WordPress plugin for testing</li> <li>REST API Handbook Console - Online testing</li> </ul>"},{"location":"wordpress/06-rest-api/#client-libraries","title":"Client Libraries","text":"<ul> <li>node-wpapi - Node.js client</li> <li>wordpress-rest-api-oauth - OAuth plugin</li> <li>Backbone.js - Built-in WordPress client</li> </ul>"},{"location":"wordpress/06-rest-api/#learning-resources","title":"Learning Resources","text":"<ul> <li>REST API Handbook - Official guide</li> <li>WP REST API FAQ - Common questions</li> <li>WordPress TV - Video tutorials</li> </ul>"},{"location":"wordpress/06-rest-api/#security","title":"Security","text":"<ul> <li>REST API Authentication - Security guide</li> <li>Application Passwords - Authentication method</li> <li>REST API Security Best Practices - Security guidelines</li> </ul>"},{"location":"wordpress/06-rest-api/#detailed-learning-content","title":"Detailed Learning Content","text":"<p>Below you'll find detailed explanations and code examples for working with the WordPress REST API.</p>"},{"location":"wordpress/06-rest-api/#what-is-rest-api","title":"What is REST API?","text":"<p>The WordPress REST API provides an interface for applications to interact with your WordPress site by sending and receiving data as JSON objects. It allows you to access WordPress data from outside WordPress, making it possible to build decoupled applications.</p>"},{"location":"wordpress/06-rest-api/#benefits-of-rest-api","title":"Benefits of REST API","text":"<ul> <li>Decoupled Architecture - Separate frontend from backend</li> <li>Mobile Applications - Build native mobile apps</li> <li>Single Page Applications - Create SPAs with React, Vue, etc.</li> <li>Integration - Connect with external services</li> <li>Flexibility - Use any programming language</li> <li>Modern Development - Build with modern JavaScript frameworks</li> </ul>"},{"location":"wordpress/06-rest-api/#rest-api-basics","title":"REST API Basics","text":""},{"location":"wordpress/06-rest-api/#api-endpoint-structure","title":"API Endpoint Structure","text":"<pre><code>https://example.com/wp-json/wp/v2/{endpoint}\n</code></pre> <p>Components:</p> <ul> <li><code>wp-json</code> - REST API base</li> <li><code>wp/v2</code> - Namespace and version</li> <li><code>{endpoint}</code> - Resource (posts, pages, users, etc.)</li> </ul>"},{"location":"wordpress/06-rest-api/#core-endpoints","title":"Core Endpoints","text":"<pre><code>/wp/v2/posts              # Posts\n/wp/v2/pages              # Pages\n/wp/v2/categories         # Categories\n/wp/v2/tags               # Tags\n/wp/v2/users              # Users\n/wp/v2/comments           # Comments\n/wp/v2/media              # Media\n/wp/v2/taxonomies         # Taxonomies\n/wp/v2/types              # Post types\n/wp/v2/statuses           # Post statuses\n</code></pre>"},{"location":"wordpress/06-rest-api/#making-api-requests","title":"Making API Requests","text":""},{"location":"wordpress/06-rest-api/#get-requests-retrieve-data","title":"GET Requests (Retrieve Data)","text":""},{"location":"wordpress/06-rest-api/#retrieve-all-posts","title":"Retrieve All Posts","text":"<pre><code># cURL\ncurl https://example.com/wp-json/wp/v2/posts\n\n# With parameters\ncurl \"https://example.com/wp-json/wp/v2/posts?per_page=5&amp;orderby=date&amp;order=desc\"\n</code></pre> <pre><code>// JavaScript (Fetch API)\nfetch('https://example.com/wp-json/wp/v2/posts')\n  .then(response =&gt; response.json())\n  .then(data =&gt; {\n    console.log(data);\n  })\n  .catch(error =&gt; console.error('Error:', error));\n\n// With async/await\nasync function getPosts() {\n  try {\n    const response = await fetch('https://example.com/wp-json/wp/v2/posts?per_page=10');\n    const posts = await response.json();\n    return posts;\n  } catch (error) {\n    console.error('Error fetching posts:', error);\n  }\n}\n</code></pre> <pre><code>// WordPress (wp_remote_get)\n$response = wp_remote_get('https://example.com/wp-json/wp/v2/posts');\n\nif (is_wp_error($response)) {\n    $error_message = $response-&gt;get_error_message();\n    echo \"Error: $error_message\";\n} else {\n    $body = wp_remote_retrieve_body($response);\n    $posts = json_decode($body);\n\n    foreach ($posts as $post) {\n        echo $post-&gt;title-&gt;rendered;\n    }\n}\n</code></pre>"},{"location":"wordpress/06-rest-api/#retrieve-single-post","title":"Retrieve Single Post","text":"<pre><code># By ID\ncurl https://example.com/wp-json/wp/v2/posts/123\n\n# By slug\ncurl \"https://example.com/wp-json/wp/v2/posts?slug=hello-world\"\n</code></pre> <pre><code>// JavaScript\nasync function getPost(postId) {\n  const response = await fetch(`https://example.com/wp-json/wp/v2/posts/${postId}`);\n  const post = await response.json();\n  return post;\n}\n</code></pre>"},{"location":"wordpress/06-rest-api/#post-requests-create-data","title":"POST Requests (Create Data)","text":""},{"location":"wordpress/06-rest-api/#create-a-post","title":"Create a Post","text":"<pre><code># cURL with authentication\ncurl -X POST https://example.com/wp-json/wp/v2/posts \\\n  -H \"Authorization: Bearer YOUR_TOKEN_HERE\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"title\": \"My New Post\",\n    \"content\": \"This is the post content.\",\n    \"status\": \"publish\"\n  }'\n</code></pre> <pre><code>// JavaScript with authentication\nasync function createPost(title, content) {\n  const response = await fetch('https://example.com/wp-json/wp/v2/posts', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + authToken\n    },\n    body: JSON.stringify({\n      title: title,\n      content: content,\n      status: 'publish'\n    })\n  });\n\n  const newPost = await response.json();\n  return newPost;\n}\n</code></pre>"},{"location":"wordpress/06-rest-api/#putpatch-requests-update-data","title":"PUT/PATCH Requests (Update Data)","text":"<pre><code># Update post\ncurl -X POST https://example.com/wp-json/wp/v2/posts/123 \\\n  -H \"Authorization: Bearer YOUR_TOKEN_HERE\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"title\": \"Updated Title\"\n  }'\n</code></pre> <pre><code>// JavaScript\nasync function updatePost(postId, updates) {\n  const response = await fetch(`https://example.com/wp-json/wp/v2/posts/${postId}`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + authToken\n    },\n    body: JSON.stringify(updates)\n  });\n\n  return await response.json();\n}\n</code></pre>"},{"location":"wordpress/06-rest-api/#delete-requests-delete-data","title":"DELETE Requests (Delete Data)","text":"<pre><code># Delete post (move to trash)\ncurl -X DELETE https://example.com/wp-json/wp/v2/posts/123 \\\n  -H \"Authorization: Bearer YOUR_TOKEN_HERE\"\n\n# Force delete (permanent)\ncurl -X DELETE \"https://example.com/wp-json/wp/v2/posts/123?force=true\" \\\n  -H \"Authorization: Bearer YOUR_TOKEN_HERE\"\n</code></pre> <pre><code>// JavaScript\nasync function deletePost(postId, force = false) {\n  const url = `https://example.com/wp-json/wp/v2/posts/${postId}${force ? '?force=true' : ''}`;\n\n  const response = await fetch(url, {\n    method: 'DELETE',\n    headers: {\n      'Authorization': 'Bearer ' + authToken\n    }\n  });\n\n  return await response.json();\n}\n</code></pre>"},{"location":"wordpress/06-rest-api/#query-parameters","title":"Query Parameters","text":""},{"location":"wordpress/06-rest-api/#common-parameters","title":"Common Parameters","text":"<pre><code>?per_page=10          # Number of items per page (default: 10, max: 100)\n?page=2               # Page number\n?search=keyword       # Search posts\n?orderby=date         # Order by (date, id, title, slug, etc.)\n?order=desc           # Order direction (asc, desc)\n?status=publish       # Post status\n?categories=5,6       # Filter by categories\n?tags=10,11           # Filter by tags\n?author=1             # Filter by author\n?before=2023-12-31    # Posts before date\n?after=2023-01-01     # Posts after date\n?slug=post-slug       # Filter by slug\n?include=1,2,3        # Include specific IDs\n?exclude=4,5,6        # Exclude specific IDs\n</code></pre>"},{"location":"wordpress/06-rest-api/#example-queries","title":"Example Queries","text":"<pre><code>// Get 20 published posts\nfetch('https://example.com/wp-json/wp/v2/posts?per_page=20&amp;status=publish')\n\n// Search posts\nfetch('https://example.com/wp-json/wp/v2/posts?search=wordpress')\n\n// Get posts from specific category\nfetch('https://example.com/wp-json/wp/v2/posts?categories=5')\n\n// Get recent posts\nfetch('https://example.com/wp-json/wp/v2/posts?orderby=date&amp;order=desc&amp;per_page=5')\n\n// Get posts with embedded data\nfetch('https://example.com/wp-json/wp/v2/posts?_embed')\n</code></pre>"},{"location":"wordpress/06-rest-api/#authentication","title":"Authentication","text":""},{"location":"wordpress/06-rest-api/#authentication-methods","title":"Authentication Methods","text":""},{"location":"wordpress/06-rest-api/#1-application-passwords-recommended","title":"1. Application Passwords (Recommended)","text":"<p>WordPress 5.6+ supports application passwords for REST API authentication.</p> <p>Generate Application Password:</p> <ol> <li>Go to Users \u2192 Profile</li> <li>Scroll to \"Application Passwords\"</li> <li>Enter name and click \"Add New Application Password\"</li> <li>Copy the generated password</li> </ol> <p>Use with Basic Auth:</p> <pre><code>const username = 'your_username';\nconst appPassword = 'xxxx xxxx xxxx xxxx xxxx xxxx';\nconst credentials = btoa(`${username}:${appPassword}`);\n\nfetch('https://example.com/wp-json/wp/v2/posts', {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n    'Authorization': 'Basic ' + credentials\n  },\n  body: JSON.stringify({\n    title: 'New Post',\n    content: 'Post content',\n    status: 'publish'\n  })\n})\n.then(response =&gt; response.json())\n.then(data =&gt; console.log(data));\n</code></pre>"},{"location":"wordpress/06-rest-api/#2-oauth-authentication","title":"2. OAuth Authentication","text":"<p>For third-party applications, use OAuth 1.0a or OAuth 2.0.</p> <p>Install OAuth plugin: <pre><code>wp plugin install rest-api-oauth1 --activate\n# or\nwp plugin install wp-oauth-server --activate\n</code></pre></p>"},{"location":"wordpress/06-rest-api/#3-cookie-authentication","title":"3. Cookie Authentication","text":"<p>For requests from the same domain (e.g., JavaScript in your theme):</p> <pre><code>// Add nonce to requests\nfetch('https://example.com/wp-json/wp/v2/posts', {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n    'X-WP-Nonce': wpApiSettings.nonce  // WordPress provides this\n  },\n  body: JSON.stringify({\n    title: 'New Post',\n    content: 'Post content',\n    status: 'publish'\n  })\n})\n</code></pre> <p>Localize nonce in theme:</p> <pre><code>function mytheme_enqueue_scripts() {\n  wp_enqueue_script('my-script', get_template_directory_uri() . '/js/script.js', array(), '1.0', true);\n\n  wp_localize_script('my-script', 'wpApiSettings', array(\n    'root' =&gt; esc_url_raw(rest_url()),\n    'nonce' =&gt; wp_create_nonce('wp_rest')\n  ));\n}\nadd_action('wp_enqueue_scripts', 'mytheme_enqueue_scripts');\n</code></pre>"},{"location":"wordpress/06-rest-api/#creating-custom-rest-api-endpoints","title":"Creating Custom REST API Endpoints","text":""},{"location":"wordpress/06-rest-api/#basic-custom-endpoint","title":"Basic Custom Endpoint","text":"<pre><code>/**\n * Register custom REST API endpoint.\n */\nfunction myplugin_register_api_endpoints() {\n  register_rest_route('myplugin/v1', '/data', array(\n    'methods'             =&gt; 'GET',\n    'callback'            =&gt; 'myplugin_get_data',\n    'permission_callback' =&gt; '__return_true', // Allow public access\n  ));\n}\nadd_action('rest_api_init', 'myplugin_register_api_endpoints');\n\n/**\n * Endpoint callback.\n */\nfunction myplugin_get_data($request) {\n  $data = array(\n    'message' =&gt; 'Hello from custom endpoint!',\n    'timestamp' =&gt; time(),\n  );\n\n  return new WP_REST_Response($data, 200);\n}\n</code></pre> <p>Access endpoint: <pre><code>GET https://example.com/wp-json/myplugin/v1/data\n</code></pre></p>"},{"location":"wordpress/06-rest-api/#endpoint-with-parameters","title":"Endpoint with Parameters","text":"<pre><code>/**\n * Register endpoint with parameters.\n */\nfunction myplugin_register_user_endpoint() {\n  register_rest_route('myplugin/v1', '/user/(?P&lt;id&gt;\\d+)', array(\n    'methods'             =&gt; 'GET',\n    'callback'            =&gt; 'myplugin_get_user_data',\n    'permission_callback' =&gt; '__return_true',\n    'args'                =&gt; array(\n      'id' =&gt; array(\n        'validate_callback' =&gt; function($param, $request, $key) {\n          return is_numeric($param);\n        }\n      ),\n    ),\n  ));\n}\nadd_action('rest_api_init', 'myplugin_register_user_endpoint');\n\n/**\n * Get user data.\n */\nfunction myplugin_get_user_data($request) {\n  $user_id = $request['id'];\n  $user = get_user_by('id', $user_id);\n\n  if (!$user) {\n    return new WP_Error('user_not_found', 'User not found', array('status' =&gt; 404));\n  }\n\n  $data = array(\n    'id'    =&gt; $user-&gt;ID,\n    'name'  =&gt; $user-&gt;display_name,\n    'email' =&gt; $user-&gt;user_email,\n  );\n\n  return new WP_REST_Response($data, 200);\n}\n</code></pre> <p>Access endpoint: <pre><code>GET https://example.com/wp-json/myplugin/v1/user/123\n</code></pre></p>"},{"location":"wordpress/06-rest-api/#post-endpoint-with-authentication","title":"POST Endpoint with Authentication","text":"<pre><code>/**\n * Register POST endpoint.\n */\nfunction myplugin_register_post_endpoint() {\n  register_rest_route('myplugin/v1', '/submit', array(\n    'methods'             =&gt; 'POST',\n    'callback'            =&gt; 'myplugin_handle_submission',\n    'permission_callback' =&gt; function() {\n      return current_user_can('edit_posts');\n    },\n    'args'                =&gt; array(\n      'title' =&gt; array(\n        'required' =&gt; true,\n        'type'     =&gt; 'string',\n        'sanitize_callback' =&gt; 'sanitize_text_field',\n      ),\n      'content' =&gt; array(\n        'required' =&gt; true,\n        'type'     =&gt; 'string',\n        'sanitize_callback' =&gt; 'sanitize_textarea_field',\n      ),\n    ),\n  ));\n}\nadd_action('rest_api_init', 'myplugin_register_post_endpoint');\n\n/**\n * Handle submission.\n */\nfunction myplugin_handle_submission($request) {\n  $title = $request-&gt;get_param('title');\n  $content = $request-&gt;get_param('content');\n\n  // Create post\n  $post_id = wp_insert_post(array(\n    'post_title'   =&gt; $title,\n    'post_content' =&gt; $content,\n    'post_status'  =&gt; 'publish',\n    'post_type'    =&gt; 'post',\n  ));\n\n  if (is_wp_error($post_id)) {\n    return new WP_Error('post_creation_failed', $post_id-&gt;get_error_message(), array('status' =&gt; 500));\n  }\n\n  return new WP_REST_Response(array(\n    'id'      =&gt; $post_id,\n    'message' =&gt; 'Post created successfully',\n  ), 201);\n}\n</code></pre>"},{"location":"wordpress/06-rest-api/#complete-crud-endpoint","title":"Complete CRUD Endpoint","text":"<pre><code>/**\n * Register CRUD endpoints.\n */\nfunction myplugin_register_crud_endpoints() {\n  $namespace = 'myplugin/v1';\n  $base = 'items';\n\n  // GET all items\n  register_rest_route($namespace, '/' . $base, array(\n    'methods'             =&gt; 'GET',\n    'callback'            =&gt; 'myplugin_get_items',\n    'permission_callback' =&gt; '__return_true',\n  ));\n\n  // GET single item\n  register_rest_route($namespace, '/' . $base . '/(?P&lt;id&gt;\\d+)', array(\n    'methods'             =&gt; 'GET',\n    'callback'            =&gt; 'myplugin_get_item',\n    'permission_callback' =&gt; '__return_true',\n  ));\n\n  // POST create item\n  register_rest_route($namespace, '/' . $base, array(\n    'methods'             =&gt; 'POST',\n    'callback'            =&gt; 'myplugin_create_item',\n    'permission_callback' =&gt; function() {\n      return current_user_can('edit_posts');\n    },\n  ));\n\n  // PUT/POST update item\n  register_rest_route($namespace, '/' . $base . '/(?P&lt;id&gt;\\d+)', array(\n    'methods'             =&gt; array('POST', 'PUT', 'PATCH'),\n    'callback'            =&gt; 'myplugin_update_item',\n    'permission_callback' =&gt; function() {\n      return current_user_can('edit_posts');\n    },\n  ));\n\n  // DELETE item\n  register_rest_route($namespace, '/' . $base . '/(?P&lt;id&gt;\\d+)', array(\n    'methods'             =&gt; 'DELETE',\n    'callback'            =&gt; 'myplugin_delete_item',\n    'permission_callback' =&gt; function() {\n      return current_user_can('delete_posts');\n    },\n  ));\n}\nadd_action('rest_api_init', 'myplugin_register_crud_endpoints');\n</code></pre>"},{"location":"wordpress/06-rest-api/#custom-post-type-rest-api-support","title":"Custom Post Type REST API Support","text":""},{"location":"wordpress/06-rest-api/#enable-rest-api-for-custom-post-type","title":"Enable REST API for Custom Post Type","text":"<pre><code>/**\n * Register custom post type with REST API support.\n */\nfunction myplugin_register_book_post_type() {\n  register_post_type('book', array(\n    'labels'       =&gt; array(\n      'name' =&gt; 'Books',\n      'singular_name' =&gt; 'Book',\n    ),\n    'public'       =&gt; true,\n    'show_in_rest' =&gt; true,  // Enable REST API\n    'rest_base'    =&gt; 'books',  // Custom endpoint name\n    'rest_controller_class' =&gt; 'WP_REST_Posts_Controller',\n  ));\n}\nadd_action('init', 'myplugin_register_book_post_type');\n</code></pre> <p>Access custom post type: <pre><code>GET https://example.com/wp-json/wp/v2/books\n</code></pre></p>"},{"location":"wordpress/06-rest-api/#add-custom-fields-to-rest-api","title":"Add Custom Fields to REST API","text":"<pre><code>/**\n * Add custom field to REST API response.\n */\nfunction myplugin_register_custom_fields() {\n  register_rest_field('post', 'custom_field', array(\n    'get_callback'    =&gt; 'myplugin_get_custom_field',\n    'update_callback' =&gt; 'myplugin_update_custom_field',\n    'schema'          =&gt; array(\n      'description' =&gt; 'Custom field data',\n      'type'        =&gt; 'string',\n      'context'     =&gt; array('view', 'edit'),\n    ),\n  ));\n}\nadd_action('rest_api_init', 'myplugin_register_custom_fields');\n\n/**\n * Get custom field value.\n */\nfunction myplugin_get_custom_field($object, $field_name, $request) {\n  return get_post_meta($object['id'], '_custom_field', true);\n}\n\n/**\n * Update custom field value.\n */\nfunction myplugin_update_custom_field($value, $object, $field_name) {\n  if (!$value || !is_string($value)) {\n    return;\n  }\n\n  return update_post_meta($object-&gt;ID, '_custom_field', sanitize_text_field($value));\n}\n</code></pre>"},{"location":"wordpress/06-rest-api/#practical-example-building-a-react-frontend","title":"Practical Example: Building a React Frontend","text":""},{"location":"wordpress/06-rest-api/#display-posts-with-react","title":"Display Posts with React","text":"<pre><code>import React, { useState, useEffect } from 'react';\n\nfunction BlogPosts() {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() =&gt; {\n    fetch('https://example.com/wp-json/wp/v2/posts?_embed')\n      .then(response =&gt; {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then(data =&gt; {\n        setPosts(data);\n        setLoading(false);\n      })\n      .catch(error =&gt; {\n        setError(error.message);\n        setLoading(false);\n      });\n  }, []);\n\n  if (loading) return &lt;div&gt;Loading...&lt;/div&gt;;\n  if (error) return &lt;div&gt;Error: {error}&lt;/div&gt;;\n\n  return (\n    &lt;div className=\"blog-posts\"&gt;\n      &lt;h1&gt;Blog Posts&lt;/h1&gt;\n      {posts.map(post =&gt; (\n        &lt;article key={post.id}&gt;\n          &lt;h2 dangerouslySetInnerHTML={{ __html: post.title.rendered }} /&gt;\n          {post._embedded &amp;&amp; post._embedded['wp:featuredmedia'] &amp;&amp; (\n            &lt;img \n              src={post._embedded['wp:featuredmedia'][0].source_url} \n              alt={post.title.rendered}\n            /&gt;\n          )}\n          &lt;div dangerouslySetInnerHTML={{ __html: post.excerpt.rendered }} /&gt;\n          &lt;a href={post.link}&gt;Read More&lt;/a&gt;\n        &lt;/article&gt;\n      ))}\n    &lt;/div&gt;\n  );\n}\n\nexport default BlogPosts;\n</code></pre>"},{"location":"wordpress/06-rest-api/#practical-exercises","title":"Practical Exercises","text":""},{"location":"wordpress/06-rest-api/#exercise-1-fetch-and-display-posts","title":"Exercise 1: Fetch and Display Posts","text":"<p>Create a simple HTML page that fetches and displays posts from your WordPress site using vanilla JavaScript.</p>"},{"location":"wordpress/06-rest-api/#exercise-2-custom-endpoint","title":"Exercise 2: Custom Endpoint","text":"<p>Create a custom REST API endpoint that returns: - Total number of posts - Total number of pages - Total number of users - Site statistics</p>"},{"location":"wordpress/06-rest-api/#exercise-3-protected-endpoint","title":"Exercise 3: Protected Endpoint","text":"<p>Create a protected endpoint that requires authentication and allows users to submit contact form data.</p>"},{"location":"wordpress/06-rest-api/#exercise-4-react-application","title":"Exercise 4: React Application","text":"<p>Build a simple React application that: - Displays a list of posts - Shows single post view - Implements search functionality - Handles pagination</p>"},{"location":"wordpress/06-rest-api/#key-takeaways","title":"Key Takeaways","text":"<ol> <li>REST API enables decoupled architecture</li> <li>Authentication is crucial for write operations</li> <li>Use query parameters for filtering data</li> <li>Custom endpoints extend functionality</li> <li>Enable REST API support for custom post types</li> <li>Validate and sanitize all inputs</li> <li>Handle errors properly with WP_Error</li> <li>Use proper HTTP status codes</li> <li>Document your custom endpoints</li> <li>Test API endpoints thoroughly</li> </ol>"},{"location":"wordpress/06-rest-api/#next-steps","title":"Next Steps","text":"<p>Continue with WP-CLI to learn command-line WordPress management.</p> <p>Resources:</p> <ul> <li>REST API Handbook</li> <li>REST API Reference</li> <li>WordPress REST API Authentication</li> </ul>"},{"location":"wordpress/07-wp-cli/","title":"WP-CLI (WordPress Command Line Interface)","text":"<p>Master the powerful command-line tool for managing WordPress installations, automating tasks, and increasing productivity.</p>"},{"location":"wordpress/07-wp-cli/#what-is-wp-cli","title":"What is WP-CLI?","text":"<p>WP-CLI is the official command-line interface for WordPress. It provides a set of commands for managing WordPress sites without using a web browser, making it essential for developers, system administrators, and power users.</p>"},{"location":"wordpress/07-wp-cli/#benefits-of-wp-cli","title":"Benefits of WP-CLI","text":"<ul> <li>Speed - Much faster than GUI operations</li> <li>Automation - Script repetitive tasks</li> <li>Bulk Operations - Perform actions on multiple items</li> <li>Server Management - Manage sites via SSH</li> <li>CI/CD Integration - Use in deployment pipelines</li> <li>No Browser Required - Work via terminal only</li> </ul>"},{"location":"wordpress/07-wp-cli/#installation","title":"Installation","text":""},{"location":"wordpress/07-wp-cli/#macos-homebrew","title":"macOS (Homebrew)","text":"<pre><code>brew install wp-cli\n</code></pre>"},{"location":"wordpress/07-wp-cli/#linuxunix","title":"Linux/Unix","text":"<pre><code>curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar\nchmod +x wp-cli.phar\nsudo mv wp-cli.phar /usr/local/bin/wp\n</code></pre>"},{"location":"wordpress/07-wp-cli/#verify-installation","title":"Verify Installation","text":"<pre><code>wp --info\n</code></pre>"},{"location":"wordpress/07-wp-cli/#update-wp-cli","title":"Update WP-CLI","text":"<pre><code>wp cli update\n</code></pre>"},{"location":"wordpress/07-wp-cli/#basic-commands","title":"Basic Commands","text":""},{"location":"wordpress/07-wp-cli/#getting-help","title":"Getting Help","text":"<pre><code># General help\nwp help\n\n# Command-specific help\nwp plugin help\nwp plugin install --help\n\n# List all commands\nwp cli cmd-dump\n</code></pre>"},{"location":"wordpress/07-wp-cli/#core-commands","title":"Core Commands","text":""},{"location":"wordpress/07-wp-cli/#download-wordpress","title":"Download WordPress","text":"<pre><code># Download latest WordPress\nwp core download\n\n# Download specific version\nwp core download --version=6.3\n\n# Download in specific language\nwp core download --locale=es_ES\n\n# Force download (overwrite existing)\nwp core download --force\n</code></pre>"},{"location":"wordpress/07-wp-cli/#install-wordpress","title":"Install WordPress","text":"<pre><code># Create wp-config.php\nwp config create --dbname=wordpress --dbuser=root --dbpass=password --dbhost=localhost\n\n# Install WordPress\nwp core install \\\n  --url=example.test \\\n  --title=\"My WordPress Site\" \\\n  --admin_user=admin \\\n  --admin_password=password \\\n  --admin_email=admin@example.com\n\n# Complete installation in one command\nwp core download &amp;&amp; \\\nwp config create --dbname=wordpress --dbuser=root --dbpass=password &amp;&amp; \\\nwp core install --url=example.test --title=\"My Site\" --admin_user=admin --admin_password=password --admin_email=admin@example.com\n</code></pre>"},{"location":"wordpress/07-wp-cli/#update-wordpress","title":"Update WordPress","text":"<pre><code># Check for core updates\nwp core check-update\n\n# Update to latest version\nwp core update\n\n# Update to specific version\nwp core update --version=6.3\n\n# Update database\nwp core update-db\n</code></pre>"},{"location":"wordpress/07-wp-cli/#wordpress-information","title":"WordPress Information","text":"<pre><code># Check WordPress version\nwp core version\n\n# Check if WordPress is installed\nwp core is-installed\n\n# Verify core files\nwp core verify-checksums\n</code></pre>"},{"location":"wordpress/07-wp-cli/#plugin-management","title":"Plugin Management","text":""},{"location":"wordpress/07-wp-cli/#list-plugins","title":"List Plugins","text":"<pre><code># List all plugins\nwp plugin list\n\n# List active plugins\nwp plugin list --status=active\n\n# List inactive plugins\nwp plugin list --status=inactive\n\n# Output as JSON\nwp plugin list --format=json\n</code></pre>"},{"location":"wordpress/07-wp-cli/#install-plugins","title":"Install Plugins","text":"<pre><code># Install plugin\nwp plugin install query-monitor\n\n# Install and activate\nwp plugin install query-monitor --activate\n\n# Install specific version\nwp plugin install query-monitor --version=3.12.0 --activate\n\n# Install from ZIP\nwp plugin install https://example.com/plugin.zip --activate\n\n# Install multiple plugins\nwp plugin install query-monitor user-switching debug-bar --activate\n</code></pre>"},{"location":"wordpress/07-wp-cli/#activatedeactivate-plugins","title":"Activate/Deactivate Plugins","text":"<pre><code># Activate plugin\nwp plugin activate query-monitor\n\n# Activate all plugins\nwp plugin activate --all\n\n# Deactivate plugin\nwp plugin deactivate query-monitor\n\n# Deactivate all plugins\nwp plugin deactivate --all\n\n# Toggle plugin status\nwp plugin toggle query-monitor\n</code></pre>"},{"location":"wordpress/07-wp-cli/#update-plugins","title":"Update Plugins","text":"<pre><code># List plugin updates\nwp plugin list --update=available\n\n# Update specific plugin\nwp plugin update query-monitor\n\n# Update all plugins\nwp plugin update --all\n\n# Update all except specific plugins\nwp plugin update --all --exclude=woocommerce,jetpack\n</code></pre>"},{"location":"wordpress/07-wp-cli/#uninstall-plugins","title":"Uninstall Plugins","text":"<pre><code># Delete plugin (deactivate first)\nwp plugin deactivate plugin-name\nwp plugin delete plugin-name\n\n# Uninstall plugin (runs uninstall.php)\nwp plugin uninstall plugin-name --deactivate\n</code></pre>"},{"location":"wordpress/07-wp-cli/#plugin-information","title":"Plugin Information","text":"<pre><code># Get plugin status\nwp plugin status query-monitor\n\n# Get plugin path\nwp plugin path query-monitor\n\n# Search for plugins\nwp plugin search query monitor\n</code></pre>"},{"location":"wordpress/07-wp-cli/#theme-management","title":"Theme Management","text":""},{"location":"wordpress/07-wp-cli/#list-themes","title":"List Themes","text":"<pre><code># List all themes\nwp theme list\n\n# List active theme\nwp theme list --status=active\n\n# Get current theme\nwp theme list --status=active --field=name\n</code></pre>"},{"location":"wordpress/07-wp-cli/#install-themes","title":"Install Themes","text":"<pre><code># Install theme\nwp theme install twentytwentyfour\n\n# Install and activate\nwp theme install twentytwentyfour --activate\n\n# Install from ZIP\nwp theme install https://example.com/theme.zip --activate\n</code></pre>"},{"location":"wordpress/07-wp-cli/#activate-themes","title":"Activate Themes","text":"<pre><code># Activate theme\nwp theme activate twentytwentyfour\n\n# Get current theme\nwp theme list --status=active\n</code></pre>"},{"location":"wordpress/07-wp-cli/#update-themes","title":"Update Themes","text":"<pre><code># Update specific theme\nwp theme update twentytwentyfour\n\n# Update all themes\nwp theme update --all\n</code></pre>"},{"location":"wordpress/07-wp-cli/#delete-themes","title":"Delete Themes","text":"<pre><code># Delete theme\nwp theme delete twentytwentythree\n\n# Delete all themes except active\nwp theme delete --all\n</code></pre>"},{"location":"wordpress/07-wp-cli/#user-management","title":"User Management","text":""},{"location":"wordpress/07-wp-cli/#list-users","title":"List Users","text":"<pre><code># List all users\nwp user list\n\n# List with specific fields\nwp user list --fields=ID,user_login,user_email,role\n\n# Filter by role\nwp user list --role=administrator\n\n# Output as table\nwp user list --format=table\n</code></pre>"},{"location":"wordpress/07-wp-cli/#create-users","title":"Create Users","text":"<pre><code># Create user\nwp user create johndoe john@example.com --role=editor\n\n# Create with password\nwp user create johndoe john@example.com --role=author --user_pass=password123\n\n# Create with first and last name\nwp user create johndoe john@example.com \\\n  --role=editor \\\n  --first_name=John \\\n  --last_name=Doe \\\n  --display_name=\"John Doe\"\n</code></pre>"},{"location":"wordpress/07-wp-cli/#update-users","title":"Update Users","text":"<pre><code># Update user role\nwp user update 123 --role=administrator\n\n# Update user email\nwp user update johndoe --user_email=newemail@example.com\n\n# Reset user password\nwp user update johndoe --user_pass=newpassword123\n</code></pre>"},{"location":"wordpress/07-wp-cli/#delete-users","title":"Delete Users","text":"<pre><code># Delete user (reassign posts to another user)\nwp user delete 123 --reassign=456\n\n# Delete multiple users\nwp user delete 123 456 789 --reassign=1\n</code></pre>"},{"location":"wordpress/07-wp-cli/#user-meta","title":"User Meta","text":"<pre><code># Get user meta\nwp user meta get 123 first_name\n\n# Add user meta\nwp user meta add 123 custom_field \"value\"\n\n# Update user meta\nwp user meta update 123 custom_field \"new value\"\n\n# Delete user meta\nwp user meta delete 123 custom_field\n\n# List all user meta\nwp user meta list 123\n</code></pre>"},{"location":"wordpress/07-wp-cli/#post-management","title":"Post Management","text":""},{"location":"wordpress/07-wp-cli/#list-posts","title":"List Posts","text":"<pre><code># List all posts\nwp post list\n\n# List with specific fields\nwp post list --fields=ID,post_title,post_status,post_date\n\n# Filter by post type\nwp post list --post_type=page\n\n# Filter by status\nwp post list --post_status=publish\n\n# Filter by author\nwp post list --author=1\n\n# Order by date\nwp post list --orderby=date --order=DESC\n</code></pre>"},{"location":"wordpress/07-wp-cli/#create-posts","title":"Create Posts","text":"<pre><code># Create post\nwp post create --post_title=\"My New Post\" --post_status=publish\n\n# Create with content\nwp post create \\\n  --post_title=\"Hello World\" \\\n  --post_content=\"This is the post content.\" \\\n  --post_status=publish \\\n  --post_type=post \\\n  --post_author=1\n\n# Create from file\nwp post create ./content.txt --post_title=\"From File\"\n\n# Generate dummy posts\nwp post generate --count=50\n\n# Generate posts with specific type\nwp post generate --count=20 --post_type=page\n</code></pre>"},{"location":"wordpress/07-wp-cli/#update-posts","title":"Update Posts","text":"<pre><code># Update post title\nwp post update 123 --post_title=\"Updated Title\"\n\n# Update post status\nwp post update 123 --post_status=draft\n\n# Update multiple posts\nwp post update 123 456 789 --post_status=publish\n</code></pre>"},{"location":"wordpress/07-wp-cli/#delete-posts","title":"Delete Posts","text":"<pre><code># Move post to trash\nwp post delete 123\n\n# Force delete (permanent)\nwp post delete 123 --force\n\n# Delete all posts of specific type\nwp post delete $(wp post list --post_type=post --format=ids)\n\n# Empty trash\nwp post delete $(wp post list --post_status=trash --format=ids) --force\n</code></pre>"},{"location":"wordpress/07-wp-cli/#post-meta","title":"Post Meta","text":"<pre><code># Get post meta\nwp post meta get 123 _thumbnail_id\n\n# Add post meta\nwp post meta add 123 custom_field \"value\"\n\n# Update post meta\nwp post meta update 123 custom_field \"new value\"\n\n# Delete post meta\nwp post meta delete 123 custom_field\n\n# List all post meta\nwp post meta list 123\n</code></pre>"},{"location":"wordpress/07-wp-cli/#database-management","title":"Database Management","text":""},{"location":"wordpress/07-wp-cli/#database-information","title":"Database Information","text":"<pre><code># Show database tables\nwp db tables\n\n# Show table size\nwp db size --tables\n\n# Check database\nwp db check\n\n# Optimize database\nwp db optimize\n\n# Repair database\nwp db repair\n</code></pre>"},{"location":"wordpress/07-wp-cli/#database-exportimport","title":"Database Export/Import","text":"<pre><code># Export database\nwp db export\n\n# Export to specific file\nwp db export backup.sql\n\n# Export with compression\nwp db export backup.sql.gz\n\n# Import database\nwp db import backup.sql\n\n# Import from URL\nwp db import https://example.com/backup.sql\n</code></pre>"},{"location":"wordpress/07-wp-cli/#database-queries","title":"Database Queries","text":"<pre><code># Run SQL query\nwp db query \"SELECT * FROM wp_posts WHERE post_status = 'publish' LIMIT 5\"\n\n# Get specific data\nwp db query \"SELECT COUNT(*) FROM wp_posts WHERE post_type = 'post'\"\n\n# Run SQL file\nwp db query &lt; queries.sql\n</code></pre>"},{"location":"wordpress/07-wp-cli/#search-and-replace","title":"Search and Replace","text":"<pre><code># Basic search-replace\nwp search-replace 'old-url.com' 'new-url.com'\n\n# Dry run (preview changes)\nwp search-replace 'old-url.com' 'new-url.com' --dry-run\n\n# Search-replace in specific table\nwp search-replace 'old-url.com' 'new-url.com' wp_posts\n\n# Case-insensitive search\nwp search-replace 'old-url.com' 'new-url.com' --all-tables-with-prefix --precise\n\n# Report changes\nwp search-replace 'old-url.com' 'new-url.com' --report\n\n# Skip specific columns\nwp search-replace 'old' 'new' --skip-columns=guid\n</code></pre>"},{"location":"wordpress/07-wp-cli/#cache-management","title":"Cache Management","text":"<pre><code># Flush cache\nwp cache flush\n\n# Clear transients\nwp transient delete --all\n\n# Clear expired transients\nwp transient delete --expired\n</code></pre>"},{"location":"wordpress/07-wp-cli/#cron-management","title":"Cron Management","text":""},{"location":"wordpress/07-wp-cli/#list-scheduled-events","title":"List Scheduled Events","text":"<pre><code># List all cron events\nwp cron event list\n\n# List specific event\nwp cron event list --fields=hook,next_run,recurrence\n</code></pre>"},{"location":"wordpress/07-wp-cli/#run-cron","title":"Run Cron","text":"<pre><code># Run all due cron events\nwp cron event run --due-now\n\n# Run specific event\nwp cron event run wp_version_check\n</code></pre>"},{"location":"wordpress/07-wp-cli/#schedule-events","title":"Schedule Events","text":"<pre><code># Schedule single event\nwp cron event schedule my_custom_event '+1 hour'\n\n# Schedule recurring event\nwp cron event schedule my_custom_event now hourly\n</code></pre>"},{"location":"wordpress/07-wp-cli/#delete-events","title":"Delete Events","text":"<pre><code># Delete specific event\nwp cron event delete my_custom_event\n\n# Delete all events for a hook\nwp cron event delete my_custom_event --all\n</code></pre>"},{"location":"wordpress/07-wp-cli/#media-management","title":"Media Management","text":"<pre><code># Import media file\nwp media import image.jpg --title=\"My Image\" --alt=\"Image description\"\n\n# Import from URL\nwp media import https://example.com/image.jpg\n\n# Import multiple files\nwp media import *.jpg\n\n# Regenerate thumbnails\nwp media regenerate --yes\n\n# Regenerate specific image\nwp media regenerate 123\n</code></pre>"},{"location":"wordpress/07-wp-cli/#site-options","title":"Site Options","text":"<pre><code># Get option\nwp option get blogname\n\n# List all options\nwp option list\n\n# Add option\nwp option add my_option \"value\"\n\n# Update option\nwp option update blogname \"New Site Name\"\n\n# Delete option\nwp option delete my_option\n\n# Get option JSON format\nwp option get my_option --format=json\n</code></pre>"},{"location":"wordpress/07-wp-cli/#rewrite-rules","title":"Rewrite Rules","text":"<pre><code># Flush rewrite rules\nwp rewrite flush\n\n# List rewrite rules\nwp rewrite list\n\n# View permalink structure\nwp rewrite structure\n</code></pre>"},{"location":"wordpress/07-wp-cli/#multisite-commands","title":"Multisite Commands","text":"<pre><code># List sites\nwp site list\n\n# Create site\nwp site create --slug=newsite --title=\"New Site\"\n\n# Delete site\nwp site delete 2\n\n# Empty site\nwp site empty 2 --yes\n\n# Activate plugin network-wide\nwp plugin activate akismet --network\n</code></pre>"},{"location":"wordpress/07-wp-cli/#package-management","title":"Package Management","text":"<pre><code># List installed packages\nwp package list\n\n# Install package\nwp package install wp-cli/doctor-command\n\n# Update packages\nwp package update\n\n# Uninstall package\nwp package uninstall wp-cli/doctor-command\n</code></pre>"},{"location":"wordpress/07-wp-cli/#scaffolding","title":"Scaffolding","text":""},{"location":"wordpress/07-wp-cli/#generate-plugin","title":"Generate Plugin","text":"<pre><code># Create plugin structure\nwp scaffold plugin my-plugin\n\n# Create plugin with specific features\nwp scaffold plugin my-plugin \\\n  --plugin_name=\"My Plugin\" \\\n  --plugin_description=\"Plugin description\" \\\n  --plugin_author=\"Your Name\" \\\n  --plugin_uri=\"https://example.com\"\n</code></pre>"},{"location":"wordpress/07-wp-cli/#generate-post-type","title":"Generate Post Type","text":"<pre><code># Generate custom post type\nwp scaffold post-type book --plugin=my-plugin\n\n# Generate with taxonomies\nwp scaffold post-type book --plugin=my-plugin --taxonomy=genre\n</code></pre>"},{"location":"wordpress/07-wp-cli/#generate-taxonomy","title":"Generate Taxonomy","text":"<pre><code># Generate custom taxonomy\nwp scaffold taxonomy genre --plugin=my-plugin --post_types=book\n</code></pre>"},{"location":"wordpress/07-wp-cli/#generate-theme","title":"Generate Theme","text":"<pre><code># Create theme structure\nwp scaffold theme my-theme\n\n# Create child theme\nwp scaffold child-theme my-child-theme --parent_theme=twentytwentyfour\n</code></pre>"},{"location":"wordpress/07-wp-cli/#configuration-file-wp-cliyml","title":"Configuration File (wp-cli.yml)","text":"<p>Create <code>wp-cli.yml</code> in your project root:</p> <pre><code># wp-cli.yml\npath: public_html\n\n# Set default user\nuser: admin\n\n# Skip plugins\nskip-plugins:\n  - plugin1\n  - plugin2\n\n# Skip themes\nskip-themes:\n  - theme1\n\n# Disable colors\ncolor: false\n\n# Require specific WP-CLI version\nrequire:\n  - wp-cli/wp-cli: ^2.8\n</code></pre>"},{"location":"wordpress/07-wp-cli/#aliases","title":"Aliases","text":"<p>Create aliases in <code>~/.wp-cli/config.yml</code>:</p> <pre><code># ~/.wp-cli/config.yml\n@dev:\n  ssh: user@dev.example.com\n  path: /var/www/html\n\n@prod:\n  ssh: user@prod.example.com\n  path: /var/www/html\n</code></pre> <p>Use aliases:</p> <pre><code># Run command on remote server\nwp @dev plugin list\nwp @prod core update\n</code></pre>"},{"location":"wordpress/07-wp-cli/#shell-scripts-with-wp-cli","title":"Shell Scripts with WP-CLI","text":""},{"location":"wordpress/07-wp-cli/#backup-script","title":"Backup Script","text":"<pre><code>#!/bin/bash\n# backup.sh\n\nDATE=$(date +%Y%m%d_%H%M%S)\nBACKUP_DIR=\"backups\"\n\nmkdir -p $BACKUP_DIR\n\n# Export database\nwp db export \"$BACKUP_DIR/db_$DATE.sql\"\n\n# Create tar archive\ntar -czf \"$BACKUP_DIR/files_$DATE.tar.gz\" wp-content/\n\necho \"Backup completed: $DATE\"\n</code></pre>"},{"location":"wordpress/07-wp-cli/#deployment-script","title":"Deployment Script","text":"<pre><code>#!/bin/bash\n# deploy.sh\n\n# Update WordPress\nwp core update\n\n# Update plugins\nwp plugin update --all\n\n# Update themes\nwp theme update --all\n\n# Clear cache\nwp cache flush\n\n# Flush rewrite rules\nwp rewrite flush\n\necho \"Deployment completed\"\n</code></pre>"},{"location":"wordpress/07-wp-cli/#practical-exercises","title":"Practical Exercises","text":""},{"location":"wordpress/07-wp-cli/#exercise-1-complete-wordpress-setup","title":"Exercise 1: Complete WordPress Setup","text":"<p>Write a script to set up a new WordPress installation with: - Database creation - WordPress download and installation - Essential plugins installation - Theme activation - User creation</p>"},{"location":"wordpress/07-wp-cli/#exercise-2-content-migration","title":"Exercise 2: Content Migration","text":"<p>Create a script to: - Export posts from one site - Import posts to another site - Update URLs - Regenerate thumbnails</p>"},{"location":"wordpress/07-wp-cli/#exercise-3-maintenance-script","title":"Exercise 3: Maintenance Script","text":"<p>Build a maintenance script that: - Backs up database - Updates core, plugins, and themes - Checks for broken links - Optimizes database - Clears cache</p>"},{"location":"wordpress/07-wp-cli/#exercise-4-bulk-operations","title":"Exercise 4: Bulk Operations","text":"<p>Create a script to: - Generate 100 sample posts - Assign random categories - Set featured images - Publish posts</p>"},{"location":"wordpress/07-wp-cli/#key-takeaways","title":"Key Takeaways","text":"<ol> <li>WP-CLI is essential for WordPress developers</li> <li>Automate repetitive tasks with scripts</li> <li>Use search-replace carefully with --dry-run</li> <li>Backup before major changes</li> <li>Leverage scaffolding for faster development</li> <li>Master database commands for migrations</li> <li>Use aliases for multi-server management</li> <li>Integrate into CI/CD pipelines</li> <li>Generate dummy content for testing</li> <li>Document custom scripts</li> </ol>"},{"location":"wordpress/07-wp-cli/#next-steps","title":"Next Steps","text":"<p>Continue with Advanced Plugin Development to learn complex plugin patterns and techniques.</p> <p>Resources:</p> <ul> <li>WP-CLI Documentation</li> <li>WP-CLI Command Reference</li> <li>WP-CLI Handbook</li> <li>WP-CLI GitHub</li> </ul>"},{"location":"wordpress/SUMMARY/","title":"WordPress Documentation Summary","text":""},{"location":"wordpress/SUMMARY/#whats-been-created","title":"What's Been Created","text":"<p>A comprehensive WordPress development documentation has been created in the <code>docs/wordpress/</code> directory for weDevs developer onboarding.</p>"},{"location":"wordpress/SUMMARY/#file-structure","title":"File Structure","text":"<pre><code>docs/wordpress/\n\u251c\u2500\u2500 index.md                              # Course overview and learning path\n\u251c\u2500\u2500 README.md                             # Documentation guide and navigation\n\u251c\u2500\u2500 01-engineering-basics.md              # Development environment setup\n\u251c\u2500\u2500 02-introducing-wordpress.md           # WordPress fundamentals\n\u251c\u2500\u2500 03-coding-conventions.md              # Coding standards and best practices\n\u251c\u2500\u2500 04-basic-plugin-development.md        # Plugin development basics\n\u251c\u2500\u2500 05-basic-theme-development.md         # Theme development basics\n\u251c\u2500\u2500 06-rest-api.md                        # WordPress REST API\n\u251c\u2500\u2500 07-wp-cli.md                          # Command-line interface\n\u251c\u2500\u2500 08-advanced-plugin-development.md     # Advanced plugin techniques\n\u251c\u2500\u2500 09-advanced-theme-development.md      # Advanced theme development\n\u2514\u2500\u2500 SUMMARY.md                            # This file\n</code></pre>"},{"location":"wordpress/SUMMARY/#documentation-contents","title":"Documentation Contents","text":""},{"location":"wordpress/SUMMARY/#1-engineering-basics-01-engineering-basicsmd","title":"1. Engineering Basics (01-engineering-basics.md)","text":"<ul> <li>Prerequisites (HTML, CSS, JavaScript, PHP, MySQL)</li> <li>Development environment setup (Herd, Local, Docker)</li> <li>Code editor configuration (VS Code)</li> <li>Version control (Git)</li> <li>Debugging tools</li> <li>Length: ~650 lines</li> </ul>"},{"location":"wordpress/SUMMARY/#2-introducing-wordpress-02-introducing-wordpressmd","title":"2. Introducing WordPress (02-introducing-wordpress.md)","text":"<ul> <li>WordPress architecture</li> <li>Installation methods (manual and WP-CLI)</li> <li>Admin dashboard navigation</li> <li>Content management (posts, pages, media)</li> <li>User roles and permissions</li> <li>Themes and plugins basics</li> <li>The Loop</li> <li>Template hierarchy</li> <li>Length: ~540 lines</li> </ul>"},{"location":"wordpress/SUMMARY/#3-coding-conventions-03-coding-conventionsmd","title":"3. Coding Conventions (03-coding-conventions.md)","text":"<ul> <li>WordPress coding standards (PHP, HTML, CSS, JavaScript)</li> <li>Naming conventions</li> <li>Security best practices (sanitization, escaping, nonces)</li> <li>Database queries</li> <li>Code documentation (PHPDoc)</li> <li>Code quality tools (PHP_CodeSniffer)</li> <li>Length: ~850 lines</li> </ul>"},{"location":"wordpress/SUMMARY/#4-basic-plugin-development-04-basic-plugin-developmentmd","title":"4. Basic Plugin Development (04-basic-plugin-development.md)","text":"<ul> <li>Plugin structure and architecture</li> <li>Hooks: Actions and Filters</li> <li>Common WordPress hooks</li> <li>Creating custom plugins</li> <li>Plugin activation/deactivation</li> <li>Enqueuing scripts and styles</li> <li>AJAX in WordPress</li> <li>Shortcodes</li> <li>Widgets</li> <li>Custom post types</li> <li>Length: ~1,050 lines</li> </ul>"},{"location":"wordpress/SUMMARY/#5-basic-theme-development-05-basic-theme-developmentmd","title":"5. Basic Theme Development (05-basic-theme-development.md)","text":"<ul> <li>Theme structure and requirements</li> <li>Template hierarchy</li> <li>Essential template files (header, footer, sidebar, etc.)</li> <li>functions.php</li> <li>Template tags</li> <li>The Loop explained</li> <li>Custom page templates</li> <li>Enqueuing assets</li> <li>Navigation menus</li> <li>Widget areas</li> <li>Length: ~950 lines</li> </ul>"},{"location":"wordpress/SUMMARY/#6-rest-api-06-rest-apimd","title":"6. REST API (06-rest-api.md)","text":"<ul> <li>REST API basics and benefits</li> <li>Core endpoints</li> <li>Making API requests (GET, POST, PUT, DELETE)</li> <li>Query parameters</li> <li>Authentication methods (Application Passwords, OAuth, Cookie)</li> <li>Creating custom endpoints</li> <li>CRUD operations</li> <li>Custom post types in REST API</li> <li>React integration example</li> <li>Length: ~850 lines</li> </ul>"},{"location":"wordpress/SUMMARY/#7-wp-cli-07-wp-climd","title":"7. WP-CLI (07-wp-cli.md)","text":"<ul> <li>WP-CLI installation and setup</li> <li>Core commands (download, install, update)</li> <li>Plugin management</li> <li>Theme management</li> <li>User management</li> <li>Post management</li> <li>Database operations (export, import, search-replace)</li> <li>Media management</li> <li>Cron management</li> <li>Scaffolding (plugin, theme, post type generation)</li> <li>Configuration and aliases</li> <li>Automation scripts</li> <li>Length: ~900 lines</li> </ul>"},{"location":"wordpress/SUMMARY/#8-advanced-plugin-development-08-advanced-plugin-developmentmd","title":"8. Advanced Plugin Development (08-advanced-plugin-development.md)","text":"<ul> <li>Object-oriented plugin architecture</li> <li>Autoloading classes</li> <li>Main plugin class structure</li> <li>Custom database tables (creation, CRUD operations)</li> <li>Advanced REST API controller</li> <li>Background processing with cron jobs</li> <li>Admin interface with Settings API</li> <li>Complex plugin patterns</li> <li>Length: ~850 lines</li> </ul>"},{"location":"wordpress/SUMMARY/#9-advanced-theme-development-09-advanced-theme-developmentmd","title":"9. Advanced Theme Development (09-advanced-theme-development.md)","text":"<ul> <li>Block themes and Full Site Editing (FSE)</li> <li>theme.json configuration</li> <li>Block templates</li> <li>Custom Gutenberg blocks development</li> <li>Block patterns</li> <li>Theme Customizer API</li> <li>Performance optimization (lazy loading, minification, critical CSS)</li> <li>Accessibility (ARIA landmarks, keyboard navigation)</li> <li>Length: ~800 lines</li> </ul>"},{"location":"wordpress/SUMMARY/#statistics","title":"Statistics","text":"<ul> <li>Total Files: 11 (including README and SUMMARY)</li> <li>Total Documentation: ~7,000+ lines</li> <li>Code Examples: 200+ complete, working examples</li> <li>Topics Covered: 50+ WordPress development topics</li> <li>Exercises: 30+ practical exercises</li> <li>Learning Time: 8-12 weeks</li> </ul>"},{"location":"wordpress/SUMMARY/#key-features","title":"Key Features","text":""},{"location":"wordpress/SUMMARY/#comprehensive-coverage","title":"Comprehensive Coverage","text":"<ul> <li>\u2705 Beginner to advanced progression</li> <li>\u2705 Step-by-step tutorials</li> <li>\u2705 Real-world examples</li> <li>\u2705 Best practices and conventions</li> <li>\u2705 Security considerations</li> <li>\u2705 Performance optimization</li> </ul>"},{"location":"wordpress/SUMMARY/#practical-approach","title":"Practical Approach","text":"<ul> <li>\u2705 Complete code examples</li> <li>\u2705 Hands-on exercises</li> <li>\u2705 Project ideas</li> <li>\u2705 Common pitfalls to avoid</li> <li>\u2705 Debugging tips</li> </ul>"},{"location":"wordpress/SUMMARY/#modern-wordpress","title":"Modern WordPress","text":"<ul> <li>\u2705 Block themes (FSE)</li> <li>\u2705 Gutenberg blocks</li> <li>\u2705 REST API</li> <li>\u2705 WP-CLI</li> <li>\u2705 Modern JavaScript (React)</li> <li>\u2705 Performance best practices</li> </ul>"},{"location":"wordpress/SUMMARY/#integration-with-mkdocs","title":"Integration with MkDocs","text":"<p>The documentation has been integrated into the MkDocs navigation structure:</p> <pre><code>- WordPress Development:\n  - Overview: wordpress/index.md\n  - Engineering Basics: wordpress/01-engineering-basics.md\n  - Introducing WordPress: wordpress/02-introducing-wordpress.md\n  - Coding Conventions: wordpress/03-coding-conventions.md\n  - Basic Plugin Development: wordpress/04-basic-plugin-development.md\n  - Basic Theme Development: wordpress/05-basic-theme-development.md\n  - REST API: wordpress/06-rest-api.md\n  - WP-CLI: wordpress/07-wp-cli.md\n  - Advanced Plugin Development: wordpress/08-advanced-plugin-development.md\n  - Advanced Theme Development: wordpress/09-advanced-theme-development.md\n</code></pre>"},{"location":"wordpress/SUMMARY/#how-to-use","title":"How to Use","text":""},{"location":"wordpress/SUMMARY/#view-in-mkdocs","title":"View in MkDocs","text":"<pre><code>cd /Users/mahbub/Development/workspaces/developer-onboarding-docs\nmkdocs serve\n</code></pre> <p>Then navigate to <code>http://localhost:8000</code> and click on \"WordPress Development\" in the navigation.</p>"},{"location":"wordpress/SUMMARY/#build-documentation-site","title":"Build Documentation Site","text":"<pre><code>mkdocs build\n</code></pre> <p>This creates a static site in the <code>site/</code> directory.</p>"},{"location":"wordpress/SUMMARY/#deploy-to-github-pages","title":"Deploy to GitHub Pages","text":"<pre><code>mkdocs gh-deploy\n</code></pre>"},{"location":"wordpress/SUMMARY/#next-steps","title":"Next Steps","text":"<ol> <li>Review the documentation to ensure it meets your needs</li> <li>Test the MkDocs build to verify everything works</li> <li>Customize as needed - add your own examples or exercises</li> <li>Share with team - great resource for onboarding developers</li> <li>Keep updated - WordPress evolves, so update documentation accordingly</li> </ol>"},{"location":"wordpress/SUMMARY/#learning-outcomes","title":"Learning Outcomes","text":"<p>After completing this course, developers will be able to:</p> <ol> <li>Set up a professional WordPress development environment</li> <li>Build custom plugins with proper architecture</li> <li>Develop modern WordPress themes</li> <li>Create custom Gutenberg blocks</li> <li>Implement REST API endpoints</li> <li>Use WP-CLI for efficient workflows</li> <li>Follow WordPress coding standards</li> <li>Build secure, performant WordPress sites</li> <li>Work with block themes (FSE)</li> <li>Optimize WordPress performance</li> </ol>"},{"location":"wordpress/SUMMARY/#additional-resources","title":"Additional Resources","text":"<p>Each module includes links to:</p> <ul> <li>Official WordPress documentation</li> <li>WordPress Codex</li> <li>Community resources</li> <li>Video tutorials</li> <li>Best practice guides</li> </ul>"},{"location":"wordpress/SUMMARY/#quality-checklist","title":"Quality Checklist","text":"<ul> <li>\u2705 All 9 modules created</li> <li>\u2705 Index/overview page created</li> <li>\u2705 README guide created</li> <li>\u2705 Integrated with MkDocs navigation</li> <li>\u2705 Proper markdown formatting</li> <li>\u2705 Code syntax highlighting</li> <li>\u2705 Progressive difficulty</li> <li>\u2705 Practical exercises included</li> <li>\u2705 Real-world examples</li> <li>\u2705 Best practices emphasized</li> <li>\u2705 Security considerations covered</li> <li>\u2705 Performance optimization included</li> </ul>"},{"location":"wordpress/SUMMARY/#conclusion","title":"Conclusion","text":"<p>A complete, comprehensive WordPress development curriculum has been created, covering everything from basic setup to advanced development techniques. The documentation is well-organized, easy to navigate, and includes practical examples and exercises throughout.</p> <p>Created: October 3, 2025 Organization: weDevs Format: Markdown for MkDocs Status: \u2705 Complete</p>"}]}